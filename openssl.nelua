##[[
  cinclude "<openssl/ssl.h>"
  cinclude "<openssl/err.h>"
  linklib "ssl"
  linklib "crypto"
]]
global timeval: type <cimport,nodecl,ctypedef'timeval'> = @record{
  tv_sec: ctime_t,
  tv_usec: clong
}
global tm: type <cimport,nodecl,ctypedef'tm'> = @record{
  tm_sec: cint,
  tm_min: cint,
  tm_hour: cint,
  tm_mday: cint,
  tm_mon: cint,
  tm_year: cint,
  tm_wday: cint,
  tm_yday: cint,
  tm_isdst: cint,
  __tm_gmtoff: clong,
  __tm_zone: cstring
}
global FILE: type <cimport,nodecl,cincomplete> = @record{}
global OPENSSL_STACK: type <cimport,nodecl,forwarddecl> = @record{}
global OPENSSL_sk_compfunc: type <cimport,nodecl> = @function(a1: pointer, a2: pointer): cint
global OPENSSL_sk_freefunc: type <cimport,nodecl> = @function(a1: pointer): void
global OPENSSL_sk_copyfunc: type <cimport,nodecl> = @function(a1: pointer): pointer
global OPENSSL_STRING: type <cimport,nodecl> = @cstring
global OPENSSL_CSTRING: type <cimport,nodecl> = @cstring
global OPENSSL_BLOCK: type <cimport,nodecl> = @pointer
global BIO: type <cimport,nodecl,forwarddecl> = @record{}
global BIGNUM: type <cimport,nodecl,forwarddecl> = @record{}
global ERR_STATE: type <cimport,nodecl,forwarddecl> = @record{}
global EVP_CIPHER_CTX: type <cimport,nodecl,forwarddecl> = @record{}
global EVP_MD: type <cimport,nodecl,forwarddecl> = @record{}
global EVP_MAC_CTX: type <cimport,nodecl,forwarddecl> = @record{}
global EVP_PKEY: type <cimport,nodecl,forwarddecl> = @record{}
global DH: type <cimport,nodecl,forwarddecl> = @record{}
global RSA: type <cimport,nodecl,forwarddecl> = @record{}
global SSL_DANE: type <cimport,nodecl,forwarddecl> = @record{}
global X509: type <cimport,nodecl,forwarddecl> = @record{}
global X509_STORE: type <cimport,nodecl,forwarddecl> = @record{}
global X509_STORE_CTX: type <cimport,nodecl,forwarddecl> = @record{}
global X509_VERIFY_PARAM: type <cimport,nodecl,forwarddecl> = @record{}
global OPENSSL_INIT_SETTINGS: type <cimport,nodecl,forwarddecl> = @record{}
global ENGINE: type <cimport,nodecl,forwarddecl> = @record{}
global SSL: type <cimport,nodecl,forwarddecl> = @record{}
global SSL_CTX: type <cimport,nodecl,forwarddecl> = @record{}
global COMP_METHOD: type <cimport,nodecl,forwarddecl> = @record{}
global CTLOG_STORE: type <cimport,nodecl,forwarddecl> = @record{}
global CT_POLICY_EVAL_CTX: type <cimport,nodecl,forwarddecl> = @record{}
global OSSL_LIB_CTX: type <cimport,nodecl,forwarddecl> = @record{}
global OSSL_DISPATCH: type <cimport,nodecl,forwarddecl> = @record{}
global OPENSSL_CORE_CTX: type <cimport,nodecl,forwarddecl> = @record{}
OSSL_DISPATCH = @record{
  function_id: cint,
  function_: function(): void
}
global PTHREAD_MUTEX_ERRORCHECK_NP: cint <comptime> = 2
global PTHREAD_CANCEL_DEFERRED: cint <comptime> = 0
global SSL_COMP: type <cimport,nodecl,forwarddecl> = @record{}
global stack_st_SSL_COMP: type <cimport,nodecl,ctypedef'stack_st_SSL_COMP',forwarddecl> = @record{}
global BIO_ADDR: type <cimport,nodecl,forwarddecl> = @union{}
global BIO_POLL_DESCRIPTOR: type <cimport,nodecl> = @record{
  type: uint32,
  value: union{
    fd: cint,
    custom: pointer,
    custom_ui: usize,
    ssl: *SSL
  }
}
global stack_st_X509_NAME: type <cimport,nodecl,ctypedef'stack_st_X509_NAME',forwarddecl> = @record{}
global stack_st_X509: type <cimport,nodecl,ctypedef'stack_st_X509',forwarddecl> = @record{}
global OPENSSL_LH_NODE: type <cimport,nodecl,forwarddecl> = @record{}
global OPENSSL_LH_COMPFUNC: type <cimport,nodecl> = @function(a1: pointer, a2: pointer): cint
global OPENSSL_LH_COMPFUNCTHUNK: type <cimport,nodecl> = @function(a1: pointer, a2: pointer, cfn: OPENSSL_LH_COMPFUNC): cint
global OPENSSL_LH_HASHFUNC: type <cimport,nodecl> = @function(a1: pointer): culong
global OPENSSL_LH_HASHFUNCTHUNK: type <cimport,nodecl> = @function(a1: pointer, hfn: OPENSSL_LH_HASHFUNC): culong
global OPENSSL_LH_DOALL_FUNC: type <cimport,nodecl> = @function(a1: pointer): void
global OPENSSL_LH_DOALL_FUNC_THUNK: type <cimport,nodecl> = @function(a1: pointer, doall: OPENSSL_LH_DOALL_FUNC): void
global OPENSSL_LH_DOALL_FUNCARG: type <cimport,nodecl> = @function(a1: pointer, a2: pointer): void
global OPENSSL_LH_DOALL_FUNCARG_THUNK: type <cimport,nodecl> = @function(a1: pointer, a2: pointer, doall: OPENSSL_LH_DOALL_FUNCARG): void
global OPENSSL_LHASH: type <cimport,nodecl,forwarddecl> = @record{}
global stack_st_SCT: type <cimport,nodecl,ctypedef'stack_st_SCT',forwarddecl> = @record{}
global ssl_crock_st: type <cimport,nodecl> = @*SSL
global TLS_SESSION_TICKET_EXT: type <cimport,nodecl,forwarddecl> = @record{}
global SSL_METHOD: type <cimport,nodecl,forwarddecl> = @record{}
global SSL_CIPHER: type <cimport,nodecl,forwarddecl> = @record{}
global SSL_SESSION: type <cimport,nodecl,forwarddecl> = @record{}
global TLS_SIGALGS: type <cimport,nodecl,forwarddecl> = @record{}
global SSL_CONF_CTX: type <cimport,nodecl,forwarddecl> = @record{}
global stack_st_SSL_CIPHER: type <cimport,nodecl,ctypedef'stack_st_SSL_CIPHER',forwarddecl> = @record{}
global SRTP_PROTECTION_PROFILE: type <cimport,nodecl> = @record{
  name: cstring,
  id: culong
}
global stack_st_SRTP_PROTECTION_PROFILE: type <cimport,nodecl,ctypedef'stack_st_SRTP_PROTECTION_PROFILE',forwarddecl> = @record{}
global tls_session_ticket_ext_cb_fn: type <cimport,nodecl> = @function(s: *SSL, data: *cuchar, len: cint, arg: pointer): cint
global tls_session_secret_cb_fn: type <cimport,nodecl> = @function(s: *SSL, secret: pointer, secret_len: *cint, peer_ciphers: *stack_st_SSL_CIPHER, cipher: **SSL_CIPHER, arg: pointer): cint
global SSL_custom_ext_add_cb_ex: type <cimport,nodecl> = @function(s: *SSL, ext_type: cuint, context: cuint, out: **cuchar, outlen: *csize, x: *X509, chainidx: csize, al: *cint, add_arg: pointer): cint
global SSL_custom_ext_free_cb_ex: type <cimport,nodecl> = @function(s: *SSL, ext_type: cuint, context: cuint, out: *cuchar, add_arg: pointer): void
global SSL_custom_ext_parse_cb_ex: type <cimport,nodecl> = @function(s: *SSL, ext_type: cuint, context: cuint, in_: *cuchar, inlen: csize, x: *X509, chainidx: csize, al: *cint, parse_arg: pointer): cint
global SSL_verify_cb: type <cimport,nodecl> = @function(preverify_ok: cint, x509_ctx: *X509_STORE_CTX): cint
global SSL_async_callback_fn: type <cimport,nodecl> = @function(s: *SSL, arg: pointer): cint
global lhash_st_SSL_SESSION: type <cimport,nodecl,ctypedef'lhash_st_SSL_SESSION',forwarddecl> = @record{}
global SSL_CTX_npn_advertised_cb_func: type <cimport,nodecl> = @function(ssl: *SSL, out: **cuchar, outlen: *cuint, arg: pointer): cint
global SSL_CTX_npn_select_cb_func: type <cimport,nodecl> = @function(s: *SSL, out: **cuchar, outlen: *cuchar, in_: *cuchar, inlen: cuint, arg: pointer): cint
global SSL_CTX_alpn_select_cb_func: type <cimport,nodecl> = @function(ssl: *SSL, out: **cuchar, outlen: *cuchar, in_: *cuchar, inlen: cuint, arg: pointer): cint
global SSL_psk_client_cb_func: type <cimport,nodecl> = @function(ssl: *SSL, hint: cstring, identity: cstring, max_identity_len: cuint, psk: *cuchar, max_psk_len: cuint): cuint
global SSL_psk_server_cb_func: type <cimport,nodecl> = @function(ssl: *SSL, identity: cstring, psk: *cuchar, max_psk_len: cuint): cuint
global SSL_psk_find_session_cb_func: type <cimport,nodecl> = @function(ssl: *SSL, identity: *cuchar, identity_len: csize, sess: **SSL_SESSION): cint
global SSL_psk_use_session_cb_func: type <cimport,nodecl> = @function(ssl: *SSL, md: *EVP_MD, id: **cuchar, idlen: *csize, sess: **SSL_SESSION): cint
global SSL_CTX_keylog_cb_func: type <cimport,nodecl> = @function(ssl: *SSL, line: cstring): void
TLS_SESSION_TICKET_EXT = @record{
  length: cushort,
  data: pointer
}
global OSSL_HANDSHAKE_STATE: type <cimport,nodecl,using> = @enum(cint){
  TLS_ST_BEFORE = 0,
  TLS_ST_OK = 1,
  DTLS_ST_CR_HELLO_VERIFY_REQUEST = 2,
  TLS_ST_CR_SRVR_HELLO = 3,
  TLS_ST_CR_CERT = 4,
  TLS_ST_CR_COMP_CERT = 5,
  TLS_ST_CR_CERT_STATUS = 6,
  TLS_ST_CR_KEY_EXCH = 7,
  TLS_ST_CR_CERT_REQ = 8,
  TLS_ST_CR_SRVR_DONE = 9,
  TLS_ST_CR_SESSION_TICKET = 10,
  TLS_ST_CR_CHANGE = 11,
  TLS_ST_CR_FINISHED = 12,
  TLS_ST_CW_CLNT_HELLO = 13,
  TLS_ST_CW_CERT = 14,
  TLS_ST_CW_COMP_CERT = 15,
  TLS_ST_CW_KEY_EXCH = 16,
  TLS_ST_CW_CERT_VRFY = 17,
  TLS_ST_CW_CHANGE = 18,
  TLS_ST_CW_NEXT_PROTO = 19,
  TLS_ST_CW_FINISHED = 20,
  TLS_ST_SW_HELLO_REQ = 21,
  TLS_ST_SR_CLNT_HELLO = 22,
  DTLS_ST_SW_HELLO_VERIFY_REQUEST = 23,
  TLS_ST_SW_SRVR_HELLO = 24,
  TLS_ST_SW_CERT = 25,
  TLS_ST_SW_COMP_CERT = 26,
  TLS_ST_SW_KEY_EXCH = 27,
  TLS_ST_SW_CERT_REQ = 28,
  TLS_ST_SW_SRVR_DONE = 29,
  TLS_ST_SR_CERT = 30,
  TLS_ST_SR_COMP_CERT = 31,
  TLS_ST_SR_KEY_EXCH = 32,
  TLS_ST_SR_CERT_VRFY = 33,
  TLS_ST_SR_NEXT_PROTO = 34,
  TLS_ST_SR_CHANGE = 35,
  TLS_ST_SR_FINISHED = 36,
  TLS_ST_SW_SESSION_TICKET = 37,
  TLS_ST_SW_CERT_STATUS = 38,
  TLS_ST_SW_CHANGE = 39,
  TLS_ST_SW_FINISHED = 40,
  TLS_ST_SW_ENCRYPTED_EXTENSIONS = 41,
  TLS_ST_CR_ENCRYPTED_EXTENSIONS = 42,
  TLS_ST_CR_CERT_VRFY = 43,
  TLS_ST_SW_CERT_VRFY = 44,
  TLS_ST_CR_HELLO_REQ = 45,
  TLS_ST_SW_KEY_UPDATE = 46,
  TLS_ST_CW_KEY_UPDATE = 47,
  TLS_ST_SR_KEY_UPDATE = 48,
  TLS_ST_CR_KEY_UPDATE = 49,
  TLS_ST_EARLY_DATA = 50,
  TLS_ST_PENDING_EARLY_DATA_END = 51,
  TLS_ST_CW_END_OF_EARLY_DATA = 52,
  TLS_ST_SR_END_OF_EARLY_DATA = 53
}
global SSL_client_hello_cb_fn: type <cimport,nodecl> = @function(s: *SSL, al: *cint, arg: pointer): cint
global SSL_new_pending_conn_cb_fn: type <cimport,nodecl> = @function(ctx: *SSL_CTX, new_ssl: *SSL, arg: pointer): cint
global SSL_SHUTDOWN_EX_ARGS: type <cimport,nodecl> = @record{
  quic_error_code: uint64,
  quic_reason: cstring
}
global SSL_STREAM_RESET_ARGS: type <cimport,nodecl> = @record{
  quic_error_code: uint64
}
global SSL_CONN_CLOSE_INFO: type <cimport,nodecl> = @record{
  error_code: uint64,
  frame_type: uint64,
  reason: cstring,
  reason_len: csize,
  flags: uint32
}
global SSL_POLL_ITEM: type <cimport,nodecl> = @record{
  desc: BIO_POLL_DESCRIPTOR,
  events: uint64,
  revents: uint64
}
global ssl_ct_validation_cb: type <cimport,nodecl> = @function(ctx: *CT_POLICY_EVAL_CTX, scts: *stack_st_SCT, arg: pointer): cint
global SSL_CT_VALIDATION_PERMISSIVE: cint <comptime> = 0
global SSL_CT_VALIDATION_STRICT: cint <comptime> = 1
global SSL_TICKET_STATUS: type <cimport,nodecl> = @cint
global SSL_TICKET_RETURN: type <cimport,nodecl> = @cint
global SSL_CTX_generate_session_ticket_fn: type <cimport,nodecl> = @function(s: *SSL, arg: pointer): cint
global SSL_CTX_decrypt_session_ticket_fn: type <cimport,nodecl> = @function(s: *SSL, ss: *SSL_SESSION, keyname: *cuchar, keyname_length: csize, status: SSL_TICKET_STATUS, arg: pointer): SSL_TICKET_RETURN
global SSL_allow_early_data_cb_fn: type <cimport,nodecl> = @function(s: *SSL, arg: pointer): cint
ERR_STATE = @record{
  err_flags: [16]cint,
  err_marks: [16]cint,
  err_buffer: [16]culong,
  err_data: [16]cstring,
  err_data_size: [16]csize,
  err_data_flags: [16]cint,
  err_file: [16]cstring,
  err_line: [16]cint,
  err_func: [16]cstring,
  top: cint,
  bottom: cint
}
global ERR_STRING_DATA: type <cimport,nodecl> = @record{
  error: culong,
  string: cstring
}
global lh_ERR_STRING_DATA_dummy: type <cimport,nodecl,ctypedef'lh_ERR_STRING_DATA_dummy'> = @union{
  d1: pointer,
  d2: culong,
  d3: cint
}
global lhash_st_ERR_STRING_DATA: type <cimport,nodecl,ctypedef'lhash_st_ERR_STRING_DATA'> = @record{
  dummy: lh_ERR_STRING_DATA_dummy
}
global lh_ERR_STRING_DATA_compfunc: type <cimport,nodecl> = @function(a: *ERR_STRING_DATA, b: *ERR_STRING_DATA): cint
global lh_ERR_STRING_DATA_hashfunc: type <cimport,nodecl> = @function(a: *ERR_STRING_DATA): culong
global lh_ERR_STRING_DATA_doallfunc: type <cimport,nodecl> = @function(a: *ERR_STRING_DATA): void
global function OPENSSL_sk_num(a1: *OPENSSL_STACK): cint <cimport,nodecl> end
global function OPENSSL_sk_value(a1: *OPENSSL_STACK, a2: cint): pointer <cimport,nodecl> end
global function OPENSSL_sk_set(st: *OPENSSL_STACK, i: cint, data: pointer): pointer <cimport,nodecl> end
global function OPENSSL_sk_new(cmp: OPENSSL_sk_compfunc): *OPENSSL_STACK <cimport,nodecl> end
global function OPENSSL_sk_new_null(): *OPENSSL_STACK <cimport,nodecl> end
global function OPENSSL_sk_new_reserve(c: OPENSSL_sk_compfunc, n: cint): *OPENSSL_STACK <cimport,nodecl> end
global function OPENSSL_sk_reserve(st: *OPENSSL_STACK, n: cint): cint <cimport,nodecl> end
global function OPENSSL_sk_free(a1: *OPENSSL_STACK): void <cimport,nodecl> end
global function OPENSSL_sk_pop_free(st: *OPENSSL_STACK, func: function(a1: pointer): void): void <cimport,nodecl> end
global function OPENSSL_sk_deep_copy(a1: *OPENSSL_STACK, c: OPENSSL_sk_copyfunc, f: OPENSSL_sk_freefunc): *OPENSSL_STACK <cimport,nodecl> end
global function OPENSSL_sk_insert(sk: *OPENSSL_STACK, data: pointer, where: cint): cint <cimport,nodecl> end
global function OPENSSL_sk_delete(st: *OPENSSL_STACK, loc: cint): pointer <cimport,nodecl> end
global function OPENSSL_sk_delete_ptr(st: *OPENSSL_STACK, p: pointer): pointer <cimport,nodecl> end
global function OPENSSL_sk_find(st: *OPENSSL_STACK, data: pointer): cint <cimport,nodecl> end
global function OPENSSL_sk_find_ex(st: *OPENSSL_STACK, data: pointer): cint <cimport,nodecl> end
global function OPENSSL_sk_find_all(st: *OPENSSL_STACK, data: pointer, pnum: *cint): cint <cimport,nodecl> end
global function OPENSSL_sk_push(st: *OPENSSL_STACK, data: pointer): cint <cimport,nodecl> end
global function OPENSSL_sk_unshift(st: *OPENSSL_STACK, data: pointer): cint <cimport,nodecl> end
global function OPENSSL_sk_shift(st: *OPENSSL_STACK): pointer <cimport,nodecl> end
global function OPENSSL_sk_pop(st: *OPENSSL_STACK): pointer <cimport,nodecl> end
global function OPENSSL_sk_zero(st: *OPENSSL_STACK): void <cimport,nodecl> end
global function OPENSSL_sk_set_cmp_func(sk: *OPENSSL_STACK, cmp: OPENSSL_sk_compfunc): OPENSSL_sk_compfunc <cimport,nodecl> end
global function OPENSSL_sk_dup(st: *OPENSSL_STACK): *OPENSSL_STACK <cimport,nodecl> end
global function OPENSSL_sk_sort(st: *OPENSSL_STACK): void <cimport,nodecl> end
global function OPENSSL_sk_is_sorted(st: *OPENSSL_STACK): cint <cimport,nodecl> end
global function ERR_load_ASN1_strings(): cint <cimport,nodecl> end
global function ERR_load_ASYNC_strings(): cint <cimport,nodecl> end
global function ERR_load_BIO_strings(): cint <cimport,nodecl> end
global function ERR_load_BN_strings(): cint <cimport,nodecl> end
global function ERR_load_BUF_strings(): cint <cimport,nodecl> end
global function ERR_load_CMS_strings(): cint <cimport,nodecl> end
global function ERR_load_COMP_strings(): cint <cimport,nodecl> end
global function ERR_load_CONF_strings(): cint <cimport,nodecl> end
global function ERR_load_CRYPTO_strings(): cint <cimport,nodecl> end
global function ERR_load_CT_strings(): cint <cimport,nodecl> end
global function ERR_load_DH_strings(): cint <cimport,nodecl> end
global function ERR_load_DSA_strings(): cint <cimport,nodecl> end
global function ERR_load_EC_strings(): cint <cimport,nodecl> end
global function ERR_load_ENGINE_strings(): cint <cimport,nodecl> end
global function ERR_load_ERR_strings(): cint <cimport,nodecl> end
global function ERR_load_EVP_strings(): cint <cimport,nodecl> end
global function ERR_load_KDF_strings(): cint <cimport,nodecl> end
global function ERR_load_OBJ_strings(): cint <cimport,nodecl> end
global function ERR_load_OCSP_strings(): cint <cimport,nodecl> end
global function ERR_load_PEM_strings(): cint <cimport,nodecl> end
global function ERR_load_PKCS12_strings(): cint <cimport,nodecl> end
global function ERR_load_PKCS7_strings(): cint <cimport,nodecl> end
global function ERR_load_RAND_strings(): cint <cimport,nodecl> end
global function ERR_load_RSA_strings(): cint <cimport,nodecl> end
global function ERR_load_OSSL_STORE_strings(): cint <cimport,nodecl> end
global function ERR_load_TS_strings(): cint <cimport,nodecl> end
global function ERR_load_UI_strings(): cint <cimport,nodecl> end
global function ERR_load_X509_strings(): cint <cimport,nodecl> end
global function ERR_load_X509V3_strings(): cint <cimport,nodecl> end
global function OPENSSL_strlcpy(dst: cstring, src: cstring, siz: csize): csize <cimport,nodecl> end
global function OPENSSL_strlcat(dst: cstring, src: cstring, siz: csize): csize <cimport,nodecl> end
global function OPENSSL_strnlen(str: cstring, maxlen: csize): csize <cimport,nodecl> end
global function OPENSSL_strtoul(str: cstring, endptr: *cstring, base: cint, num: *culong): cint <cimport,nodecl> end
global function OPENSSL_buf2hexstr_ex(str: cstring, str_n: csize, strlength: *csize, buf: *cuchar, buflen: csize, sep: cchar): cint <cimport,nodecl> end
global function OPENSSL_buf2hexstr(buf: *cuchar, buflen: clong): cstring <cimport,nodecl> end
global function OPENSSL_hexstr2buf_ex(buf: *cuchar, buf_n: csize, buflen: *csize, str: cstring, sep: cchar): cint <cimport,nodecl> end
global function OPENSSL_hexstr2buf(str: cstring, buflen: *clong): *cuchar <cimport,nodecl> end
global function OPENSSL_hexchar2int(c: cuchar): cint <cimport,nodecl> end
global function OPENSSL_strcasecmp(s1: cstring, s2: cstring): cint <cimport,nodecl> end
global function OPENSSL_strncasecmp(s1: cstring, s2: cstring, n: csize): cint <cimport,nodecl> end
global function OPENSSL_version_major(): cuint <cimport,nodecl> end
global function OPENSSL_version_minor(): cuint <cimport,nodecl> end
global function OPENSSL_version_patch(): cuint <cimport,nodecl> end
global function OPENSSL_version_pre_release(): cstring <cimport,nodecl> end
global function OPENSSL_version_build_metadata(): cstring <cimport,nodecl> end
global function OpenSSL_version_num(): culong <cimport,nodecl> end
global function OpenSSL_version(type: cint): cstring <cimport,nodecl> end
global function OPENSSL_info(type: cint): cstring <cimport,nodecl> end
global function OPENSSL_issetugid(): cint <cimport,nodecl> end
global function OPENSSL_cleanse(ptr: pointer, len: csize): void <cimport,nodecl> end
global function OPENSSL_die(assertion: cstring, file: cstring, line: cint): void <cimport,nodecl> end
global function OPENSSL_isservice(): cint <cimport,nodecl> end
global function OPENSSL_init(): void <cimport,nodecl> end
global function OPENSSL_fork_prepare(): void <cimport,nodecl> end
global function OPENSSL_fork_parent(): void <cimport,nodecl> end
global function OPENSSL_fork_child(): void <cimport,nodecl> end
global function OPENSSL_gmtime(timer: *ctime_t, result: *tm): *tm <cimport,nodecl> end
global function OPENSSL_gmtime_adj(_tm: *tm, offset_day: cint, offset_sec: clong): cint <cimport,nodecl> end
global function OPENSSL_gmtime_diff(pday: *cint, psec: *cint, from: *tm, to: *tm): cint <cimport,nodecl> end
global function OPENSSL_cleanup(): void <cimport,nodecl> end
global function OPENSSL_init_crypto(opts: uint64, settings: *OPENSSL_INIT_SETTINGS): cint <cimport,nodecl> end
global function OPENSSL_atexit(handler: function(): void): cint <cimport,nodecl> end
global function OPENSSL_thread_stop(): void <cimport,nodecl> end
global function OPENSSL_thread_stop_ex(ctx: *OSSL_LIB_CTX): void <cimport,nodecl> end
global function OPENSSL_INIT_new(): *OPENSSL_INIT_SETTINGS <cimport,nodecl> end
global function OPENSSL_INIT_set_config_filename(settings: *OPENSSL_INIT_SETTINGS, config_filename: cstring): cint <cimport,nodecl> end
global function OPENSSL_INIT_set_config_file_flags(settings: *OPENSSL_INIT_SETTINGS, flags: culong): void <cimport,nodecl> end
global function OPENSSL_INIT_set_config_appname(settings: *OPENSSL_INIT_SETTINGS, config_appname: cstring): cint <cimport,nodecl> end
global function OPENSSL_INIT_free(settings: *OPENSSL_INIT_SETTINGS): void <cimport,nodecl> end
global function OPENSSL_LH_error(lh: *OPENSSL_LHASH): cint <cimport,nodecl> end
global function OPENSSL_LH_new(h: OPENSSL_LH_HASHFUNC, c: OPENSSL_LH_COMPFUNC): *OPENSSL_LHASH <cimport,nodecl> end
global function OPENSSL_LH_set_thunks(lh: *OPENSSL_LHASH, hw: OPENSSL_LH_HASHFUNCTHUNK, cw: OPENSSL_LH_COMPFUNCTHUNK, daw: OPENSSL_LH_DOALL_FUNC_THUNK, daaw: OPENSSL_LH_DOALL_FUNCARG_THUNK): *OPENSSL_LHASH <cimport,nodecl> end
global function OPENSSL_LH_free(lh: *OPENSSL_LHASH): void <cimport,nodecl> end
global function OPENSSL_LH_flush(lh: *OPENSSL_LHASH): void <cimport,nodecl> end
global function OPENSSL_LH_insert(lh: *OPENSSL_LHASH, data: pointer): pointer <cimport,nodecl> end
global function OPENSSL_LH_delete(lh: *OPENSSL_LHASH, data: pointer): pointer <cimport,nodecl> end
global function OPENSSL_LH_retrieve(lh: *OPENSSL_LHASH, data: pointer): pointer <cimport,nodecl> end
global function OPENSSL_LH_doall(lh: *OPENSSL_LHASH, func: OPENSSL_LH_DOALL_FUNC): void <cimport,nodecl> end
global function OPENSSL_LH_doall_arg(lh: *OPENSSL_LHASH, func: OPENSSL_LH_DOALL_FUNCARG, arg: pointer): void <cimport,nodecl> end
global function OPENSSL_LH_doall_arg_thunk(lh: *OPENSSL_LHASH, daaw: OPENSSL_LH_DOALL_FUNCARG_THUNK, fn: OPENSSL_LH_DOALL_FUNCARG, arg: pointer): void <cimport,nodecl> end
global function OPENSSL_LH_strhash(c: cstring): culong <cimport,nodecl> end
global function OPENSSL_LH_num_items(lh: *OPENSSL_LHASH): culong <cimport,nodecl> end
global function OPENSSL_LH_get_down_load(lh: *OPENSSL_LHASH): culong <cimport,nodecl> end
global function OPENSSL_LH_set_down_load(lh: *OPENSSL_LHASH, down_load: culong): void <cimport,nodecl> end
global function OPENSSL_LH_stats(lh: *OPENSSL_LHASH, fp: *FILE): void <cimport,nodecl> end
global function OPENSSL_LH_node_stats(lh: *OPENSSL_LHASH, fp: *FILE): void <cimport,nodecl> end
global function OPENSSL_LH_node_usage_stats(lh: *OPENSSL_LHASH, fp: *FILE): void <cimport,nodecl> end
global function OPENSSL_LH_stats_bio(lh: *OPENSSL_LHASH, out: *BIO): void <cimport,nodecl> end
global function OPENSSL_LH_node_stats_bio(lh: *OPENSSL_LHASH, out: *BIO): void <cimport,nodecl> end
global function OPENSSL_LH_node_usage_stats_bio(lh: *OPENSSL_LHASH, out: *BIO): void <cimport,nodecl> end
global function OPENSSL_config(config_name: cstring): void <cimport,nodecl> end
global function OPENSSL_load_builtin_modules(): void <cimport,nodecl> end
global function ERR_load_SSL_strings(): cint <cimport,nodecl> end
global function SSL_CTX_get_options(ctx: *SSL_CTX): uint64 <cimport,nodecl> end
global function SSL_get_options(s: *SSL): uint64 <cimport,nodecl> end
global function SSL_CTX_clear_options(ctx: *SSL_CTX, op: uint64): uint64 <cimport,nodecl> end
global function SSL_clear_options(s: *SSL, op: uint64): uint64 <cimport,nodecl> end
global function SSL_CTX_set_options(ctx: *SSL_CTX, op: uint64): uint64 <cimport,nodecl> end
global function SSL_set_options(s: *SSL, op: uint64): uint64 <cimport,nodecl> end
global function SSL_CTX_set_msg_callback(ctx: *SSL_CTX, cb: function(write_p: cint, version: cint, content_type: cint, buf: pointer, len: csize, ssl: *SSL, arg: pointer): void): void <cimport,nodecl> end
global function SSL_set_msg_callback(ssl: *SSL, cb: function(write_p: cint, version: cint, content_type: cint, buf: pointer, len: csize, ssl: *SSL, arg: pointer): void): void <cimport,nodecl> end
global function SSL_SRP_CTX_init(s: *SSL): cint <cimport,nodecl> end
global function SSL_CTX_SRP_CTX_init(ctx: *SSL_CTX): cint <cimport,nodecl> end
global function SSL_SRP_CTX_free(ctx: *SSL): cint <cimport,nodecl> end
global function SSL_CTX_SRP_CTX_free(ctx: *SSL_CTX): cint <cimport,nodecl> end
global function SSL_srp_server_param_with_username(s: *SSL, ad: *cint): cint <cimport,nodecl> end
global function SSL_CTX_sessions(ctx: *SSL_CTX): *lhash_st_SSL_SESSION <cimport,nodecl> end
global function SSL_CTX_sess_set_new_cb(ctx: *SSL_CTX, new_session_cb: function(ssl: *SSL, sess: *SSL_SESSION): cint): void <cimport,nodecl> end
global function SSL_CTX_sess_get_new_cb(ctx: *SSL_CTX): function(ssl: *SSL, sess: *SSL_SESSION): cint <cimport,nodecl> end
global function SSL_CTX_sess_set_remove_cb(ctx: *SSL_CTX, remove_session_cb: function(ctx: *SSL_CTX, sess: *SSL_SESSION): void): void <cimport,nodecl> end
global function SSL_CTX_sess_get_remove_cb(ctx: *SSL_CTX): function(ctx: *SSL_CTX, sess: *SSL_SESSION): void <cimport,nodecl> end
global function SSL_CTX_sess_set_get_cb(ctx: *SSL_CTX, get_session_cb: function(ssl: *SSL, data: *cuchar, len: cint, copy: *cint): *SSL_SESSION): void <cimport,nodecl> end
global function SSL_CTX_sess_get_get_cb(ctx: *SSL_CTX): function(ssl: *SSL, data: *cuchar, len: cint, copy: *cint): *SSL_SESSION <cimport,nodecl> end
global function SSL_CTX_set_info_callback(ctx: *SSL_CTX, cb: function(ssl: *SSL, type: cint, val: cint): void): void <cimport,nodecl> end
global function SSL_CTX_get_info_callback(ctx: *SSL_CTX): function(ssl: *SSL, type: cint, val: cint): void <cimport,nodecl> end
global function SSL_CTX_set_client_cert_cb(ctx: *SSL_CTX, client_cert_cb: function(ssl: *SSL, x509: **X509, pkey: **EVP_PKEY): cint): void <cimport,nodecl> end
global function SSL_CTX_get_client_cert_cb(ctx: *SSL_CTX): function(ssl: *SSL, x509: **X509, pkey: **EVP_PKEY): cint <cimport,nodecl> end
global function SSL_CTX_set_client_cert_engine(ctx: *SSL_CTX, e: *ENGINE): cint <cimport,nodecl> end
global function SSL_CTX_set_cookie_generate_cb(ctx: *SSL_CTX, app_gen_cookie_cb: function(ssl: *SSL, cookie: *cuchar, cookie_len: *cuint): cint): void <cimport,nodecl> end
global function SSL_CTX_set_cookie_verify_cb(ctx: *SSL_CTX, app_verify_cookie_cb: function(ssl: *SSL, cookie: *cuchar, cookie_len: cuint): cint): void <cimport,nodecl> end
global function SSL_CTX_set_stateless_cookie_generate_cb(ctx: *SSL_CTX, gen_stateless_cookie_cb: function(ssl: *SSL, cookie: *cuchar, cookie_len: *csize): cint): void <cimport,nodecl> end
global function SSL_CTX_set_stateless_cookie_verify_cb(ctx: *SSL_CTX, verify_stateless_cookie_cb: function(ssl: *SSL, cookie: *cuchar, cookie_len: csize): cint): void <cimport,nodecl> end
global function SSL_CTX_set_next_protos_advertised_cb(s: *SSL_CTX, cb: SSL_CTX_npn_advertised_cb_func, arg: pointer): void <cimport,nodecl> end
global function SSL_CTX_set_next_proto_select_cb(s: *SSL_CTX, cb: SSL_CTX_npn_select_cb_func, arg: pointer): void <cimport,nodecl> end
global function SSL_get0_next_proto_negotiated(s: *SSL, data: **cuchar, len: *cuint): void <cimport,nodecl> end
global function SSL_select_next_proto(out: **cuchar, outlen: *cuchar, in_: *cuchar, inlen: cuint, client: *cuchar, client_len: cuint): cint <cimport,nodecl> end
global function SSL_CTX_set_alpn_protos(ctx: *SSL_CTX, protos: *cuchar, protos_len: cuint): cint <cimport,nodecl> end
global function SSL_set_alpn_protos(ssl: *SSL, protos: *cuchar, protos_len: cuint): cint <cimport,nodecl> end
global function SSL_CTX_set_alpn_select_cb(ctx: *SSL_CTX, cb: SSL_CTX_alpn_select_cb_func, arg: pointer): void <cimport,nodecl> end
global function SSL_get0_alpn_selected(ssl: *SSL, data: **cuchar, len: *cuint): void <cimport,nodecl> end
global function SSL_CTX_set_psk_client_callback(ctx: *SSL_CTX, cb: SSL_psk_client_cb_func): void <cimport,nodecl> end
global function SSL_set_psk_client_callback(ssl: *SSL, cb: SSL_psk_client_cb_func): void <cimport,nodecl> end
global function SSL_CTX_set_psk_server_callback(ctx: *SSL_CTX, cb: SSL_psk_server_cb_func): void <cimport,nodecl> end
global function SSL_set_psk_server_callback(ssl: *SSL, cb: SSL_psk_server_cb_func): void <cimport,nodecl> end
global function SSL_CTX_use_psk_identity_hint(ctx: *SSL_CTX, identity_hint: cstring): cint <cimport,nodecl> end
global function SSL_use_psk_identity_hint(s: *SSL, identity_hint: cstring): cint <cimport,nodecl> end
global function SSL_get_psk_identity_hint(s: *SSL): cstring <cimport,nodecl> end
global function SSL_get_psk_identity(s: *SSL): cstring <cimport,nodecl> end
global function SSL_set_psk_find_session_callback(s: *SSL, cb: SSL_psk_find_session_cb_func): void <cimport,nodecl> end
global function SSL_CTX_set_psk_find_session_callback(ctx: *SSL_CTX, cb: SSL_psk_find_session_cb_func): void <cimport,nodecl> end
global function SSL_set_psk_use_session_callback(s: *SSL, cb: SSL_psk_use_session_cb_func): void <cimport,nodecl> end
global function SSL_CTX_set_psk_use_session_callback(ctx: *SSL_CTX, cb: SSL_psk_use_session_cb_func): void <cimport,nodecl> end
global function SSL_CTX_has_client_custom_ext(ctx: *SSL_CTX, ext_type: cuint): cint <cimport,nodecl> end
global function SSL_CTX_add_client_custom_ext(ctx: *SSL_CTX, ext_type: cuint, add_cb: function(s: *SSL, ext_type: cuint, out: **cuchar, outlen: *csize, al: *cint, add_arg: pointer): cint, free_cb: function(s: *SSL, ext_type: cuint, out: *cuchar, add_arg: pointer): void, add_arg: pointer, parse_cb: function(s: *SSL, ext_type: cuint, in_: *cuchar, inlen: csize, al: *cint, parse_arg: pointer): cint, parse_arg: pointer): cint <cimport,nodecl> end
global function SSL_CTX_add_server_custom_ext(ctx: *SSL_CTX, ext_type: cuint, add_cb: function(s: *SSL, ext_type: cuint, out: **cuchar, outlen: *csize, al: *cint, add_arg: pointer): cint, free_cb: function(s: *SSL, ext_type: cuint, out: *cuchar, add_arg: pointer): void, add_arg: pointer, parse_cb: function(s: *SSL, ext_type: cuint, in_: *cuchar, inlen: csize, al: *cint, parse_arg: pointer): cint, parse_arg: pointer): cint <cimport,nodecl> end
global function SSL_CTX_add_custom_ext(ctx: *SSL_CTX, ext_type: cuint, context: cuint, add_cb: SSL_custom_ext_add_cb_ex, free_cb: SSL_custom_ext_free_cb_ex, add_arg: pointer, parse_cb: SSL_custom_ext_parse_cb_ex, parse_arg: pointer): cint <cimport,nodecl> end
global function SSL_extension_supported(ext_type: cuint): cint <cimport,nodecl> end
global function SSL_CTX_set_keylog_callback(ctx: *SSL_CTX, cb: SSL_CTX_keylog_cb_func): void <cimport,nodecl> end
global function SSL_CTX_get_keylog_callback(ctx: *SSL_CTX): SSL_CTX_keylog_cb_func <cimport,nodecl> end
global function SSL_CTX_set_max_early_data(ctx: *SSL_CTX, max_early_data: uint32): cint <cimport,nodecl> end
global function SSL_CTX_get_max_early_data(ctx: *SSL_CTX): uint32 <cimport,nodecl> end
global function SSL_set_max_early_data(s: *SSL, max_early_data: uint32): cint <cimport,nodecl> end
global function SSL_get_max_early_data(s: *SSL): uint32 <cimport,nodecl> end
global function SSL_CTX_set_recv_max_early_data(ctx: *SSL_CTX, recv_max_early_data: uint32): cint <cimport,nodecl> end
global function SSL_CTX_get_recv_max_early_data(ctx: *SSL_CTX): uint32 <cimport,nodecl> end
global function SSL_set_recv_max_early_data(s: *SSL, recv_max_early_data: uint32): cint <cimport,nodecl> end
global function SSL_get_recv_max_early_data(s: *SSL): uint32 <cimport,nodecl> end
global function SSL_CTX_set_tlsext_max_fragment_length(ctx: *SSL_CTX, mode: uint8): cint <cimport,nodecl> end
global function SSL_set_tlsext_max_fragment_length(ssl: *SSL, mode: uint8): cint <cimport,nodecl> end
global function SSL_get_servername(s: *SSL, type: cint): cstring <cimport,nodecl> end
global function SSL_get_servername_type(s: *SSL): cint <cimport,nodecl> end
global function SSL_export_keying_material(s: *SSL, out: *cuchar, olen: csize, label: cstring, llen: csize, context: *cuchar, contextlen: csize, use_context: cint): cint <cimport,nodecl> end
global function SSL_export_keying_material_early(s: *SSL, out: *cuchar, olen: csize, label: cstring, llen: csize, context: *cuchar, contextlen: csize): cint <cimport,nodecl> end
global function SSL_get_peer_signature_type_nid(s: *SSL, pnid: *cint): cint <cimport,nodecl> end
global function SSL_get_signature_type_nid(s: *SSL, pnid: *cint): cint <cimport,nodecl> end
global function SSL_get_sigalgs(s: *SSL, idx: cint, psign: *cint, phash: *cint, psignandhash: *cint, rsig: *cuchar, rhash: *cuchar): cint <cimport,nodecl> end
global function SSL_get1_builtin_sigalgs(libctx: *OSSL_LIB_CTX): cstring <cimport,nodecl> end
global function SSL_get_shared_sigalgs(s: *SSL, idx: cint, psign: *cint, phash: *cint, psignandhash: *cint, rsig: *cuchar, rhash: *cuchar): cint <cimport,nodecl> end
global function SSL_check_chain(s: *SSL, x: *X509, pk: *EVP_PKEY, chain: *stack_st_X509): cint <cimport,nodecl> end
global function SSL_CTX_set_tlsext_ticket_key_evp_cb(ctx: *SSL_CTX, fp: function(a1: *SSL, a2: *cuchar, a3: *cuchar, a4: *EVP_CIPHER_CTX, a5: *EVP_MAC_CTX, a6: cint): cint): cint <cimport,nodecl> end
global function SSL_CTX_set_tlsext_use_srtp(ctx: *SSL_CTX, profiles: cstring): cint <cimport,nodecl> end
global function SSL_set_tlsext_use_srtp(ssl: *SSL, profiles: cstring): cint <cimport,nodecl> end
global function SSL_get_srtp_profiles(ssl: *SSL): *stack_st_SRTP_PROTECTION_PROFILE <cimport,nodecl> end
global function SSL_get_selected_srtp_profile(s: *SSL): *SRTP_PROTECTION_PROFILE <cimport,nodecl> end
global function SSL_set_debug(s: *SSL, debug: cint): void <cimport,nodecl> end
global function SSL_in_init(s: *SSL): cint <cimport,nodecl> end
global function SSL_in_before(s: *SSL): cint <cimport,nodecl> end
global function SSL_is_init_finished(s: *SSL): cint <cimport,nodecl> end
global function SSL_get_finished(s: *SSL, buf: pointer, count: csize): csize <cimport,nodecl> end
global function SSL_get_peer_finished(s: *SSL, buf: pointer, count: csize): csize <cimport,nodecl> end
global function SSL_get0_group_name(s: *SSL): cstring <cimport,nodecl> end
global function SSL_group_to_name(s: *SSL, id: cint): cstring <cimport,nodecl> end
global function SSL_set0_tmp_dh_pkey(s: *SSL, dhpkey: *EVP_PKEY): cint <cimport,nodecl> end
global function SSL_CTX_set0_tmp_dh_pkey(ctx: *SSL_CTX, dhpkey: *EVP_PKEY): cint <cimport,nodecl> end
global function SSL_CTX_set_cipher_list(a1: *SSL_CTX, str: cstring): cint <cimport,nodecl> end
global function SSL_CTX_new(meth: *SSL_METHOD): *SSL_CTX <cimport,nodecl> end
global function SSL_CTX_new_ex(libctx: *OSSL_LIB_CTX, propq: cstring, meth: *SSL_METHOD): *SSL_CTX <cimport,nodecl> end
global function SSL_CTX_up_ref(ctx: *SSL_CTX): cint <cimport,nodecl> end
global function SSL_CTX_free(a1: *SSL_CTX): void <cimport,nodecl> end
global function SSL_CTX_set_timeout(ctx: *SSL_CTX, t: clong): clong <cimport,nodecl> end
global function SSL_CTX_get_timeout(ctx: *SSL_CTX): clong <cimport,nodecl> end
global function SSL_CTX_get_cert_store(a1: *SSL_CTX): *X509_STORE <cimport,nodecl> end
global function SSL_CTX_set_cert_store(a1: *SSL_CTX, a2: *X509_STORE): void <cimport,nodecl> end
global function SSL_CTX_set1_cert_store(a1: *SSL_CTX, a2: *X509_STORE): void <cimport,nodecl> end
global function SSL_want(s: *SSL): cint <cimport,nodecl> end
global function SSL_clear(s: *SSL): cint <cimport,nodecl> end
global function SSL_CTX_flush_sessions(ctx: *SSL_CTX, _tm: clong): void <cimport,nodecl> end
global function SSL_CTX_flush_sessions_ex(ctx: *SSL_CTX, _tm: ctime_t): void <cimport,nodecl> end
global function SSL_get_current_cipher(s: *SSL): *SSL_CIPHER <cimport,nodecl> end
global function SSL_get_pending_cipher(s: *SSL): *SSL_CIPHER <cimport,nodecl> end
global function SSL_CIPHER_get_bits(c: *SSL_CIPHER, alg_bits: *cint): cint <cimport,nodecl> end
global function SSL_CIPHER_get_version(c: *SSL_CIPHER): cstring <cimport,nodecl> end
global function SSL_CIPHER_get_name(c: *SSL_CIPHER): cstring <cimport,nodecl> end
global function SSL_CIPHER_standard_name(c: *SSL_CIPHER): cstring <cimport,nodecl> end
global function OPENSSL_cipher_name(rfc_name: cstring): cstring <cimport,nodecl> end
global function SSL_CIPHER_get_id(c: *SSL_CIPHER): uint32 <cimport,nodecl> end
global function SSL_CIPHER_get_protocol_id(c: *SSL_CIPHER): uint16 <cimport,nodecl> end
global function SSL_CIPHER_get_kx_nid(c: *SSL_CIPHER): cint <cimport,nodecl> end
global function SSL_CIPHER_get_auth_nid(c: *SSL_CIPHER): cint <cimport,nodecl> end
global function SSL_CIPHER_get_handshake_digest(c: *SSL_CIPHER): *EVP_MD <cimport,nodecl> end
global function SSL_CIPHER_is_aead(c: *SSL_CIPHER): cint <cimport,nodecl> end
global function SSL_get_fd(s: *SSL): cint <cimport,nodecl> end
global function SSL_get_rfd(s: *SSL): cint <cimport,nodecl> end
global function SSL_get_wfd(s: *SSL): cint <cimport,nodecl> end
global function SSL_get_cipher_list(s: *SSL, n: cint): cstring <cimport,nodecl> end
global function SSL_get_shared_ciphers(s: *SSL, buf: cstring, size: cint): cstring <cimport,nodecl> end
global function SSL_get_read_ahead(s: *SSL): cint <cimport,nodecl> end
global function SSL_pending(s: *SSL): cint <cimport,nodecl> end
global function SSL_has_pending(s: *SSL): cint <cimport,nodecl> end
global function SSL_set_fd(s: *SSL, fd: cint): cint <cimport,nodecl> end
global function SSL_set_rfd(s: *SSL, fd: cint): cint <cimport,nodecl> end
global function SSL_set_wfd(s: *SSL, fd: cint): cint <cimport,nodecl> end
global function SSL_set0_rbio(s: *SSL, rbio: *BIO): void <cimport,nodecl> end
global function SSL_set0_wbio(s: *SSL, wbio: *BIO): void <cimport,nodecl> end
global function SSL_set_bio(s: *SSL, rbio: *BIO, wbio: *BIO): void <cimport,nodecl> end
global function SSL_get_rbio(s: *SSL): *BIO <cimport,nodecl> end
global function SSL_get_wbio(s: *SSL): *BIO <cimport,nodecl> end
global function SSL_set_cipher_list(s: *SSL, str: cstring): cint <cimport,nodecl> end
global function SSL_CTX_set_ciphersuites(ctx: *SSL_CTX, str: cstring): cint <cimport,nodecl> end
global function SSL_set_ciphersuites(s: *SSL, str: cstring): cint <cimport,nodecl> end
global function SSL_set_read_ahead(s: *SSL, yes: cint): void <cimport,nodecl> end
global function SSL_get_verify_mode(s: *SSL): cint <cimport,nodecl> end
global function SSL_get_verify_depth(s: *SSL): cint <cimport,nodecl> end
global function SSL_get_verify_callback(s: *SSL): SSL_verify_cb <cimport,nodecl> end
global function SSL_set_verify(s: *SSL, mode: cint, callback: SSL_verify_cb): void <cimport,nodecl> end
global function SSL_set_verify_depth(s: *SSL, depth: cint): void <cimport,nodecl> end
global function SSL_set_cert_cb(s: *SSL, cb: function(ssl: *SSL, arg: pointer): cint, arg: pointer): void <cimport,nodecl> end
global function SSL_use_RSAPrivateKey(ssl: *SSL, rsa: *RSA): cint <cimport,nodecl> end
global function SSL_use_RSAPrivateKey_ASN1(ssl: *SSL, d: *cuchar, len: clong): cint <cimport,nodecl> end
global function SSL_use_PrivateKey(ssl: *SSL, pkey: *EVP_PKEY): cint <cimport,nodecl> end
global function SSL_use_PrivateKey_ASN1(pk: cint, ssl: *SSL, d: *cuchar, len: clong): cint <cimport,nodecl> end
global function SSL_use_certificate(ssl: *SSL, x: *X509): cint <cimport,nodecl> end
global function SSL_use_certificate_ASN1(ssl: *SSL, d: *cuchar, len: cint): cint <cimport,nodecl> end
global function SSL_use_cert_and_key(ssl: *SSL, x509: *X509, privatekey: *EVP_PKEY, chain: *stack_st_X509, override: cint): cint <cimport,nodecl> end
global function SSL_CTX_use_serverinfo(ctx: *SSL_CTX, serverinfo: *cuchar, serverinfo_length: csize): cint <cimport,nodecl> end
global function SSL_CTX_use_serverinfo_ex(ctx: *SSL_CTX, version: cuint, serverinfo: *cuchar, serverinfo_length: csize): cint <cimport,nodecl> end
global function SSL_CTX_use_serverinfo_file(ctx: *SSL_CTX, file: cstring): cint <cimport,nodecl> end
global function SSL_use_RSAPrivateKey_file(ssl: *SSL, file: cstring, type: cint): cint <cimport,nodecl> end
global function SSL_use_PrivateKey_file(ssl: *SSL, file: cstring, type: cint): cint <cimport,nodecl> end
global function SSL_use_certificate_file(ssl: *SSL, file: cstring, type: cint): cint <cimport,nodecl> end
global function SSL_CTX_use_RSAPrivateKey_file(ctx: *SSL_CTX, file: cstring, type: cint): cint <cimport,nodecl> end
global function SSL_CTX_use_PrivateKey_file(ctx: *SSL_CTX, file: cstring, type: cint): cint <cimport,nodecl> end
global function SSL_CTX_use_certificate_file(ctx: *SSL_CTX, file: cstring, type: cint): cint <cimport,nodecl> end
global function SSL_CTX_use_certificate_chain_file(ctx: *SSL_CTX, file: cstring): cint <cimport,nodecl> end
global function SSL_use_certificate_chain_file(ssl: *SSL, file: cstring): cint <cimport,nodecl> end
global function SSL_load_client_CA_file(file: cstring): *stack_st_X509_NAME <cimport,nodecl> end
global function SSL_load_client_CA_file_ex(file: cstring, libctx: *OSSL_LIB_CTX, propq: cstring): *stack_st_X509_NAME <cimport,nodecl> end
global function SSL_add_file_cert_subjects_to_stack(stackCAs: *stack_st_X509_NAME, file: cstring): cint <cimport,nodecl> end
global function SSL_add_dir_cert_subjects_to_stack(stackCAs: *stack_st_X509_NAME, dir: cstring): cint <cimport,nodecl> end
global function SSL_add_store_cert_subjects_to_stack(stackCAs: *stack_st_X509_NAME, uri: cstring): cint <cimport,nodecl> end
global function SSL_state_string(s: *SSL): cstring <cimport,nodecl> end
global function SSL_rstate_string(s: *SSL): cstring <cimport,nodecl> end
global function SSL_state_string_long(s: *SSL): cstring <cimport,nodecl> end
global function SSL_rstate_string_long(s: *SSL): cstring <cimport,nodecl> end
global function SSL_SESSION_get_time(s: *SSL_SESSION): clong <cimport,nodecl> end
global function SSL_SESSION_set_time(s: *SSL_SESSION, t: clong): clong <cimport,nodecl> end
global function SSL_SESSION_get_timeout(s: *SSL_SESSION): clong <cimport,nodecl> end
global function SSL_SESSION_set_timeout(s: *SSL_SESSION, t: clong): clong <cimport,nodecl> end
global function SSL_SESSION_get_protocol_version(s: *SSL_SESSION): cint <cimport,nodecl> end
global function SSL_SESSION_set_protocol_version(s: *SSL_SESSION, version: cint): cint <cimport,nodecl> end
global function SSL_SESSION_get_time_ex(s: *SSL_SESSION): ctime_t <cimport,nodecl> end
global function SSL_SESSION_set_time_ex(s: *SSL_SESSION, t: ctime_t): ctime_t <cimport,nodecl> end
global function SSL_SESSION_get0_hostname(s: *SSL_SESSION): cstring <cimport,nodecl> end
global function SSL_SESSION_set1_hostname(s: *SSL_SESSION, hostname: cstring): cint <cimport,nodecl> end
global function SSL_SESSION_get0_alpn_selected(s: *SSL_SESSION, alpn: **cuchar, len: *csize): void <cimport,nodecl> end
global function SSL_SESSION_set1_alpn_selected(s: *SSL_SESSION, alpn: *cuchar, len: csize): cint <cimport,nodecl> end
global function SSL_SESSION_get0_cipher(s: *SSL_SESSION): *SSL_CIPHER <cimport,nodecl> end
global function SSL_SESSION_set_cipher(s: *SSL_SESSION, cipher: *SSL_CIPHER): cint <cimport,nodecl> end
global function SSL_SESSION_has_ticket(s: *SSL_SESSION): cint <cimport,nodecl> end
global function SSL_SESSION_get_ticket_lifetime_hint(s: *SSL_SESSION): culong <cimport,nodecl> end
global function SSL_SESSION_get0_ticket(s: *SSL_SESSION, tick: **cuchar, len: *csize): void <cimport,nodecl> end
global function SSL_SESSION_get_max_early_data(s: *SSL_SESSION): uint32 <cimport,nodecl> end
global function SSL_SESSION_set_max_early_data(s: *SSL_SESSION, max_early_data: uint32): cint <cimport,nodecl> end
global function SSL_copy_session_id(to: *SSL, from: *SSL): cint <cimport,nodecl> end
global function SSL_SESSION_get0_peer(s: *SSL_SESSION): *X509 <cimport,nodecl> end
global function SSL_SESSION_set1_id_context(s: *SSL_SESSION, sid_ctx: *cuchar, sid_ctx_len: cuint): cint <cimport,nodecl> end
global function SSL_SESSION_set1_id(s: *SSL_SESSION, sid: *cuchar, sid_len: cuint): cint <cimport,nodecl> end
global function SSL_SESSION_is_resumable(s: *SSL_SESSION): cint <cimport,nodecl> end
global function SSL_SESSION_new(): *SSL_SESSION <cimport,nodecl> end
global function SSL_SESSION_dup(src: *SSL_SESSION): *SSL_SESSION <cimport,nodecl> end
global function SSL_SESSION_get_id(s: *SSL_SESSION, len: *cuint): *cuchar <cimport,nodecl> end
global function SSL_SESSION_get0_id_context(s: *SSL_SESSION, len: *cuint): *cuchar <cimport,nodecl> end
global function SSL_SESSION_get_compress_id(s: *SSL_SESSION): cuint <cimport,nodecl> end
global function SSL_SESSION_print_fp(fp: *FILE, ses: *SSL_SESSION): cint <cimport,nodecl> end
global function SSL_SESSION_print(fp: *BIO, ses: *SSL_SESSION): cint <cimport,nodecl> end
global function SSL_SESSION_print_keylog(bp: *BIO, x: *SSL_SESSION): cint <cimport,nodecl> end
global function SSL_SESSION_up_ref(ses: *SSL_SESSION): cint <cimport,nodecl> end
global function SSL_SESSION_free(ses: *SSL_SESSION): void <cimport,nodecl> end
global function SSL_set_session(to: *SSL, session: *SSL_SESSION): cint <cimport,nodecl> end
global function SSL_CTX_add_session(ctx: *SSL_CTX, session: *SSL_SESSION): cint <cimport,nodecl> end
global function SSL_CTX_remove_session(ctx: *SSL_CTX, session: *SSL_SESSION): cint <cimport,nodecl> end
global function SSL_CTX_set_generate_session_id(ctx: *SSL_CTX, cb: function(ssl: *SSL, id: *cuchar, id_len: *cuint): cint): cint <cimport,nodecl> end
global function SSL_set_generate_session_id(s: *SSL, cb: function(ssl: *SSL, id: *cuchar, id_len: *cuint): cint): cint <cimport,nodecl> end
global function SSL_has_matching_session_id(s: *SSL, id: *cuchar, id_len: cuint): cint <cimport,nodecl> end
global function SSL_get0_peer_certificate(s: *SSL): *X509 <cimport,nodecl> end
global function SSL_get1_peer_certificate(s: *SSL): *X509 <cimport,nodecl> end
global function SSL_get_peer_cert_chain(s: *SSL): *stack_st_X509 <cimport,nodecl> end
global function SSL_CTX_get_verify_mode(ctx: *SSL_CTX): cint <cimport,nodecl> end
global function SSL_CTX_get_verify_depth(ctx: *SSL_CTX): cint <cimport,nodecl> end
global function SSL_CTX_get_verify_callback(ctx: *SSL_CTX): SSL_verify_cb <cimport,nodecl> end
global function SSL_CTX_set_verify(ctx: *SSL_CTX, mode: cint, callback: SSL_verify_cb): void <cimport,nodecl> end
global function SSL_CTX_set_verify_depth(ctx: *SSL_CTX, depth: cint): void <cimport,nodecl> end
global function SSL_CTX_set_cert_verify_callback(ctx: *SSL_CTX, cb: function(a1: *X509_STORE_CTX, a2: pointer): cint, arg: pointer): void <cimport,nodecl> end
global function SSL_CTX_set_cert_cb(c: *SSL_CTX, cb: function(ssl: *SSL, arg: pointer): cint, arg: pointer): void <cimport,nodecl> end
global function SSL_CTX_use_RSAPrivateKey(ctx: *SSL_CTX, rsa: *RSA): cint <cimport,nodecl> end
global function SSL_CTX_use_RSAPrivateKey_ASN1(ctx: *SSL_CTX, d: *cuchar, len: clong): cint <cimport,nodecl> end
global function SSL_CTX_use_PrivateKey(ctx: *SSL_CTX, pkey: *EVP_PKEY): cint <cimport,nodecl> end
global function SSL_CTX_use_PrivateKey_ASN1(pk: cint, ctx: *SSL_CTX, d: *cuchar, len: clong): cint <cimport,nodecl> end
global function SSL_CTX_use_certificate(ctx: *SSL_CTX, x: *X509): cint <cimport,nodecl> end
global function SSL_CTX_use_certificate_ASN1(ctx: *SSL_CTX, len: cint, d: *cuchar): cint <cimport,nodecl> end
global function SSL_CTX_use_cert_and_key(ctx: *SSL_CTX, x509: *X509, privatekey: *EVP_PKEY, chain: *stack_st_X509, override: cint): cint <cimport,nodecl> end
global function SSL_CTX_set_default_passwd_cb(ctx: *SSL_CTX, cb: *function(buf: cstring, size: cint, rwflag: cint, userdata: pointer): cint): void <cimport,nodecl> end
global function SSL_CTX_set_default_passwd_cb_userdata(ctx: *SSL_CTX, u: pointer): void <cimport,nodecl> end
global function SSL_CTX_get_default_passwd_cb(ctx: *SSL_CTX): *function(buf: cstring, size: cint, rwflag: cint, userdata: pointer): cint <cimport,nodecl> end
global function SSL_CTX_get_default_passwd_cb_userdata(ctx: *SSL_CTX): pointer <cimport,nodecl> end
global function SSL_set_default_passwd_cb(s: *SSL, cb: *function(buf: cstring, size: cint, rwflag: cint, userdata: pointer): cint): void <cimport,nodecl> end
global function SSL_set_default_passwd_cb_userdata(s: *SSL, u: pointer): void <cimport,nodecl> end
global function SSL_get_default_passwd_cb(s: *SSL): *function(buf: cstring, size: cint, rwflag: cint, userdata: pointer): cint <cimport,nodecl> end
global function SSL_get_default_passwd_cb_userdata(s: *SSL): pointer <cimport,nodecl> end
global function SSL_CTX_check_private_key(ctx: *SSL_CTX): cint <cimport,nodecl> end
global function SSL_check_private_key(ctx: *SSL): cint <cimport,nodecl> end
global function SSL_CTX_set_session_id_context(ctx: *SSL_CTX, sid_ctx: *cuchar, sid_ctx_len: cuint): cint <cimport,nodecl> end
global function SSL_new(ctx: *SSL_CTX): *SSL <cimport,nodecl> end
global function SSL_up_ref(s: *SSL): cint <cimport,nodecl> end
global function SSL_is_dtls(s: *SSL): cint <cimport,nodecl> end
global function SSL_is_tls(s: *SSL): cint <cimport,nodecl> end
global function SSL_is_quic(s: *SSL): cint <cimport,nodecl> end
global function SSL_set_session_id_context(ssl: *SSL, sid_ctx: *cuchar, sid_ctx_len: cuint): cint <cimport,nodecl> end
global function SSL_CTX_set_purpose(ctx: *SSL_CTX, purpose: cint): cint <cimport,nodecl> end
global function SSL_set_purpose(ssl: *SSL, purpose: cint): cint <cimport,nodecl> end
global function SSL_CTX_set_trust(ctx: *SSL_CTX, trust: cint): cint <cimport,nodecl> end
global function SSL_set_trust(ssl: *SSL, trust: cint): cint <cimport,nodecl> end
global function SSL_set1_host(s: *SSL, hostname: cstring): cint <cimport,nodecl> end
global function SSL_add1_host(s: *SSL, hostname: cstring): cint <cimport,nodecl> end
global function SSL_get0_peername(s: *SSL): cstring <cimport,nodecl> end
global function SSL_set_hostflags(s: *SSL, flags: cuint): void <cimport,nodecl> end
global function SSL_CTX_dane_enable(ctx: *SSL_CTX): cint <cimport,nodecl> end
global function SSL_CTX_dane_mtype_set(ctx: *SSL_CTX, md: *EVP_MD, mtype: uint8, ord: uint8): cint <cimport,nodecl> end
global function SSL_dane_enable(s: *SSL, basedomain: cstring): cint <cimport,nodecl> end
global function SSL_dane_tlsa_add(s: *SSL, usage: uint8, selector: uint8, mtype: uint8, data: *cuchar, dlen: csize): cint <cimport,nodecl> end
global function SSL_get0_dane_authority(s: *SSL, mcert: **X509, mspki: **EVP_PKEY): cint <cimport,nodecl> end
global function SSL_get0_dane_tlsa(s: *SSL, usage: *uint8, selector: *uint8, mtype: *uint8, data: **cuchar, dlen: *csize): cint <cimport,nodecl> end
global function SSL_get0_dane(ssl: *SSL): *SSL_DANE <cimport,nodecl> end
global function SSL_CTX_dane_set_flags(ctx: *SSL_CTX, flags: culong): culong <cimport,nodecl> end
global function SSL_CTX_dane_clear_flags(ctx: *SSL_CTX, flags: culong): culong <cimport,nodecl> end
global function SSL_dane_set_flags(ssl: *SSL, flags: culong): culong <cimport,nodecl> end
global function SSL_dane_clear_flags(ssl: *SSL, flags: culong): culong <cimport,nodecl> end
global function SSL_CTX_set1_param(ctx: *SSL_CTX, vpm: *X509_VERIFY_PARAM): cint <cimport,nodecl> end
global function SSL_set1_param(ssl: *SSL, vpm: *X509_VERIFY_PARAM): cint <cimport,nodecl> end
global function SSL_CTX_get0_param(ctx: *SSL_CTX): *X509_VERIFY_PARAM <cimport,nodecl> end
global function SSL_get0_param(ssl: *SSL): *X509_VERIFY_PARAM <cimport,nodecl> end
global function SSL_CTX_set_srp_username(ctx: *SSL_CTX, name: cstring): cint <cimport,nodecl> end
global function SSL_CTX_set_srp_password(ctx: *SSL_CTX, password: cstring): cint <cimport,nodecl> end
global function SSL_CTX_set_srp_strength(ctx: *SSL_CTX, strength: cint): cint <cimport,nodecl> end
global function SSL_CTX_set_srp_client_pwd_callback(ctx: *SSL_CTX, cb: function(a1: *SSL, a2: pointer): cstring): cint <cimport,nodecl> end
global function SSL_CTX_set_srp_verify_param_callback(ctx: *SSL_CTX, cb: function(a1: *SSL, a2: pointer): cint): cint <cimport,nodecl> end
global function SSL_CTX_set_srp_username_callback(ctx: *SSL_CTX, cb: function(a1: *SSL, a2: *cint, a3: pointer): cint): cint <cimport,nodecl> end
global function SSL_CTX_set_srp_cb_arg(ctx: *SSL_CTX, arg: pointer): cint <cimport,nodecl> end
global function SSL_set_srp_server_param(s: *SSL, N: *BIGNUM, g: *BIGNUM, sa: *BIGNUM, v: *BIGNUM, info: cstring): cint <cimport,nodecl> end
global function SSL_set_srp_server_param_pw(s: *SSL, user: cstring, pass: cstring, grp: cstring): cint <cimport,nodecl> end
global function SSL_get_srp_g(s: *SSL): *BIGNUM <cimport,nodecl> end
global function SSL_get_srp_N(s: *SSL): *BIGNUM <cimport,nodecl> end
global function SSL_get_srp_username(s: *SSL): cstring <cimport,nodecl> end
global function SSL_get_srp_userinfo(s: *SSL): cstring <cimport,nodecl> end
global function SSL_CTX_set_client_hello_cb(c: *SSL_CTX, cb: SSL_client_hello_cb_fn, arg: pointer): void <cimport,nodecl> end
global function SSL_CTX_set_new_pending_conn_cb(c: *SSL_CTX, cb: SSL_new_pending_conn_cb_fn, arg: pointer): void <cimport,nodecl> end
global function SSL_client_hello_isv2(s: *SSL): cint <cimport,nodecl> end
global function SSL_client_hello_get0_legacy_version(s: *SSL): cuint <cimport,nodecl> end
global function SSL_client_hello_get0_random(s: *SSL, out: **cuchar): csize <cimport,nodecl> end
global function SSL_client_hello_get0_session_id(s: *SSL, out: **cuchar): csize <cimport,nodecl> end
global function SSL_client_hello_get0_ciphers(s: *SSL, out: **cuchar): csize <cimport,nodecl> end
global function SSL_client_hello_get0_compression_methods(s: *SSL, out: **cuchar): csize <cimport,nodecl> end
global function SSL_client_hello_get1_extensions_present(s: *SSL, out: **cint, outlen: *csize): cint <cimport,nodecl> end
global function SSL_client_hello_get_extension_order(s: *SSL, exts: *uint16, num_exts: *csize): cint <cimport,nodecl> end
global function SSL_client_hello_get0_ext(s: *SSL, type: cuint, out: **cuchar, outlen: *csize): cint <cimport,nodecl> end
global function SSL_certs_clear(s: *SSL): void <cimport,nodecl> end
global function SSL_free(ssl: *SSL): void <cimport,nodecl> end
global function SSL_waiting_for_async(s: *SSL): cint <cimport,nodecl> end
global function SSL_get_all_async_fds(s: *SSL, fds: *cint, numfds: *csize): cint <cimport,nodecl> end
global function SSL_get_changed_async_fds(s: *SSL, addfd: *cint, numaddfds: *csize, delfd: *cint, numdelfds: *csize): cint <cimport,nodecl> end
global function SSL_CTX_set_async_callback(ctx: *SSL_CTX, callback: SSL_async_callback_fn): cint <cimport,nodecl> end
global function SSL_CTX_set_async_callback_arg(ctx: *SSL_CTX, arg: pointer): cint <cimport,nodecl> end
global function SSL_set_async_callback(s: *SSL, callback: SSL_async_callback_fn): cint <cimport,nodecl> end
global function SSL_set_async_callback_arg(s: *SSL, arg: pointer): cint <cimport,nodecl> end
global function SSL_get_async_status(s: *SSL, status: *cint): cint <cimport,nodecl> end
global function SSL_accept(ssl: *SSL): cint <cimport,nodecl> end
global function SSL_stateless(s: *SSL): cint <cimport,nodecl> end
global function SSL_connect(ssl: *SSL): cint <cimport,nodecl> end
global function SSL_read(ssl: *SSL, buf: pointer, num: cint): cint <cimport,nodecl> end
global function SSL_read_ex(ssl: *SSL, buf: pointer, num: csize, readbytes: *csize): cint <cimport,nodecl> end
global function SSL_read_early_data(s: *SSL, buf: pointer, num: csize, readbytes: *csize): cint <cimport,nodecl> end
global function SSL_peek(ssl: *SSL, buf: pointer, num: cint): cint <cimport,nodecl> end
global function SSL_peek_ex(ssl: *SSL, buf: pointer, num: csize, readbytes: *csize): cint <cimport,nodecl> end
global function SSL_sendfile(s: *SSL, fd: cint, offset: clong, size: csize, flags: cint): clong <cimport,nodecl> end
global function SSL_write(ssl: *SSL, buf: pointer, num: cint): cint <cimport,nodecl> end
global function SSL_write_ex(s: *SSL, buf: pointer, num: csize, written: *csize): cint <cimport,nodecl> end
global function SSL_write_early_data(s: *SSL, buf: pointer, num: csize, written: *csize): cint <cimport,nodecl> end
global function SSL_ctrl(ssl: *SSL, cmd: cint, larg: clong, parg: pointer): clong <cimport,nodecl> end
global function SSL_callback_ctrl(a1: *SSL, a2: cint, a3: function(): void): clong <cimport,nodecl> end
global function SSL_CTX_ctrl(ctx: *SSL_CTX, cmd: cint, larg: clong, parg: pointer): clong <cimport,nodecl> end
global function SSL_CTX_callback_ctrl(a1: *SSL_CTX, a2: cint, a3: function(): void): clong <cimport,nodecl> end
global function SSL_write_ex2(s: *SSL, buf: pointer, num: csize, flags: uint64, written: *csize): cint <cimport,nodecl> end
global function SSL_get_early_data_status(s: *SSL): cint <cimport,nodecl> end
global function SSL_get_error(s: *SSL, ret_code: cint): cint <cimport,nodecl> end
global function SSL_get_version(s: *SSL): cstring <cimport,nodecl> end
global function SSL_get_handshake_rtt(s: *SSL, rtt: *uint64): cint <cimport,nodecl> end
global function SSL_CTX_set_ssl_version(ctx: *SSL_CTX, meth: *SSL_METHOD): cint <cimport,nodecl> end
global function TLS_method(): *SSL_METHOD <cimport,nodecl> end
global function TLS_server_method(): *SSL_METHOD <cimport,nodecl> end
global function TLS_client_method(): *SSL_METHOD <cimport,nodecl> end
global function TLSv1_method(): *SSL_METHOD <cimport,nodecl> end
global function TLSv1_server_method(): *SSL_METHOD <cimport,nodecl> end
global function TLSv1_client_method(): *SSL_METHOD <cimport,nodecl> end
global function TLSv1_1_method(): *SSL_METHOD <cimport,nodecl> end
global function TLSv1_1_server_method(): *SSL_METHOD <cimport,nodecl> end
global function TLSv1_1_client_method(): *SSL_METHOD <cimport,nodecl> end
global function TLSv1_2_method(): *SSL_METHOD <cimport,nodecl> end
global function TLSv1_2_server_method(): *SSL_METHOD <cimport,nodecl> end
global function TLSv1_2_client_method(): *SSL_METHOD <cimport,nodecl> end
global function SSL_get_ciphers(s: *SSL): *stack_st_SSL_CIPHER <cimport,nodecl> end
global function SSL_CTX_get_ciphers(ctx: *SSL_CTX): *stack_st_SSL_CIPHER <cimport,nodecl> end
global function SSL_get_client_ciphers(s: *SSL): *stack_st_SSL_CIPHER <cimport,nodecl> end
global function SSL_get1_supported_ciphers(s: *SSL): *stack_st_SSL_CIPHER <cimport,nodecl> end
global function SSL_do_handshake(s: *SSL): cint <cimport,nodecl> end
global function SSL_key_update(s: *SSL, updatetype: cint): cint <cimport,nodecl> end
global function SSL_get_key_update_type(s: *SSL): cint <cimport,nodecl> end
global function SSL_renegotiate(s: *SSL): cint <cimport,nodecl> end
global function SSL_renegotiate_abbreviated(s: *SSL): cint <cimport,nodecl> end
global function SSL_renegotiate_pending(s: *SSL): cint <cimport,nodecl> end
global function SSL_new_session_ticket(s: *SSL): cint <cimport,nodecl> end
global function SSL_shutdown(s: *SSL): cint <cimport,nodecl> end
global function SSL_verify_client_post_handshake(s: *SSL): cint <cimport,nodecl> end
global function SSL_CTX_set_post_handshake_auth(ctx: *SSL_CTX, val: cint): void <cimport,nodecl> end
global function SSL_set_post_handshake_auth(s: *SSL, val: cint): void <cimport,nodecl> end
global function SSL_CTX_get_ssl_method(ctx: *SSL_CTX): *SSL_METHOD <cimport,nodecl> end
global function SSL_get_ssl_method(s: *SSL): *SSL_METHOD <cimport,nodecl> end
global function SSL_set_ssl_method(s: *SSL, method: *SSL_METHOD): cint <cimport,nodecl> end
global function SSL_alert_type_string_long(value: cint): cstring <cimport,nodecl> end
global function SSL_alert_type_string(value: cint): cstring <cimport,nodecl> end
global function SSL_alert_desc_string_long(value: cint): cstring <cimport,nodecl> end
global function SSL_alert_desc_string(value: cint): cstring <cimport,nodecl> end
global function SSL_set0_CA_list(s: *SSL, name_list: *stack_st_X509_NAME): void <cimport,nodecl> end
global function SSL_CTX_set0_CA_list(ctx: *SSL_CTX, name_list: *stack_st_X509_NAME): void <cimport,nodecl> end
global function SSL_get0_CA_list(s: *SSL): *stack_st_X509_NAME <cimport,nodecl> end
global function SSL_CTX_get0_CA_list(ctx: *SSL_CTX): *stack_st_X509_NAME <cimport,nodecl> end
global function SSL_add1_to_CA_list(ssl: *SSL, x: *X509): cint <cimport,nodecl> end
global function SSL_CTX_add1_to_CA_list(ctx: *SSL_CTX, x: *X509): cint <cimport,nodecl> end
global function SSL_get0_peer_CA_list(s: *SSL): *stack_st_X509_NAME <cimport,nodecl> end
global function SSL_set_client_CA_list(s: *SSL, name_list: *stack_st_X509_NAME): void <cimport,nodecl> end
global function SSL_CTX_set_client_CA_list(ctx: *SSL_CTX, name_list: *stack_st_X509_NAME): void <cimport,nodecl> end
global function SSL_get_client_CA_list(s: *SSL): *stack_st_X509_NAME <cimport,nodecl> end
global function SSL_CTX_get_client_CA_list(s: *SSL_CTX): *stack_st_X509_NAME <cimport,nodecl> end
global function SSL_add_client_CA(ssl: *SSL, x: *X509): cint <cimport,nodecl> end
global function SSL_CTX_add_client_CA(ctx: *SSL_CTX, x: *X509): cint <cimport,nodecl> end
global function SSL_set_connect_state(s: *SSL): void <cimport,nodecl> end
global function SSL_set_accept_state(s: *SSL): void <cimport,nodecl> end
global function SSL_get_default_timeout(s: *SSL): clong <cimport,nodecl> end
global function SSL_CIPHER_description(a1: *SSL_CIPHER, buf: cstring, size: cint): cstring <cimport,nodecl> end
global function SSL_dup_CA_list(sk: *stack_st_X509_NAME): *stack_st_X509_NAME <cimport,nodecl> end
global function SSL_dup(ssl: *SSL): *SSL <cimport,nodecl> end
global function SSL_get_certificate(ssl: *SSL): *X509 <cimport,nodecl> end
global function SSL_get_privatekey(ssl: *SSL): *EVP_PKEY <cimport,nodecl> end
global function SSL_CTX_get0_certificate(ctx: *SSL_CTX): *X509 <cimport,nodecl> end
global function SSL_CTX_get0_privatekey(ctx: *SSL_CTX): *EVP_PKEY <cimport,nodecl> end
global function SSL_CTX_set_quiet_shutdown(ctx: *SSL_CTX, mode: cint): void <cimport,nodecl> end
global function SSL_CTX_get_quiet_shutdown(ctx: *SSL_CTX): cint <cimport,nodecl> end
global function SSL_set_quiet_shutdown(ssl: *SSL, mode: cint): void <cimport,nodecl> end
global function SSL_get_quiet_shutdown(ssl: *SSL): cint <cimport,nodecl> end
global function SSL_set_shutdown(ssl: *SSL, mode: cint): void <cimport,nodecl> end
global function SSL_get_shutdown(ssl: *SSL): cint <cimport,nodecl> end
global function SSL_version(ssl: *SSL): cint <cimport,nodecl> end
global function SSL_client_version(s: *SSL): cint <cimport,nodecl> end
global function SSL_CTX_set_default_verify_paths(ctx: *SSL_CTX): cint <cimport,nodecl> end
global function SSL_CTX_set_default_verify_dir(ctx: *SSL_CTX): cint <cimport,nodecl> end
global function SSL_CTX_set_default_verify_file(ctx: *SSL_CTX): cint <cimport,nodecl> end
global function SSL_CTX_set_default_verify_store(ctx: *SSL_CTX): cint <cimport,nodecl> end
global function SSL_CTX_load_verify_file(ctx: *SSL_CTX, CAfile: cstring): cint <cimport,nodecl> end
global function SSL_CTX_load_verify_dir(ctx: *SSL_CTX, CApath: cstring): cint <cimport,nodecl> end
global function SSL_CTX_load_verify_store(ctx: *SSL_CTX, CAstore: cstring): cint <cimport,nodecl> end
global function SSL_CTX_load_verify_locations(ctx: *SSL_CTX, CAfile: cstring, CApath: cstring): cint <cimport,nodecl> end
global function SSL_get_session(ssl: *SSL): *SSL_SESSION <cimport,nodecl> end
global function SSL_get1_session(ssl: *SSL): *SSL_SESSION <cimport,nodecl> end
global function SSL_get_SSL_CTX(ssl: *SSL): *SSL_CTX <cimport,nodecl> end
global function SSL_set_SSL_CTX(ssl: *SSL, ctx: *SSL_CTX): *SSL_CTX <cimport,nodecl> end
global function SSL_set_info_callback(ssl: *SSL, cb: function(ssl: *SSL, type: cint, val: cint): void): void <cimport,nodecl> end
global function SSL_get_info_callback(ssl: *SSL): function(ssl: *SSL, type: cint, val: cint): void <cimport,nodecl> end
global function SSL_get_state(ssl: *SSL): OSSL_HANDSHAKE_STATE <cimport,nodecl> end
global function SSL_set_verify_result(ssl: *SSL, v: clong): void <cimport,nodecl> end
global function SSL_get_verify_result(ssl: *SSL): clong <cimport,nodecl> end
global function SSL_get0_verified_chain(s: *SSL): *stack_st_X509 <cimport,nodecl> end
global function SSL_get_client_random(ssl: *SSL, out: *cuchar, outlen: csize): csize <cimport,nodecl> end
global function SSL_get_server_random(ssl: *SSL, out: *cuchar, outlen: csize): csize <cimport,nodecl> end
global function SSL_SESSION_get_master_key(sess: *SSL_SESSION, out: *cuchar, outlen: csize): csize <cimport,nodecl> end
global function SSL_SESSION_set1_master_key(sess: *SSL_SESSION, in_: *cuchar, len: csize): cint <cimport,nodecl> end
global function SSL_SESSION_get_max_fragment_length(sess: *SSL_SESSION): uint8 <cimport,nodecl> end
global function SSL_set_ex_data(ssl: *SSL, idx: cint, data: pointer): cint <cimport,nodecl> end
global function SSL_get_ex_data(ssl: *SSL, idx: cint): pointer <cimport,nodecl> end
global function SSL_SESSION_set_ex_data(ss: *SSL_SESSION, idx: cint, data: pointer): cint <cimport,nodecl> end
global function SSL_SESSION_get_ex_data(ss: *SSL_SESSION, idx: cint): pointer <cimport,nodecl> end
global function SSL_CTX_set_ex_data(ssl: *SSL_CTX, idx: cint, data: pointer): cint <cimport,nodecl> end
global function SSL_CTX_get_ex_data(ssl: *SSL_CTX, idx: cint): pointer <cimport,nodecl> end
global function SSL_get_ex_data_X509_STORE_CTX_idx(): cint <cimport,nodecl> end
global function SSL_CTX_set_default_read_buffer_len(ctx: *SSL_CTX, len: csize): void <cimport,nodecl> end
global function SSL_set_default_read_buffer_len(s: *SSL, len: csize): void <cimport,nodecl> end
global function SSL_CTX_set_tmp_dh_callback(ctx: *SSL_CTX, dh: function(ssl: *SSL, is_export: cint, keylength: cint): *DH): void <cimport,nodecl> end
global function SSL_set_tmp_dh_callback(ssl: *SSL, dh: function(ssl: *SSL, is_export: cint, keylength: cint): *DH): void <cimport,nodecl> end
global function SSL_get_current_compression(s: *SSL): *COMP_METHOD <cimport,nodecl> end
global function SSL_get_current_expansion(s: *SSL): *COMP_METHOD <cimport,nodecl> end
global function SSL_COMP_get_name(comp: *COMP_METHOD): cstring <cimport,nodecl> end
global function SSL_COMP_get0_name(comp: *SSL_COMP): cstring <cimport,nodecl> end
global function SSL_COMP_get_id(comp: *SSL_COMP): cint <cimport,nodecl> end
global function SSL_COMP_get_compression_methods(): *stack_st_SSL_COMP <cimport,nodecl> end
global function SSL_COMP_set0_compression_methods(meths: *stack_st_SSL_COMP): *stack_st_SSL_COMP <cimport,nodecl> end
global function SSL_COMP_add_compression_method(id: cint, cm: *COMP_METHOD): cint <cimport,nodecl> end
global function SSL_CIPHER_find(ssl: *SSL, ptr: *cuchar): *SSL_CIPHER <cimport,nodecl> end
global function SSL_CIPHER_get_cipher_nid(c: *SSL_CIPHER): cint <cimport,nodecl> end
global function SSL_CIPHER_get_digest_nid(c: *SSL_CIPHER): cint <cimport,nodecl> end
global function SSL_bytes_to_cipher_list(s: *SSL, bytes: *cuchar, len: csize, isv2format: cint, sk: **stack_st_SSL_CIPHER, scsvs: **stack_st_SSL_CIPHER): cint <cimport,nodecl> end
global function SSL_set_session_ticket_ext(s: *SSL, ext_data: pointer, ext_len: cint): cint <cimport,nodecl> end
global function SSL_set_session_ticket_ext_cb(s: *SSL, cb: tls_session_ticket_ext_cb_fn, arg: pointer): cint <cimport,nodecl> end
global function SSL_set_session_secret_cb(s: *SSL, session_secret_cb: tls_session_secret_cb_fn, arg: pointer): cint <cimport,nodecl> end
global function SSL_CTX_set_not_resumable_session_callback(ctx: *SSL_CTX, cb: function(ssl: *SSL, is_forward_secure: cint): cint): void <cimport,nodecl> end
global function SSL_set_not_resumable_session_callback(ssl: *SSL, cb: function(ssl: *SSL, is_forward_secure: cint): cint): void <cimport,nodecl> end
global function SSL_CTX_set_record_padding_callback(ctx: *SSL_CTX, cb: function(ssl: *SSL, type: cint, len: csize, arg: pointer): csize): void <cimport,nodecl> end
global function SSL_CTX_set_record_padding_callback_arg(ctx: *SSL_CTX, arg: pointer): void <cimport,nodecl> end
global function SSL_CTX_get_record_padding_callback_arg(ctx: *SSL_CTX): pointer <cimport,nodecl> end
global function SSL_CTX_set_block_padding(ctx: *SSL_CTX, block_size: csize): cint <cimport,nodecl> end
global function SSL_CTX_set_block_padding_ex(ctx: *SSL_CTX, app_block_size: csize, hs_block_size: csize): cint <cimport,nodecl> end
global function SSL_set_record_padding_callback(ssl: *SSL, cb: function(ssl: *SSL, type: cint, len: csize, arg: pointer): csize): cint <cimport,nodecl> end
global function SSL_set_record_padding_callback_arg(ssl: *SSL, arg: pointer): void <cimport,nodecl> end
global function SSL_get_record_padding_callback_arg(ssl: *SSL): pointer <cimport,nodecl> end
global function SSL_set_block_padding(ssl: *SSL, block_size: csize): cint <cimport,nodecl> end
global function SSL_set_block_padding_ex(ssl: *SSL, app_block_size: csize, hs_block_size: csize): cint <cimport,nodecl> end
global function SSL_set_num_tickets(s: *SSL, num_tickets: csize): cint <cimport,nodecl> end
global function SSL_get_num_tickets(s: *SSL): csize <cimport,nodecl> end
global function SSL_CTX_set_num_tickets(ctx: *SSL_CTX, num_tickets: csize): cint <cimport,nodecl> end
global function SSL_CTX_get_num_tickets(ctx: *SSL_CTX): csize <cimport,nodecl> end
global function SSL_handle_events(s: *SSL): cint <cimport,nodecl> end
global function SSL_get_event_timeout(s: *SSL, tv: *timeval, is_infinite: *cint): cint <cimport,nodecl> end
global function SSL_get_rpoll_descriptor(s: *SSL, desc: *BIO_POLL_DESCRIPTOR): cint <cimport,nodecl> end
global function SSL_get_wpoll_descriptor(s: *SSL, desc: *BIO_POLL_DESCRIPTOR): cint <cimport,nodecl> end
global function SSL_net_read_desired(s: *SSL): cint <cimport,nodecl> end
global function SSL_net_write_desired(s: *SSL): cint <cimport,nodecl> end
global function SSL_set_blocking_mode(s: *SSL, blocking: cint): cint <cimport,nodecl> end
global function SSL_get_blocking_mode(s: *SSL): cint <cimport,nodecl> end
global function SSL_set1_initial_peer_addr(s: *SSL, peer_addr: *BIO_ADDR): cint <cimport,nodecl> end
global function SSL_get0_connection(s: *SSL): *SSL <cimport,nodecl> end
global function SSL_is_connection(s: *SSL): cint <cimport,nodecl> end
global function SSL_is_listener(ssl: *SSL): cint <cimport,nodecl> end
global function SSL_get0_listener(s: *SSL): *SSL <cimport,nodecl> end
global function SSL_new_listener(ctx: *SSL_CTX, flags: uint64): *SSL <cimport,nodecl> end
global function SSL_new_listener_from(ssl: *SSL, flags: uint64): *SSL <cimport,nodecl> end
global function SSL_new_from_listener(ssl: *SSL, flags: uint64): *SSL <cimport,nodecl> end
global function SSL_accept_connection(ssl: *SSL, flags: uint64): *SSL <cimport,nodecl> end
global function SSL_get_accept_connection_queue_len(ssl: *SSL): csize <cimport,nodecl> end
global function SSL_listen(ssl: *SSL): cint <cimport,nodecl> end
global function SSL_is_domain(s: *SSL): cint <cimport,nodecl> end
global function SSL_get0_domain(s: *SSL): *SSL <cimport,nodecl> end
global function SSL_new_domain(ctx: *SSL_CTX, flags: uint64): *SSL <cimport,nodecl> end
global function SSL_CTX_set_domain_flags(ctx: *SSL_CTX, domain_flags: uint64): cint <cimport,nodecl> end
global function SSL_CTX_get_domain_flags(ctx: *SSL_CTX, domain_flags: *uint64): cint <cimport,nodecl> end
global function SSL_get_domain_flags(ssl: *SSL, domain_flags: *uint64): cint <cimport,nodecl> end
global function SSL_get_stream_type(s: *SSL): cint <cimport,nodecl> end
global function SSL_get_stream_id(s: *SSL): uint64 <cimport,nodecl> end
global function SSL_is_stream_local(s: *SSL): cint <cimport,nodecl> end
global function SSL_set_default_stream_mode(s: *SSL, mode: uint32): cint <cimport,nodecl> end
global function SSL_new_stream(s: *SSL, flags: uint64): *SSL <cimport,nodecl> end
global function SSL_set_incoming_stream_policy(s: *SSL, policy: cint, aec: uint64): cint <cimport,nodecl> end
global function SSL_accept_stream(s: *SSL, flags: uint64): *SSL <cimport,nodecl> end
global function SSL_get_accept_stream_queue_len(s: *SSL): csize <cimport,nodecl> end
global function SSL_inject_net_dgram(s: *SSL, buf: *cuchar, buf_len: csize, peer: *BIO_ADDR, local_: *BIO_ADDR): cint <cimport,nodecl> end
global function SSL_shutdown_ex(ssl: *SSL, flags: uint64, args: *SSL_SHUTDOWN_EX_ARGS, args_len: csize): cint <cimport,nodecl> end
global function SSL_stream_conclude(ssl: *SSL, flags: uint64): cint <cimport,nodecl> end
global function SSL_stream_reset(ssl: *SSL, args: *SSL_STREAM_RESET_ARGS, args_len: csize): cint <cimport,nodecl> end
global function SSL_get_stream_read_state(ssl: *SSL): cint <cimport,nodecl> end
global function SSL_get_stream_write_state(ssl: *SSL): cint <cimport,nodecl> end
global function SSL_get_stream_read_error_code(ssl: *SSL, app_error_code: *uint64): cint <cimport,nodecl> end
global function SSL_get_stream_write_error_code(ssl: *SSL, app_error_code: *uint64): cint <cimport,nodecl> end
global function SSL_get_conn_close_info(ssl: *SSL, info: *SSL_CONN_CLOSE_INFO, info_len: csize): cint <cimport,nodecl> end
global function SSL_get_value_uint(s: *SSL, class_: uint32, id: uint32, v: *uint64): cint <cimport,nodecl> end
global function SSL_set_value_uint(s: *SSL, class_: uint32, id: uint32, v: uint64): cint <cimport,nodecl> end
global function SSL_poll(items: *SSL_POLL_ITEM, num_items: csize, stride: csize, timeout: *timeval, flags: uint64, result_count: *csize): cint <cimport,nodecl> end
global function SSL_as_poll_descriptor(s: *SSL): BIO_POLL_DESCRIPTOR <cimport,nodecl> end
global function SSL_session_reused(s: *SSL): cint <cimport,nodecl> end
global function SSL_is_server(s: *SSL): cint <cimport,nodecl> end
global function SSL_CONF_CTX_new(): *SSL_CONF_CTX <cimport,nodecl> end
global function SSL_CONF_CTX_finish(cctx: *SSL_CONF_CTX): cint <cimport,nodecl> end
global function SSL_CONF_CTX_free(cctx: *SSL_CONF_CTX): void <cimport,nodecl> end
global function SSL_CONF_CTX_set_flags(cctx: *SSL_CONF_CTX, flags: cuint): cuint <cimport,nodecl> end
global function SSL_CONF_CTX_clear_flags(cctx: *SSL_CONF_CTX, flags: cuint): cuint <cimport,nodecl> end
global function SSL_CONF_CTX_set1_prefix(cctx: *SSL_CONF_CTX, pre: cstring): cint <cimport,nodecl> end
global function SSL_CONF_CTX_set_ssl(cctx: *SSL_CONF_CTX, ssl: *SSL): void <cimport,nodecl> end
global function SSL_CONF_CTX_set_ssl_ctx(cctx: *SSL_CONF_CTX, ctx: *SSL_CTX): void <cimport,nodecl> end
global function SSL_CONF_cmd(cctx: *SSL_CONF_CTX, cmd: cstring, value: cstring): cint <cimport,nodecl> end
global function SSL_CONF_cmd_argv(cctx: *SSL_CONF_CTX, pargc: *cint, pargv: **cstring): cint <cimport,nodecl> end
global function SSL_CONF_cmd_value_type(cctx: *SSL_CONF_CTX, cmd: cstring): cint <cimport,nodecl> end
global function SSL_add_ssl_module(): void <cimport,nodecl> end
global function SSL_config(s: *SSL, name: cstring): cint <cimport,nodecl> end
global function SSL_CTX_config(ctx: *SSL_CTX, name: cstring): cint <cimport,nodecl> end
global function SSL_trace(write_p: cint, version: cint, content_type: cint, buf: pointer, len: csize, ssl: *SSL, arg: pointer): void <cimport,nodecl> end
global function SSL_set_ct_validation_callback(s: *SSL, callback: ssl_ct_validation_cb, arg: pointer): cint <cimport,nodecl> end
global function SSL_CTX_set_ct_validation_callback(ctx: *SSL_CTX, callback: ssl_ct_validation_cb, arg: pointer): cint <cimport,nodecl> end
global function SSL_enable_ct(s: *SSL, validation_mode: cint): cint <cimport,nodecl> end
global function SSL_CTX_enable_ct(ctx: *SSL_CTX, validation_mode: cint): cint <cimport,nodecl> end
global function SSL_ct_is_enabled(s: *SSL): cint <cimport,nodecl> end
global function SSL_CTX_ct_is_enabled(ctx: *SSL_CTX): cint <cimport,nodecl> end
global function SSL_get0_peer_scts(s: *SSL): *stack_st_SCT <cimport,nodecl> end
global function SSL_CTX_set_default_ctlog_list_file(ctx: *SSL_CTX): cint <cimport,nodecl> end
global function SSL_CTX_set_ctlog_list_file(ctx: *SSL_CTX, path: cstring): cint <cimport,nodecl> end
global function SSL_CTX_set0_ctlog_store(ctx: *SSL_CTX, logs: *CTLOG_STORE): void <cimport,nodecl> end
global function SSL_CTX_get0_ctlog_store(ctx: *SSL_CTX): *CTLOG_STORE <cimport,nodecl> end
global function SSL_set_security_level(s: *SSL, level: cint): void <cimport,nodecl> end
global function SSL_get_security_level(s: *SSL): cint <cimport,nodecl> end
global function SSL_set_security_callback(s: *SSL, cb: function(s: *SSL, ctx: *SSL_CTX, op: cint, bits: cint, nid: cint, other: pointer, ex: pointer): cint): void <cimport,nodecl> end
global function SSL_get_security_callback(s: *SSL): function(s: *SSL, ctx: *SSL_CTX, op: cint, bits: cint, nid: cint, other: pointer, ex: pointer): cint <cimport,nodecl> end
global function SSL_set0_security_ex_data(s: *SSL, ex: pointer): void <cimport,nodecl> end
global function SSL_get0_security_ex_data(s: *SSL): pointer <cimport,nodecl> end
global function SSL_CTX_set_security_level(ctx: *SSL_CTX, level: cint): void <cimport,nodecl> end
global function SSL_CTX_get_security_level(ctx: *SSL_CTX): cint <cimport,nodecl> end
global function SSL_CTX_set_security_callback(ctx: *SSL_CTX, cb: function(s: *SSL, ctx: *SSL_CTX, op: cint, bits: cint, nid: cint, other: pointer, ex: pointer): cint): void <cimport,nodecl> end
global function SSL_CTX_get_security_callback(ctx: *SSL_CTX): function(s: *SSL, ctx: *SSL_CTX, op: cint, bits: cint, nid: cint, other: pointer, ex: pointer): cint <cimport,nodecl> end
global function SSL_CTX_set0_security_ex_data(ctx: *SSL_CTX, ex: pointer): void <cimport,nodecl> end
global function SSL_CTX_get0_security_ex_data(ctx: *SSL_CTX): pointer <cimport,nodecl> end
global function OPENSSL_init_ssl(opts: uint64, settings: *OPENSSL_INIT_SETTINGS): cint <cimport,nodecl> end
global function SSL_free_buffers(ssl: *SSL): cint <cimport,nodecl> end
global function SSL_alloc_buffers(ssl: *SSL): cint <cimport,nodecl> end
global function SSL_CTX_set_session_ticket_cb(ctx: *SSL_CTX, gen_cb: SSL_CTX_generate_session_ticket_fn, dec_cb: SSL_CTX_decrypt_session_ticket_fn, arg: pointer): cint <cimport,nodecl> end
global function SSL_SESSION_set1_ticket_appdata(ss: *SSL_SESSION, data: pointer, len: csize): cint <cimport,nodecl> end
global function SSL_SESSION_get0_ticket_appdata(ss: *SSL_SESSION, data: *pointer, len: *csize): cint <cimport,nodecl> end
global function SSL_CTX_set_allow_early_data_cb(ctx: *SSL_CTX, cb: SSL_allow_early_data_cb_fn, arg: pointer): void <cimport,nodecl> end
global function SSL_set_allow_early_data_cb(s: *SSL, cb: SSL_allow_early_data_cb_fn, arg: pointer): void <cimport,nodecl> end
global function SSL_CTX_compress_certs(ctx: *SSL_CTX, alg: cint): cint <cimport,nodecl> end
global function SSL_compress_certs(ssl: *SSL, alg: cint): cint <cimport,nodecl> end
global function SSL_CTX_set1_cert_comp_preference(ctx: *SSL_CTX, algs: *cint, len: csize): cint <cimport,nodecl> end
global function SSL_set1_cert_comp_preference(ssl: *SSL, algs: *cint, len: csize): cint <cimport,nodecl> end
global function SSL_CTX_set1_compressed_cert(ctx: *SSL_CTX, algorithm: cint, comp_data: *cuchar, comp_length: csize, orig_length: csize): cint <cimport,nodecl> end
global function SSL_set1_compressed_cert(ssl: *SSL, algorithm: cint, comp_data: *cuchar, comp_length: csize, orig_length: csize): cint <cimport,nodecl> end
global function SSL_CTX_get1_compressed_cert(ctx: *SSL_CTX, alg: cint, data: **cuchar, orig_len: *csize): csize <cimport,nodecl> end
global function SSL_get1_compressed_cert(ssl: *SSL, alg: cint, data: **cuchar, orig_len: *csize): csize <cimport,nodecl> end
global function SSL_add_expected_rpk(s: *SSL, rpk: *EVP_PKEY): cint <cimport,nodecl> end
global function SSL_get0_peer_rpk(s: *SSL): *EVP_PKEY <cimport,nodecl> end
global function SSL_SESSION_get0_peer_rpk(s: *SSL_SESSION): *EVP_PKEY <cimport,nodecl> end
global function SSL_get_negotiated_client_cert_type(s: *SSL): cint <cimport,nodecl> end
global function SSL_get_negotiated_server_cert_type(s: *SSL): cint <cimport,nodecl> end
global function SSL_set1_client_cert_type(s: *SSL, val: *cuchar, len: csize): cint <cimport,nodecl> end
global function SSL_set1_server_cert_type(s: *SSL, val: *cuchar, len: csize): cint <cimport,nodecl> end
global function SSL_CTX_set1_client_cert_type(ctx: *SSL_CTX, val: *cuchar, len: csize): cint <cimport,nodecl> end
global function SSL_CTX_set1_server_cert_type(ctx: *SSL_CTX, val: *cuchar, len: csize): cint <cimport,nodecl> end
global function SSL_get0_client_cert_type(s: *SSL, t: **cuchar, len: *csize): cint <cimport,nodecl> end
global function SSL_get0_server_cert_type(s: *SSL, t: **cuchar, len: *csize): cint <cimport,nodecl> end
global function SSL_CTX_get0_client_cert_type(ctx: *SSL_CTX, t: **cuchar, len: *csize): cint <cimport,nodecl> end
global function SSL_CTX_get0_server_cert_type(s: *SSL_CTX, t: **cuchar, len: *csize): cint <cimport,nodecl> end
global function SSL_set_quic_tls_cbs(s: *SSL, qtdis: *OSSL_DISPATCH, arg: pointer): cint <cimport,nodecl> end
global function SSL_set_quic_tls_transport_params(s: *SSL, params: *cuchar, params_len: csize): cint <cimport,nodecl> end
global function SSL_set_quic_tls_early_data_enabled(s: *SSL, enabled: cint): cint <cimport,nodecl> end
global function ERR_GET_LIB(errcode: culong): cint <cimport,nodecl> end
global function ERR_GET_RFLAGS(errcode: culong): cint <cimport,nodecl> end
global function ERR_GET_REASON(errcode: culong): cint <cimport,nodecl> end
global function ERR_FATAL_ERROR(errcode: culong): cint <cimport,nodecl> end
global function ERR_COMMON_ERROR(errcode: culong): cint <cimport,nodecl> end
global function lh_ERR_STRING_DATA_hash_thunk(data: pointer, hfn: OPENSSL_LH_HASHFUNC): culong <cimport,nodecl> end
global function lh_ERR_STRING_DATA_comp_thunk(da: pointer, db: pointer, cfn: OPENSSL_LH_COMPFUNC): cint <cimport,nodecl> end
global function lh_ERR_STRING_DATA_doall_thunk(node: pointer, doall: OPENSSL_LH_DOALL_FUNC): void <cimport,nodecl> end
global function lh_ERR_STRING_DATA_doall_arg_thunk(node: pointer, arg: pointer, doall: OPENSSL_LH_DOALL_FUNCARG): void <cimport,nodecl> end
global function ossl_check_ERR_STRING_DATA_lh_plain_type(ptr: *ERR_STRING_DATA): *ERR_STRING_DATA <cimport,nodecl> end
global function ossl_check_const_ERR_STRING_DATA_lh_plain_type(ptr: *ERR_STRING_DATA): *ERR_STRING_DATA <cimport,nodecl> end
global function ossl_check_const_ERR_STRING_DATA_lh_type(lh: *lhash_st_ERR_STRING_DATA): *OPENSSL_LHASH <cimport,nodecl> end
global function ossl_check_ERR_STRING_DATA_lh_type(lh: *lhash_st_ERR_STRING_DATA): *OPENSSL_LHASH <cimport,nodecl> end
global function ossl_check_ERR_STRING_DATA_lh_compfunc_type(cmp: lh_ERR_STRING_DATA_compfunc): OPENSSL_LH_COMPFUNC <cimport,nodecl> end
global function ossl_check_ERR_STRING_DATA_lh_hashfunc_type(hfn: lh_ERR_STRING_DATA_hashfunc): OPENSSL_LH_HASHFUNC <cimport,nodecl> end
global function ossl_check_ERR_STRING_DATA_lh_doallfunc_type(dfn: lh_ERR_STRING_DATA_doallfunc): OPENSSL_LH_DOALL_FUNC <cimport,nodecl> end
global function ERR_new(): void <cimport,nodecl> end
global function ERR_set_debug(file: cstring, line: cint, func: cstring): void <cimport,nodecl> end
global function ERR_set_error(lib: cint, reason: cint, fmt: cstring, ...: cvarargs): void <cimport,nodecl> end
global function ERR_vset_error(lib: cint, reason: cint, fmt: cstring, args: cvalist): void <cimport,nodecl> end
global function ERR_set_error_data(data: cstring, flags: cint): void <cimport,nodecl> end
global function ERR_get_error(): culong <cimport,nodecl> end
global function ERR_get_error_all(file: *cstring, line: *cint, func: *cstring, data: *cstring, flags: *cint): culong <cimport,nodecl> end
global function ERR_get_error_line(file: *cstring, line: *cint): culong <cimport,nodecl> end
global function ERR_get_error_line_data(file: *cstring, line: *cint, data: *cstring, flags: *cint): culong <cimport,nodecl> end
global function ERR_peek_error(): culong <cimport,nodecl> end
global function ERR_peek_error_line(file: *cstring, line: *cint): culong <cimport,nodecl> end
global function ERR_peek_error_func(func: *cstring): culong <cimport,nodecl> end
global function ERR_peek_error_data(data: *cstring, flags: *cint): culong <cimport,nodecl> end
global function ERR_peek_error_all(file: *cstring, line: *cint, func: *cstring, data: *cstring, flags: *cint): culong <cimport,nodecl> end
global function ERR_peek_error_line_data(file: *cstring, line: *cint, data: *cstring, flags: *cint): culong <cimport,nodecl> end
global function ERR_peek_last_error(): culong <cimport,nodecl> end
global function ERR_peek_last_error_line(file: *cstring, line: *cint): culong <cimport,nodecl> end
global function ERR_peek_last_error_func(func: *cstring): culong <cimport,nodecl> end
global function ERR_peek_last_error_data(data: *cstring, flags: *cint): culong <cimport,nodecl> end
global function ERR_peek_last_error_all(file: *cstring, line: *cint, func: *cstring, data: *cstring, flags: *cint): culong <cimport,nodecl> end
global function ERR_peek_last_error_line_data(file: *cstring, line: *cint, data: *cstring, flags: *cint): culong <cimport,nodecl> end
global function ERR_clear_error(): void <cimport,nodecl> end
global function ERR_error_string(e: culong, buf: cstring): cstring <cimport,nodecl> end
global function ERR_error_string_n(e: culong, buf: cstring, len: csize): void <cimport,nodecl> end
global function ERR_lib_error_string(e: culong): cstring <cimport,nodecl> end
global function ERR_func_error_string(e: culong): cstring <cimport,nodecl> end
global function ERR_reason_error_string(e: culong): cstring <cimport,nodecl> end
global function ERR_print_errors_cb(cb: function(str: cstring, len: csize, u: pointer): cint, u: pointer): void <cimport,nodecl> end
global function ERR_print_errors_fp(fp: *FILE): void <cimport,nodecl> end
global function ERR_print_errors(bp: *BIO): void <cimport,nodecl> end
global function ERR_add_error_data(num: cint, ...: cvarargs): void <cimport,nodecl> end
global function ERR_add_error_vdata(num: cint, args: cvalist): void <cimport,nodecl> end
global function ERR_add_error_txt(sepr: cstring, txt: cstring): void <cimport,nodecl> end
global function ERR_add_error_mem_bio(sep: cstring, bio: *BIO): void <cimport,nodecl> end
global function ERR_load_strings(lib: cint, str: *ERR_STRING_DATA): cint <cimport,nodecl> end
global function ERR_load_strings_const(str: *ERR_STRING_DATA): cint <cimport,nodecl> end
global function ERR_unload_strings(lib: cint, str: *ERR_STRING_DATA): cint <cimport,nodecl> end
global function ERR_remove_thread_state(a1: pointer): void <cimport,nodecl> end
global function ERR_remove_state(pid: culong): void <cimport,nodecl> end
global function ERR_get_state(): *ERR_STATE <cimport,nodecl> end
global function ERR_get_next_error_library(): cint <cimport,nodecl> end
global function ERR_set_mark(): cint <cimport,nodecl> end
global function ERR_pop_to_mark(): cint <cimport,nodecl> end
global function ERR_clear_last_mark(): cint <cimport,nodecl> end
global function ERR_count_to_mark(): cint <cimport,nodecl> end
global function ERR_pop(): cint <cimport,nodecl> end
global function OSSL_ERR_STATE_new(): *ERR_STATE <cimport,nodecl> end
global function OSSL_ERR_STATE_save(es: *ERR_STATE): void <cimport,nodecl> end
global function OSSL_ERR_STATE_save_to_mark(es: *ERR_STATE): void <cimport,nodecl> end
global function OSSL_ERR_STATE_restore(es: *ERR_STATE): void <cimport,nodecl> end
global function OSSL_ERR_STATE_free(es: *ERR_STATE): void <cimport,nodecl> end
global OPENSSL_CONFIGURED_API: cint <comptime> = 30500
global OPENSSL_VERSION_MAJOR: cint <comptime> = 3
global OPENSSL_VERSION_MINOR: cint <comptime> = 5
global OPENSSL_VERSION_PATCH: cint <comptime> = 0
global OPENSSL_VERSION_PRE_RELEASE: cstring <comptime> = ""
global OPENSSL_VERSION_BUILD_METADATA: cstring <comptime> = ""
global OPENSSL_SHLIB_VERSION: cint <comptime> = 3
global OPENSSL_VERSION_STR: cstring <comptime> = "3.5.0"
global OPENSSL_FULL_VERSION_STR: cstring <comptime> = "3.5.0"
global OPENSSL_RELEASE_DATE: cstring <comptime> = "8 Apr 2025"
global OPENSSL_VERSION_TEXT: cstring <comptime> = "OpenSSL 3.5.0 8 Apr 2025"
global KDF_R_VALUE_ERROR: cint <comptime> = 0
global UI_F_UI_DUP_ERROR_STRING: cint <comptime> = 0
global CRYPTO_R_PROVIDER_SECTION_ERROR: cint <comptime> = 105
global CRYPTO_R_RANDOM_SECTION_ERROR: cint <comptime> = 119
global function SSLeay(): culong <cimport,nodecl> end
global function SSLeay_version(type: cint): cstring <cimport,nodecl> end
global OPENSSL_VERSION: cint <comptime> = 0
global OPENSSL_CFLAGS: cint <comptime> = 1
global OPENSSL_BUILT_ON: cint <comptime> = 2
global OPENSSL_PLATFORM: cint <comptime> = 3
global OPENSSL_DIR: cint <comptime> = 4
global OPENSSL_ENGINES_DIR: cint <comptime> = 5
global OPENSSL_VERSION_STRING: cint <comptime> = 6
global OPENSSL_FULL_VERSION_STRING: cint <comptime> = 7
global OPENSSL_MODULES_DIR: cint <comptime> = 8
global OPENSSL_CPU_INFO: cint <comptime> = 9
global OPENSSL_WINCTX: cint <comptime> = 10
global OPENSSL_INFO_CONFIG_DIR: cint <comptime> = 1001
global OPENSSL_INFO_ENGINES_DIR: cint <comptime> = 1002
global OPENSSL_INFO_MODULES_DIR: cint <comptime> = 1003
global OPENSSL_INFO_DSO_EXTENSION: cint <comptime> = 1004
global OPENSSL_INFO_DIR_FILENAME_SEPARATOR: cint <comptime> = 1005
global OPENSSL_INFO_LIST_SEPARATOR: cint <comptime> = 1006
global OPENSSL_INFO_SEED_SOURCE: cint <comptime> = 1007
global OPENSSL_INFO_CPU_SETTINGS: cint <comptime> = 1008
global OPENSSL_INFO_WINDOWS_CONTEXT: cint <comptime> = 1009
global OPENSSL_INIT_NO_LOAD_CRYPTO_STRINGS: clong <comptime> = 1
global OPENSSL_INIT_LOAD_CRYPTO_STRINGS: clong <comptime> = 2
global OPENSSL_INIT_ADD_ALL_CIPHERS: clong <comptime> = 4
global OPENSSL_INIT_ADD_ALL_DIGESTS: clong <comptime> = 8
global OPENSSL_INIT_NO_ADD_ALL_CIPHERS: clong <comptime> = 16
global OPENSSL_INIT_NO_ADD_ALL_DIGESTS: clong <comptime> = 32
global OPENSSL_INIT_LOAD_CONFIG: clong <comptime> = 64
global OPENSSL_INIT_NO_LOAD_CONFIG: clong <comptime> = 128
global OPENSSL_INIT_ASYNC: clong <comptime> = 256
global OPENSSL_INIT_ENGINE_RDRAND: clong <comptime> = 512
global OPENSSL_INIT_ENGINE_DYNAMIC: clong <comptime> = 1024
global OPENSSL_INIT_ENGINE_OPENSSL: clong <comptime> = 2048
global OPENSSL_INIT_ENGINE_CRYPTODEV: clong <comptime> = 4096
global OPENSSL_INIT_ENGINE_CAPI: clong <comptime> = 8192
global OPENSSL_INIT_ENGINE_PADLOCK: clong <comptime> = 16384
global OPENSSL_INIT_ENGINE_AFALG: clong <comptime> = 32768
global OPENSSL_INIT_ATFORK: clong <comptime> = 131072
global OPENSSL_INIT_NO_ATEXIT: clong <comptime> = 524288
global OPENSSL_INIT_ENGINE_ALL_BUILTIN: clong <comptime> = 30208
global COMP_R_BROTLI_DECODE_ERROR: cint <comptime> = 102
global COMP_R_BROTLI_ENCODE_ERROR: cint <comptime> = 103
global COMP_R_ZLIB_DEFLATE_ERROR: cint <comptime> = 99
global COMP_R_ZLIB_INFLATE_ERROR: cint <comptime> = 100
global COMP_R_ZSTD_COMPRESS_ERROR: cint <comptime> = 105
global COMP_R_ZSTD_DECODE_ERROR: cint <comptime> = 106
global COMP_R_ZSTD_DECOMPRESS_ERROR: cint <comptime> = 107
global BIO_R_ACCEPT_ERROR: cint <comptime> = 100
global BIO_R_CONNECT_ERROR: cint <comptime> = 103
global BIO_R_GETSOCKNAME_ERROR: cint <comptime> = 132
global BIO_R_NBIO_CONNECT_ERROR: cint <comptime> = 110
global BIO_R_TRANSFER_ERROR: cint <comptime> = 104
global BN_R_ENCODING_ERROR: cint <comptime> = 104
global OSSL_FUNC_CORE_NEW_ERROR: cint <comptime> = 5
global OSSL_FUNC_CORE_SET_ERROR_DEBUG: cint <comptime> = 6
global OSSL_FUNC_CORE_VSET_ERROR: cint <comptime> = 7
global OSSL_FUNC_CORE_SET_ERROR_MARK: cint <comptime> = 8
global OSSL_FUNC_CORE_CLEAR_LAST_ERROR_MARK: cint <comptime> = 9
global OSSL_FUNC_CORE_POP_ERROR_TO_MARK: cint <comptime> = 10
global EVP_R_CIPHER_PARAMETER_ERROR: cint <comptime> = 122
global EVP_R_COPY_ERROR: cint <comptime> = 173
global EVP_R_DECODE_ERROR: cint <comptime> = 114
global EVP_R_DEFAULT_QUERY_PARSE_ERROR: cint <comptime> = 210
global EVP_R_ERROR_LOADING_SECTION: cint <comptime> = 165
global EVP_R_FINAL_ERROR: cint <comptime> = 188
global EVP_R_GENERATE_ERROR: cint <comptime> = 214
global EVP_R_INITIALIZATION_ERROR: cint <comptime> = 134
global EVP_R_PBKDF2_ERROR: cint <comptime> = 181
global EVP_R_PRIVATE_KEY_DECODE_ERROR: cint <comptime> = 145
global EVP_R_PRIVATE_KEY_ENCODE_ERROR: cint <comptime> = 146
global EVP_R_UPDATE_ERROR: cint <comptime> = 189
global SN_wap_wsg_idm_ecid_wtls1: cstring <comptime> = "wap-wsg-idm-ecid-wtls1"
global NID_wap_wsg_idm_ecid_wtls1: cint <comptime> = 735
global SN_wap_wsg_idm_ecid_wtls3: cstring <comptime> = "wap-wsg-idm-ecid-wtls3"
global NID_wap_wsg_idm_ecid_wtls3: cint <comptime> = 736
global SN_wap_wsg_idm_ecid_wtls4: cstring <comptime> = "wap-wsg-idm-ecid-wtls4"
global NID_wap_wsg_idm_ecid_wtls4: cint <comptime> = 737
global SN_wap_wsg_idm_ecid_wtls5: cstring <comptime> = "wap-wsg-idm-ecid-wtls5"
global NID_wap_wsg_idm_ecid_wtls5: cint <comptime> = 738
global SN_wap_wsg_idm_ecid_wtls6: cstring <comptime> = "wap-wsg-idm-ecid-wtls6"
global NID_wap_wsg_idm_ecid_wtls6: cint <comptime> = 739
global SN_wap_wsg_idm_ecid_wtls7: cstring <comptime> = "wap-wsg-idm-ecid-wtls7"
global NID_wap_wsg_idm_ecid_wtls7: cint <comptime> = 740
global SN_wap_wsg_idm_ecid_wtls8: cstring <comptime> = "wap-wsg-idm-ecid-wtls8"
global NID_wap_wsg_idm_ecid_wtls8: cint <comptime> = 741
global SN_wap_wsg_idm_ecid_wtls9: cstring <comptime> = "wap-wsg-idm-ecid-wtls9"
global NID_wap_wsg_idm_ecid_wtls9: cint <comptime> = 742
global SN_wap_wsg_idm_ecid_wtls10: cstring <comptime> = "wap-wsg-idm-ecid-wtls10"
global NID_wap_wsg_idm_ecid_wtls10: cint <comptime> = 743
global SN_wap_wsg_idm_ecid_wtls11: cstring <comptime> = "wap-wsg-idm-ecid-wtls11"
global NID_wap_wsg_idm_ecid_wtls11: cint <comptime> = 744
global SN_wap_wsg_idm_ecid_wtls12: cstring <comptime> = "wap-wsg-idm-ecid-wtls12"
global NID_wap_wsg_idm_ecid_wtls12: cint <comptime> = 745
global SN_tlsfeature: cstring <comptime> = "tlsfeature"
global LN_tlsfeature: cstring <comptime> = "TLS Feature"
global NID_tlsfeature: cint <comptime> = 1020
global SN_brainpoolP256r1tls13: cstring <comptime> = "brainpoolP256r1tls13"
global NID_brainpoolP256r1tls13: cint <comptime> = 1285
global SN_brainpoolP384r1tls13: cstring <comptime> = "brainpoolP384r1tls13"
global NID_brainpoolP384r1tls13: cint <comptime> = 1286
global SN_brainpoolP512r1tls13: cstring <comptime> = "brainpoolP512r1tls13"
global NID_brainpoolP512r1tls13: cint <comptime> = 1287
global SN_tls1_prf: cstring <comptime> = "TLS1-PRF"
global LN_tls1_prf: cstring <comptime> = "tls1-prf"
global NID_tls1_prf: cint <comptime> = 1021
global ASN1_R_ASN1_PARSE_ERROR: cint <comptime> = 203
global ASN1_R_ASN1_SIG_PARSE_ERROR: cint <comptime> = 204
global ASN1_R_AUX_ERROR: cint <comptime> = 100
global ASN1_R_DECODE_ERROR: cint <comptime> = 110
global ASN1_R_ENCODE_ERROR: cint <comptime> = 112
global ASN1_R_ERROR_GETTING_TIME: cint <comptime> = 173
global ASN1_R_ERROR_LOADING_SECTION: cint <comptime> = 172
global ASN1_R_ERROR_SETTING_CIPHER_PARAMS: cint <comptime> = 114
global ASN1_R_LIST_ERROR: cint <comptime> = 188
global ASN1_R_MIME_PARSE_ERROR: cint <comptime> = 207
global ASN1_R_MIME_SIG_PARSE_ERROR: cint <comptime> = 208
global EVP_RAND_STATE_ERROR: cint <comptime> = 2
global OPENSSL_EC_EXPLICIT_CURVE: cint <comptime> = 0
global OPENSSL_EC_NAMED_CURVE: cint <comptime> = 1
global EC_R_ASN1_ERROR: cint <comptime> = 115
global EC_R_DECODE_ERROR: cint <comptime> = 142
global EC_R_KDF_PARAMETER_ERROR: cint <comptime> = 148
global EC_R_PEER_KEY_ERROR: cint <comptime> = 149
global EC_R_SHARED_INFO_ERROR: cint <comptime> = 150
global OPENSSL_ECC_MAX_FIELD_BITS: cint <comptime> = 661
global RSA_R_OAEP_DECODING_ERROR: cint <comptime> = 121
global RSA_R_PKCS_DECODING_ERROR: cint <comptime> = 159
global OPENSSL_RSA_MAX_MODULUS_BITS: cint <comptime> = 16384
global OPENSSL_RSA_FIPS_MIN_MODULUS_BITS: cint <comptime> = 2048
global OPENSSL_RSA_SMALL_MODULUS_BITS: cint <comptime> = 3072
global OPENSSL_RSA_MAX_PUBEXP_BITS: cint <comptime> = 64
global DH_R_BN_DECODE_ERROR: cint <comptime> = 109
global DH_R_BN_ERROR: cint <comptime> = 106
global DH_R_DECODE_ERROR: cint <comptime> = 104
global DH_R_KDF_PARAMETER_ERROR: cint <comptime> = 112
global DH_R_PARAMETER_ENCODING_ERROR: cint <comptime> = 105
global DH_R_PEER_KEY_ERROR: cint <comptime> = 111
global DH_R_SHARED_INFO_ERROR: cint <comptime> = 113
global OPENSSL_DH_MAX_MODULUS_BITS: cint <comptime> = 10000
global OPENSSL_DH_CHECK_MAX_MODULUS_BITS: cint <comptime> = 32768
global OPENSSL_DH_FIPS_MIN_MODULUS_BITS: cint <comptime> = 1024
global DSA_R_BN_DECODE_ERROR: cint <comptime> = 108
global DSA_R_BN_ERROR: cint <comptime> = 109
global DSA_R_DECODE_ERROR: cint <comptime> = 104
global DSA_R_PARAMETER_ENCODING_ERROR: cint <comptime> = 105
global OPENSSL_DSA_MAX_MODULUS_BITS: cint <comptime> = 10000
global OPENSSL_DSA_FIPS_MIN_MODULUS_BITS: cint <comptime> = 1024
global X509_R_BASE64_DECODE_ERROR: cint <comptime> = 118
global X509_R_ERROR_GETTING_MD_BY_NID: cint <comptime> = 141
global X509_R_ERROR_USING_SIGINF_SET: cint <comptime> = 142
global X509_R_PUBLIC_KEY_DECODE_ERROR: cint <comptime> = 125
global X509_R_PUBLIC_KEY_ENCODE_ERROR: cint <comptime> = 126
global X509_V_ERR_UNSPECIFIED: cint <comptime> = 1
global X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT: cint <comptime> = 2
global X509_V_ERR_UNABLE_TO_GET_CRL: cint <comptime> = 3
global X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE: cint <comptime> = 4
global X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE: cint <comptime> = 5
global X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY: cint <comptime> = 6
global X509_V_ERR_CERT_SIGNATURE_FAILURE: cint <comptime> = 7
global X509_V_ERR_CRL_SIGNATURE_FAILURE: cint <comptime> = 8
global X509_V_ERR_CERT_NOT_YET_VALID: cint <comptime> = 9
global X509_V_ERR_CERT_HAS_EXPIRED: cint <comptime> = 10
global X509_V_ERR_CRL_NOT_YET_VALID: cint <comptime> = 11
global X509_V_ERR_CRL_HAS_EXPIRED: cint <comptime> = 12
global X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD: cint <comptime> = 13
global X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD: cint <comptime> = 14
global X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD: cint <comptime> = 15
global X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD: cint <comptime> = 16
global X509_V_ERR_OUT_OF_MEM: cint <comptime> = 17
global X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT: cint <comptime> = 18
global X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN: cint <comptime> = 19
global X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY: cint <comptime> = 20
global X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE: cint <comptime> = 21
global X509_V_ERR_CERT_CHAIN_TOO_LONG: cint <comptime> = 22
global X509_V_ERR_CERT_REVOKED: cint <comptime> = 23
global X509_V_ERR_NO_ISSUER_PUBLIC_KEY: cint <comptime> = 24
global X509_V_ERR_PATH_LENGTH_EXCEEDED: cint <comptime> = 25
global X509_V_ERR_INVALID_PURPOSE: cint <comptime> = 26
global X509_V_ERR_CERT_UNTRUSTED: cint <comptime> = 27
global X509_V_ERR_CERT_REJECTED: cint <comptime> = 28
global X509_V_ERR_SUBJECT_ISSUER_MISMATCH: cint <comptime> = 29
global X509_V_ERR_AKID_SKID_MISMATCH: cint <comptime> = 30
global X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH: cint <comptime> = 31
global X509_V_ERR_KEYUSAGE_NO_CERTSIGN: cint <comptime> = 32
global X509_V_ERR_UNABLE_TO_GET_CRL_ISSUER: cint <comptime> = 33
global X509_V_ERR_UNHANDLED_CRITICAL_EXTENSION: cint <comptime> = 34
global X509_V_ERR_KEYUSAGE_NO_CRL_SIGN: cint <comptime> = 35
global X509_V_ERR_UNHANDLED_CRITICAL_CRL_EXTENSION: cint <comptime> = 36
global X509_V_ERR_INVALID_NON_CA: cint <comptime> = 37
global X509_V_ERR_PROXY_PATH_LENGTH_EXCEEDED: cint <comptime> = 38
global X509_V_ERR_KEYUSAGE_NO_DIGITAL_SIGNATURE: cint <comptime> = 39
global X509_V_ERR_PROXY_CERTIFICATES_NOT_ALLOWED: cint <comptime> = 40
global X509_V_ERR_INVALID_EXTENSION: cint <comptime> = 41
global X509_V_ERR_INVALID_POLICY_EXTENSION: cint <comptime> = 42
global X509_V_ERR_NO_EXPLICIT_POLICY: cint <comptime> = 43
global X509_V_ERR_DIFFERENT_CRL_SCOPE: cint <comptime> = 44
global X509_V_ERR_UNSUPPORTED_EXTENSION_FEATURE: cint <comptime> = 45
global X509_V_ERR_UNNESTED_RESOURCE: cint <comptime> = 46
global X509_V_ERR_PERMITTED_VIOLATION: cint <comptime> = 47
global X509_V_ERR_EXCLUDED_VIOLATION: cint <comptime> = 48
global X509_V_ERR_SUBTREE_MINMAX: cint <comptime> = 49
global X509_V_ERR_APPLICATION_VERIFICATION: cint <comptime> = 50
global X509_V_ERR_UNSUPPORTED_CONSTRAINT_TYPE: cint <comptime> = 51
global X509_V_ERR_UNSUPPORTED_CONSTRAINT_SYNTAX: cint <comptime> = 52
global X509_V_ERR_UNSUPPORTED_NAME_SYNTAX: cint <comptime> = 53
global X509_V_ERR_CRL_PATH_VALIDATION_ERROR: cint <comptime> = 54
global X509_V_ERR_PATH_LOOP: cint <comptime> = 55
global X509_V_ERR_SUITE_B_INVALID_VERSION: cint <comptime> = 56
global X509_V_ERR_SUITE_B_INVALID_ALGORITHM: cint <comptime> = 57
global X509_V_ERR_SUITE_B_INVALID_CURVE: cint <comptime> = 58
global X509_V_ERR_SUITE_B_INVALID_SIGNATURE_ALGORITHM: cint <comptime> = 59
global X509_V_ERR_SUITE_B_LOS_NOT_ALLOWED: cint <comptime> = 60
global X509_V_ERR_SUITE_B_CANNOT_SIGN_P_384_WITH_P_256: cint <comptime> = 61
global X509_V_ERR_HOSTNAME_MISMATCH: cint <comptime> = 62
global X509_V_ERR_EMAIL_MISMATCH: cint <comptime> = 63
global X509_V_ERR_IP_ADDRESS_MISMATCH: cint <comptime> = 64
global X509_V_ERR_DANE_NO_MATCH: cint <comptime> = 65
global X509_V_ERR_EE_KEY_TOO_SMALL: cint <comptime> = 66
global X509_V_ERR_CA_KEY_TOO_SMALL: cint <comptime> = 67
global X509_V_ERR_CA_MD_TOO_WEAK: cint <comptime> = 68
global X509_V_ERR_INVALID_CALL: cint <comptime> = 69
global X509_V_ERR_STORE_LOOKUP: cint <comptime> = 70
global X509_V_ERR_NO_VALID_SCTS: cint <comptime> = 71
global X509_V_ERR_PROXY_SUBJECT_NAME_VIOLATION: cint <comptime> = 72
global X509_V_ERR_OCSP_VERIFY_NEEDED: cint <comptime> = 73
global X509_V_ERR_OCSP_VERIFY_FAILED: cint <comptime> = 74
global X509_V_ERR_OCSP_CERT_UNKNOWN: cint <comptime> = 75
global X509_V_ERR_UNSUPPORTED_SIGNATURE_ALGORITHM: cint <comptime> = 76
global X509_V_ERR_SIGNATURE_ALGORITHM_MISMATCH: cint <comptime> = 77
global X509_V_ERR_SIGNATURE_ALGORITHM_INCONSISTENCY: cint <comptime> = 78
global X509_V_ERR_INVALID_CA: cint <comptime> = 79
global X509_V_ERR_PATHLEN_INVALID_FOR_NON_CA: cint <comptime> = 80
global X509_V_ERR_PATHLEN_WITHOUT_KU_KEY_CERT_SIGN: cint <comptime> = 81
global X509_V_ERR_KU_KEY_CERT_SIGN_INVALID_FOR_NON_CA: cint <comptime> = 82
global X509_V_ERR_ISSUER_NAME_EMPTY: cint <comptime> = 83
global X509_V_ERR_SUBJECT_NAME_EMPTY: cint <comptime> = 84
global X509_V_ERR_MISSING_AUTHORITY_KEY_IDENTIFIER: cint <comptime> = 85
global X509_V_ERR_MISSING_SUBJECT_KEY_IDENTIFIER: cint <comptime> = 86
global X509_V_ERR_EMPTY_SUBJECT_ALT_NAME: cint <comptime> = 87
global X509_V_ERR_EMPTY_SUBJECT_SAN_NOT_CRITICAL: cint <comptime> = 88
global X509_V_ERR_CA_BCONS_NOT_CRITICAL: cint <comptime> = 89
global X509_V_ERR_AUTHORITY_KEY_IDENTIFIER_CRITICAL: cint <comptime> = 90
global X509_V_ERR_SUBJECT_KEY_IDENTIFIER_CRITICAL: cint <comptime> = 91
global X509_V_ERR_CA_CERT_MISSING_KEY_USAGE: cint <comptime> = 92
global X509_V_ERR_EXTENSIONS_REQUIRE_VERSION_3: cint <comptime> = 93
global X509_V_ERR_EC_KEY_EXPLICIT_PARAMS: cint <comptime> = 94
global X509_V_ERR_RPK_UNTRUSTED: cint <comptime> = 95
global PKCS7_R_CERTIFICATE_VERIFY_ERROR: cint <comptime> = 117
global PKCS7_R_CTRL_ERROR: cint <comptime> = 152
global PKCS7_R_DECRYPT_ERROR: cint <comptime> = 119
global PKCS7_R_ERROR_ADDING_RECIPIENT: cint <comptime> = 120
global PKCS7_R_ERROR_SETTING_CIPHER: cint <comptime> = 121
global PKCS7_R_PKCS7_ADD_SIGNATURE_ERROR: cint <comptime> = 124
global PKCS7_R_PKCS7_ADD_SIGNER_ERROR: cint <comptime> = 153
global PKCS7_R_SMIME_TEXT_ERROR: cint <comptime> = 129
global CONF_R_ERROR_LOADING_DSO: cint <comptime> = 110
global CONF_R_MODULE_INITIALIZATION_ERROR: cint <comptime> = 109
global CONF_MFLAGS_IGNORE_ERRORS: cint <comptime> = 1
global OPENSSL_NO_PROXY: cstring <comptime> = "NO_PROXY"
global OPENSSL_HTTP_PROXY: cstring <comptime> = "HTTP_PROXY"
global OPENSSL_HTTPS_PROXY: cstring <comptime> = "HTTPS_PROXY"
global PEM_R_ERROR_CONVERTING_PRIVATE_KEY: cint <comptime> = 115
global PEM_R_KEYBLOB_HEADER_PARSE_ERROR: cint <comptime> = 122
global ASYNC_ERR: cint <comptime> = 0
global ASYNC_STATUS_ERR: cint <comptime> = 1
global CT_R_BASE64_DECODE_ERROR: cint <comptime> = 108
global SSL_F_ADD_CLIENT_KEY_SHARE_EXT: cint <comptime> = 0
global SSL_F_ADD_KEY_SHARE: cint <comptime> = 0
global SSL_F_BYTES_TO_CIPHER_LIST: cint <comptime> = 0
global SSL_F_CHECK_SUITEB_CIPHER_LIST: cint <comptime> = 0
global SSL_F_CIPHERSUITE_CB: cint <comptime> = 0
global SSL_F_CONSTRUCT_CA_NAMES: cint <comptime> = 0
global SSL_F_CONSTRUCT_KEY_EXCHANGE_TBS: cint <comptime> = 0
global SSL_F_CONSTRUCT_STATEFUL_TICKET: cint <comptime> = 0
global SSL_F_CONSTRUCT_STATELESS_TICKET: cint <comptime> = 0
global SSL_F_CREATE_SYNTHETIC_MESSAGE_HASH: cint <comptime> = 0
global SSL_F_CREATE_TICKET_PREQUEL: cint <comptime> = 0
global SSL_F_CT_MOVE_SCTS: cint <comptime> = 0
global SSL_F_CT_STRICT: cint <comptime> = 0
global SSL_F_CUSTOM_EXT_ADD: cint <comptime> = 0
global SSL_F_CUSTOM_EXT_PARSE: cint <comptime> = 0
global SSL_F_D2I_SSL_SESSION: cint <comptime> = 0
global SSL_F_DANE_CTX_ENABLE: cint <comptime> = 0
global SSL_F_DANE_MTYPE_SET: cint <comptime> = 0
global SSL_F_DANE_TLSA_ADD: cint <comptime> = 0
global SSL_F_DERIVE_SECRET_KEY_AND_IV: cint <comptime> = 0
global SSL_F_DO_DTLS1_WRITE: cint <comptime> = 0
global SSL_F_DO_SSL3_WRITE: cint <comptime> = 0
global SSL_F_DTLS1_BUFFER_RECORD: cint <comptime> = 0
global SSL_F_DTLS1_CHECK_TIMEOUT_NUM: cint <comptime> = 0
global SSL_F_DTLS1_HEARTBEAT: cint <comptime> = 0
global SSL_F_DTLS1_HM_FRAGMENT_NEW: cint <comptime> = 0
global SSL_F_DTLS1_PREPROCESS_FRAGMENT: cint <comptime> = 0
global SSL_F_DTLS1_PROCESS_BUFFERED_RECORDS: cint <comptime> = 0
global SSL_F_DTLS1_PROCESS_RECORD: cint <comptime> = 0
global SSL_F_DTLS1_READ_BYTES: cint <comptime> = 0
global SSL_F_DTLS1_READ_FAILED: cint <comptime> = 0
global SSL_F_DTLS1_RETRANSMIT_MESSAGE: cint <comptime> = 0
global SSL_F_DTLS1_WRITE_APP_DATA_BYTES: cint <comptime> = 0
global SSL_F_DTLS1_WRITE_BYTES: cint <comptime> = 0
global SSL_F_DTLSV1_LISTEN: cint <comptime> = 0
global SSL_F_DTLS_CONSTRUCT_CHANGE_CIPHER_SPEC: cint <comptime> = 0
global SSL_F_DTLS_CONSTRUCT_HELLO_VERIFY_REQUEST: cint <comptime> = 0
global SSL_F_DTLS_GET_REASSEMBLED_MESSAGE: cint <comptime> = 0
global SSL_F_DTLS_PROCESS_HELLO_VERIFY: cint <comptime> = 0
global SSL_F_DTLS_RECORD_LAYER_NEW: cint <comptime> = 0
global SSL_F_DTLS_WAIT_FOR_DRY: cint <comptime> = 0
global SSL_F_EARLY_DATA_COUNT_OK: cint <comptime> = 0
global SSL_F_FINAL_EARLY_DATA: cint <comptime> = 0
global SSL_F_FINAL_EC_PT_FORMATS: cint <comptime> = 0
global SSL_F_FINAL_EMS: cint <comptime> = 0
global SSL_F_FINAL_KEY_SHARE: cint <comptime> = 0
global SSL_F_FINAL_MAXFRAGMENTLEN: cint <comptime> = 0
global SSL_F_FINAL_RENEGOTIATE: cint <comptime> = 0
global SSL_F_FINAL_SERVER_NAME: cint <comptime> = 0
global SSL_F_FINAL_SIG_ALGS: cint <comptime> = 0
global SSL_F_GET_CERT_VERIFY_TBS_DATA: cint <comptime> = 0
global SSL_F_NSS_KEYLOG_INT: cint <comptime> = 0
global SSL_F_OPENSSL_INIT_SSL: cint <comptime> = 0
global SSL_F_OSSL_STATEM_CLIENT13_READ_TRANSITION: cint <comptime> = 0
global SSL_F_OSSL_STATEM_CLIENT13_WRITE_TRANSITION: cint <comptime> = 0
global SSL_F_OSSL_STATEM_CLIENT_CONSTRUCT_MESSAGE: cint <comptime> = 0
global SSL_F_OSSL_STATEM_CLIENT_POST_PROCESS_MESSAGE: cint <comptime> = 0
global SSL_F_OSSL_STATEM_CLIENT_PROCESS_MESSAGE: cint <comptime> = 0
global SSL_F_OSSL_STATEM_CLIENT_READ_TRANSITION: cint <comptime> = 0
global SSL_F_OSSL_STATEM_CLIENT_WRITE_TRANSITION: cint <comptime> = 0
global SSL_F_OSSL_STATEM_SERVER13_READ_TRANSITION: cint <comptime> = 0
global SSL_F_OSSL_STATEM_SERVER13_WRITE_TRANSITION: cint <comptime> = 0
global SSL_F_OSSL_STATEM_SERVER_CONSTRUCT_MESSAGE: cint <comptime> = 0
global SSL_F_OSSL_STATEM_SERVER_POST_PROCESS_MESSAGE: cint <comptime> = 0
global SSL_F_OSSL_STATEM_SERVER_POST_WORK: cint <comptime> = 0
global SSL_F_OSSL_STATEM_SERVER_PRE_WORK: cint <comptime> = 0
global SSL_F_OSSL_STATEM_SERVER_PROCESS_MESSAGE: cint <comptime> = 0
global SSL_F_OSSL_STATEM_SERVER_READ_TRANSITION: cint <comptime> = 0
global SSL_F_OSSL_STATEM_SERVER_WRITE_TRANSITION: cint <comptime> = 0
global SSL_F_PARSE_CA_NAMES: cint <comptime> = 0
global SSL_F_PITEM_NEW: cint <comptime> = 0
global SSL_F_PQUEUE_NEW: cint <comptime> = 0
global SSL_F_PROCESS_KEY_SHARE_EXT: cint <comptime> = 0
global SSL_F_READ_STATE_MACHINE: cint <comptime> = 0
global SSL_F_SET_CLIENT_CIPHERSUITE: cint <comptime> = 0
global SSL_F_SRP_GENERATE_CLIENT_MASTER_SECRET: cint <comptime> = 0
global SSL_F_SRP_GENERATE_SERVER_MASTER_SECRET: cint <comptime> = 0
global SSL_F_SRP_VERIFY_SERVER_PARAM: cint <comptime> = 0
global SSL_F_SSL3_CHANGE_CIPHER_STATE: cint <comptime> = 0
global SSL_F_SSL3_CHECK_CERT_AND_ALGORITHM: cint <comptime> = 0
global SSL_F_SSL3_CTRL: cint <comptime> = 0
global SSL_F_SSL3_CTX_CTRL: cint <comptime> = 0
global SSL_F_SSL3_DIGEST_CACHED_RECORDS: cint <comptime> = 0
global SSL_F_SSL3_DO_CHANGE_CIPHER_SPEC: cint <comptime> = 0
global SSL_F_SSL3_ENC: cint <comptime> = 0
global SSL_F_SSL3_FINAL_FINISH_MAC: cint <comptime> = 0
global SSL_F_SSL3_FINISH_MAC: cint <comptime> = 0
global SSL_F_SSL3_GENERATE_KEY_BLOCK: cint <comptime> = 0
global SSL_F_SSL3_GENERATE_MASTER_SECRET: cint <comptime> = 0
global SSL_F_SSL3_GET_RECORD: cint <comptime> = 0
global SSL_F_SSL3_INIT_FINISHED_MAC: cint <comptime> = 0
global SSL_F_SSL3_OUTPUT_CERT_CHAIN: cint <comptime> = 0
global SSL_F_SSL3_READ_BYTES: cint <comptime> = 0
global SSL_F_SSL3_READ_N: cint <comptime> = 0
global SSL_F_SSL3_SETUP_KEY_BLOCK: cint <comptime> = 0
global SSL_F_SSL3_SETUP_READ_BUFFER: cint <comptime> = 0
global SSL_F_SSL3_SETUP_WRITE_BUFFER: cint <comptime> = 0
global SSL_F_SSL3_WRITE_BYTES: cint <comptime> = 0
global SSL_F_SSL3_WRITE_PENDING: cint <comptime> = 0
global SSL_F_SSL_ADD_CERT_CHAIN: cint <comptime> = 0
global SSL_F_SSL_ADD_CERT_TO_BUF: cint <comptime> = 0
global SSL_F_SSL_ADD_CERT_TO_WPACKET: cint <comptime> = 0
global SSL_F_SSL_ADD_CLIENTHELLO_RENEGOTIATE_EXT: cint <comptime> = 0
global SSL_F_SSL_ADD_CLIENTHELLO_TLSEXT: cint <comptime> = 0
global SSL_F_SSL_ADD_CLIENTHELLO_USE_SRTP_EXT: cint <comptime> = 0
global SSL_F_SSL_ADD_DIR_CERT_SUBJECTS_TO_STACK: cint <comptime> = 0
global SSL_F_SSL_ADD_FILE_CERT_SUBJECTS_TO_STACK: cint <comptime> = 0
global SSL_F_SSL_ADD_SERVERHELLO_RENEGOTIATE_EXT: cint <comptime> = 0
global SSL_F_SSL_ADD_SERVERHELLO_TLSEXT: cint <comptime> = 0
global SSL_F_SSL_ADD_SERVERHELLO_USE_SRTP_EXT: cint <comptime> = 0
global SSL_F_SSL_BUILD_CERT_CHAIN: cint <comptime> = 0
global SSL_F_SSL_BYTES_TO_CIPHER_LIST: cint <comptime> = 0
global SSL_F_SSL_CACHE_CIPHERLIST: cint <comptime> = 0
global SSL_F_SSL_CERT_ADD0_CHAIN_CERT: cint <comptime> = 0
global SSL_F_SSL_CERT_DUP: cint <comptime> = 0
global SSL_F_SSL_CERT_NEW: cint <comptime> = 0
global SSL_F_SSL_CERT_SET0_CHAIN: cint <comptime> = 0
global SSL_F_SSL_CHECK_PRIVATE_KEY: cint <comptime> = 0
global SSL_F_SSL_CHECK_SERVERHELLO_TLSEXT: cint <comptime> = 0
global SSL_F_SSL_CHECK_SRP_EXT_CLIENTHELLO: cint <comptime> = 0
global SSL_F_SSL_CHECK_SRVR_ECC_CERT_AND_ALG: cint <comptime> = 0
global SSL_F_SSL_CHOOSE_CLIENT_VERSION: cint <comptime> = 0
global SSL_F_SSL_CIPHER_DESCRIPTION: cint <comptime> = 0
global SSL_F_SSL_CIPHER_LIST_TO_BYTES: cint <comptime> = 0
global SSL_F_SSL_CIPHER_PROCESS_RULESTR: cint <comptime> = 0
global SSL_F_SSL_CIPHER_STRENGTH_SORT: cint <comptime> = 0
global SSL_F_SSL_CLEAR: cint <comptime> = 0
global SSL_F_SSL_CLIENT_HELLO_GET1_EXTENSIONS_PRESENT: cint <comptime> = 0
global SSL_F_SSL_COMP_ADD_COMPRESSION_METHOD: cint <comptime> = 0
global SSL_F_SSL_CONF_CMD: cint <comptime> = 0
global SSL_F_SSL_CREATE_CIPHER_LIST: cint <comptime> = 0
global SSL_F_SSL_CTRL: cint <comptime> = 0
global SSL_F_SSL_CTX_CHECK_PRIVATE_KEY: cint <comptime> = 0
global SSL_F_SSL_CTX_ENABLE_CT: cint <comptime> = 0
global SSL_F_SSL_CTX_MAKE_PROFILES: cint <comptime> = 0
global SSL_F_SSL_CTX_NEW: cint <comptime> = 0
global SSL_F_SSL_CTX_SET_ALPN_PROTOS: cint <comptime> = 0
global SSL_F_SSL_CTX_SET_CIPHER_LIST: cint <comptime> = 0
global SSL_F_SSL_CTX_SET_CLIENT_CERT_ENGINE: cint <comptime> = 0
global SSL_F_SSL_CTX_SET_CT_VALIDATION_CALLBACK: cint <comptime> = 0
global SSL_F_SSL_CTX_SET_SESSION_ID_CONTEXT: cint <comptime> = 0
global SSL_F_SSL_CTX_SET_SSL_VERSION: cint <comptime> = 0
global SSL_F_SSL_CTX_SET_TLSEXT_MAX_FRAGMENT_LENGTH: cint <comptime> = 0
global SSL_F_SSL_CTX_USE_CERTIFICATE: cint <comptime> = 0
global SSL_F_SSL_CTX_USE_CERTIFICATE_ASN1: cint <comptime> = 0
global SSL_F_SSL_CTX_USE_CERTIFICATE_FILE: cint <comptime> = 0
global SSL_F_SSL_CTX_USE_PRIVATEKEY: cint <comptime> = 0
global SSL_F_SSL_CTX_USE_PRIVATEKEY_ASN1: cint <comptime> = 0
global SSL_F_SSL_CTX_USE_PRIVATEKEY_FILE: cint <comptime> = 0
global SSL_F_SSL_CTX_USE_PSK_IDENTITY_HINT: cint <comptime> = 0
global SSL_F_SSL_CTX_USE_RSAPRIVATEKEY: cint <comptime> = 0
global SSL_F_SSL_CTX_USE_RSAPRIVATEKEY_ASN1: cint <comptime> = 0
global SSL_F_SSL_CTX_USE_RSAPRIVATEKEY_FILE: cint <comptime> = 0
global SSL_F_SSL_CTX_USE_SERVERINFO: cint <comptime> = 0
global SSL_F_SSL_CTX_USE_SERVERINFO_EX: cint <comptime> = 0
global SSL_F_SSL_CTX_USE_SERVERINFO_FILE: cint <comptime> = 0
global SSL_F_SSL_DANE_DUP: cint <comptime> = 0
global SSL_F_SSL_DANE_ENABLE: cint <comptime> = 0
global SSL_F_SSL_DERIVE: cint <comptime> = 0
global SSL_F_SSL_DO_CONFIG: cint <comptime> = 0
global SSL_F_SSL_DO_HANDSHAKE: cint <comptime> = 0
global SSL_F_SSL_DUP_CA_LIST: cint <comptime> = 0
global SSL_F_SSL_ENABLE_CT: cint <comptime> = 0
global SSL_F_SSL_GENERATE_PKEY_GROUP: cint <comptime> = 0
global SSL_F_SSL_GENERATE_SESSION_ID: cint <comptime> = 0
global SSL_F_SSL_GET_NEW_SESSION: cint <comptime> = 0
global SSL_F_SSL_GET_PREV_SESSION: cint <comptime> = 0
global SSL_F_SSL_GET_SERVER_CERT_INDEX: cint <comptime> = 0
global SSL_F_SSL_GET_SIGN_PKEY: cint <comptime> = 0
global SSL_F_SSL_HANDSHAKE_HASH: cint <comptime> = 0
global SSL_F_SSL_INIT_WBIO_BUFFER: cint <comptime> = 0
global SSL_F_SSL_KEY_UPDATE: cint <comptime> = 0
global SSL_F_SSL_LOAD_CLIENT_CA_FILE: cint <comptime> = 0
global SSL_F_SSL_LOG_MASTER_SECRET: cint <comptime> = 0
global SSL_F_SSL_LOG_RSA_CLIENT_KEY_EXCHANGE: cint <comptime> = 0
global SSL_F_SSL_MODULE_INIT: cint <comptime> = 0
global SSL_F_SSL_NEW: cint <comptime> = 0
global SSL_F_SSL_NEXT_PROTO_VALIDATE: cint <comptime> = 0
global SSL_F_SSL_PARSE_CLIENTHELLO_RENEGOTIATE_EXT: cint <comptime> = 0
global SSL_F_SSL_PARSE_CLIENTHELLO_TLSEXT: cint <comptime> = 0
global SSL_F_SSL_PARSE_CLIENTHELLO_USE_SRTP_EXT: cint <comptime> = 0
global SSL_F_SSL_PARSE_SERVERHELLO_RENEGOTIATE_EXT: cint <comptime> = 0
global SSL_F_SSL_PARSE_SERVERHELLO_TLSEXT: cint <comptime> = 0
global SSL_F_SSL_PARSE_SERVERHELLO_USE_SRTP_EXT: cint <comptime> = 0
global SSL_F_SSL_PEEK: cint <comptime> = 0
global SSL_F_SSL_PEEK_EX: cint <comptime> = 0
global SSL_F_SSL_PEEK_INTERNAL: cint <comptime> = 0
global SSL_F_SSL_READ: cint <comptime> = 0
global SSL_F_SSL_READ_EARLY_DATA: cint <comptime> = 0
global SSL_F_SSL_READ_EX: cint <comptime> = 0
global SSL_F_SSL_READ_INTERNAL: cint <comptime> = 0
global SSL_F_SSL_RENEGOTIATE: cint <comptime> = 0
global SSL_F_SSL_RENEGOTIATE_ABBREVIATED: cint <comptime> = 0
global SSL_F_SSL_SCAN_CLIENTHELLO_TLSEXT: cint <comptime> = 0
global SSL_F_SSL_SCAN_SERVERHELLO_TLSEXT: cint <comptime> = 0
global SSL_F_SSL_SESSION_DUP: cint <comptime> = 0
global SSL_F_SSL_SESSION_NEW: cint <comptime> = 0
global SSL_F_SSL_SESSION_PRINT_FP: cint <comptime> = 0
global SSL_F_SSL_SESSION_SET1_ID: cint <comptime> = 0
global SSL_F_SSL_SESSION_SET1_ID_CONTEXT: cint <comptime> = 0
global SSL_F_SSL_SET_ALPN_PROTOS: cint <comptime> = 0
global SSL_F_SSL_SET_CERT: cint <comptime> = 0
global SSL_F_SSL_SET_CERT_AND_KEY: cint <comptime> = 0
global SSL_F_SSL_SET_CIPHER_LIST: cint <comptime> = 0
global SSL_F_SSL_SET_CT_VALIDATION_CALLBACK: cint <comptime> = 0
global SSL_F_SSL_SET_FD: cint <comptime> = 0
global SSL_F_SSL_SET_PKEY: cint <comptime> = 0
global SSL_F_SSL_SET_RFD: cint <comptime> = 0
global SSL_F_SSL_SET_SESSION: cint <comptime> = 0
global SSL_F_SSL_SET_SESSION_ID_CONTEXT: cint <comptime> = 0
global SSL_F_SSL_SET_SESSION_TICKET_EXT: cint <comptime> = 0
global SSL_F_SSL_SET_TLSEXT_MAX_FRAGMENT_LENGTH: cint <comptime> = 0
global SSL_F_SSL_SET_WFD: cint <comptime> = 0
global SSL_F_SSL_SHUTDOWN: cint <comptime> = 0
global SSL_F_SSL_SRP_CTX_INIT: cint <comptime> = 0
global SSL_F_SSL_START_ASYNC_JOB: cint <comptime> = 0
global SSL_F_SSL_UNDEFINED_FUNCTION: cint <comptime> = 0
global SSL_F_SSL_UNDEFINED_VOID_FUNCTION: cint <comptime> = 0
global SSL_F_SSL_USE_CERTIFICATE: cint <comptime> = 0
global SSL_F_SSL_USE_CERTIFICATE_ASN1: cint <comptime> = 0
global SSL_F_SSL_USE_CERTIFICATE_FILE: cint <comptime> = 0
global SSL_F_SSL_USE_PRIVATEKEY: cint <comptime> = 0
global SSL_F_SSL_USE_PRIVATEKEY_ASN1: cint <comptime> = 0
global SSL_F_SSL_USE_PRIVATEKEY_FILE: cint <comptime> = 0
global SSL_F_SSL_USE_PSK_IDENTITY_HINT: cint <comptime> = 0
global SSL_F_SSL_USE_RSAPRIVATEKEY: cint <comptime> = 0
global SSL_F_SSL_USE_RSAPRIVATEKEY_ASN1: cint <comptime> = 0
global SSL_F_SSL_USE_RSAPRIVATEKEY_FILE: cint <comptime> = 0
global SSL_F_SSL_VALIDATE_CT: cint <comptime> = 0
global SSL_F_SSL_VERIFY_CERT_CHAIN: cint <comptime> = 0
global SSL_F_SSL_VERIFY_CLIENT_POST_HANDSHAKE: cint <comptime> = 0
global SSL_F_SSL_WRITE: cint <comptime> = 0
global SSL_F_SSL_WRITE_EARLY_DATA: cint <comptime> = 0
global SSL_F_SSL_WRITE_EARLY_FINISH: cint <comptime> = 0
global SSL_F_SSL_WRITE_EX: cint <comptime> = 0
global SSL_F_SSL_WRITE_INTERNAL: cint <comptime> = 0
global SSL_F_STATE_MACHINE: cint <comptime> = 0
global SSL_F_TLS12_CHECK_PEER_SIGALG: cint <comptime> = 0
global SSL_F_TLS12_COPY_SIGALGS: cint <comptime> = 0
global SSL_F_TLS13_CHANGE_CIPHER_STATE: cint <comptime> = 0
global SSL_F_TLS13_ENC: cint <comptime> = 0
global SSL_F_TLS13_FINAL_FINISH_MAC: cint <comptime> = 0
global SSL_F_TLS13_GENERATE_SECRET: cint <comptime> = 0
global SSL_F_TLS13_HKDF_EXPAND: cint <comptime> = 0
global SSL_F_TLS13_RESTORE_HANDSHAKE_DIGEST_FOR_PHA: cint <comptime> = 0
global SSL_F_TLS13_SAVE_HANDSHAKE_DIGEST_FOR_PHA: cint <comptime> = 0
global SSL_F_TLS13_SETUP_KEY_BLOCK: cint <comptime> = 0
global SSL_F_TLS1_CHANGE_CIPHER_STATE: cint <comptime> = 0
global SSL_F_TLS1_CHECK_DUPLICATE_EXTENSIONS: cint <comptime> = 0
global SSL_F_TLS1_ENC: cint <comptime> = 0
global SSL_F_TLS1_EXPORT_KEYING_MATERIAL: cint <comptime> = 0
global SSL_F_TLS1_GET_CURVELIST: cint <comptime> = 0
global SSL_F_TLS1_PRF: cint <comptime> = 0
global SSL_F_TLS1_SAVE_U16: cint <comptime> = 0
global SSL_F_TLS1_SETUP_KEY_BLOCK: cint <comptime> = 0
global SSL_F_TLS1_SET_GROUPS: cint <comptime> = 0
global SSL_F_TLS1_SET_RAW_SIGALGS: cint <comptime> = 0
global SSL_F_TLS1_SET_SERVER_SIGALGS: cint <comptime> = 0
global SSL_F_TLS1_SET_SHARED_SIGALGS: cint <comptime> = 0
global SSL_F_TLS1_SET_SIGALGS: cint <comptime> = 0
global SSL_F_TLS_CHOOSE_SIGALG: cint <comptime> = 0
global SSL_F_TLS_CLIENT_KEY_EXCHANGE_POST_WORK: cint <comptime> = 0
global SSL_F_TLS_COLLECT_EXTENSIONS: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_CERTIFICATE_AUTHORITIES: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_CERTIFICATE_REQUEST: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_CERT_STATUS: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_CERT_STATUS_BODY: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_CERT_VERIFY: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_CHANGE_CIPHER_SPEC: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_CKE_DHE: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_CKE_ECDHE: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_CKE_GOST: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_CKE_PSK_PREAMBLE: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_CKE_RSA: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_CKE_SRP: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_CLIENT_CERTIFICATE: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_CLIENT_HELLO: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_CLIENT_KEY_EXCHANGE: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_CLIENT_VERIFY: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_CTOS_ALPN: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_CTOS_CERTIFICATE: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_CTOS_COOKIE: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_CTOS_EARLY_DATA: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_CTOS_EC_PT_FORMATS: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_CTOS_EMS: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_CTOS_ETM: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_CTOS_HELLO: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_CTOS_KEY_EXCHANGE: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_CTOS_KEY_SHARE: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_CTOS_MAXFRAGMENTLEN: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_CTOS_NPN: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_CTOS_PADDING: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_CTOS_POST_HANDSHAKE_AUTH: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_CTOS_PSK: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_CTOS_PSK_KEX_MODES: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_CTOS_RENEGOTIATE: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_CTOS_SCT: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_CTOS_SERVER_NAME: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_CTOS_SESSION_TICKET: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_CTOS_SIG_ALGS: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_CTOS_SRP: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_CTOS_STATUS_REQUEST: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_CTOS_SUPPORTED_GROUPS: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_CTOS_SUPPORTED_VERSIONS: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_CTOS_USE_SRTP: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_CTOS_VERIFY: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_ENCRYPTED_EXTENSIONS: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_END_OF_EARLY_DATA: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_EXTENSIONS: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_FINISHED: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_HELLO_REQUEST: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_HELLO_RETRY_REQUEST: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_KEY_UPDATE: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_NEW_SESSION_TICKET: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_NEXT_PROTO: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_SERVER_CERTIFICATE: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_SERVER_HELLO: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_SERVER_KEY_EXCHANGE: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_STOC_ALPN: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_STOC_CERTIFICATE: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_STOC_COOKIE: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_STOC_CRYPTOPRO_BUG: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_STOC_DONE: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_STOC_EARLY_DATA: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_STOC_EARLY_DATA_INFO: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_STOC_EC_PT_FORMATS: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_STOC_EMS: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_STOC_ETM: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_STOC_HELLO: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_STOC_KEY_EXCHANGE: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_STOC_KEY_SHARE: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_STOC_MAXFRAGMENTLEN: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_STOC_NEXT_PROTO_NEG: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_STOC_PSK: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_STOC_RENEGOTIATE: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_STOC_SERVER_NAME: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_STOC_SESSION_TICKET: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_STOC_STATUS_REQUEST: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_STOC_SUPPORTED_GROUPS: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_STOC_SUPPORTED_VERSIONS: cint <comptime> = 0
global SSL_F_TLS_CONSTRUCT_STOC_USE_SRTP: cint <comptime> = 0
global SSL_F_TLS_EARLY_POST_PROCESS_CLIENT_HELLO: cint <comptime> = 0
global SSL_F_TLS_FINISH_HANDSHAKE: cint <comptime> = 0
global SSL_F_TLS_GET_MESSAGE_BODY: cint <comptime> = 0
global SSL_F_TLS_GET_MESSAGE_HEADER: cint <comptime> = 0
global SSL_F_TLS_HANDLE_ALPN: cint <comptime> = 0
global SSL_F_TLS_HANDLE_STATUS_REQUEST: cint <comptime> = 0
global SSL_F_TLS_PARSE_CERTIFICATE_AUTHORITIES: cint <comptime> = 0
global SSL_F_TLS_PARSE_CLIENTHELLO_TLSEXT: cint <comptime> = 0
global SSL_F_TLS_PARSE_CTOS_ALPN: cint <comptime> = 0
global SSL_F_TLS_PARSE_CTOS_COOKIE: cint <comptime> = 0
global SSL_F_TLS_PARSE_CTOS_EARLY_DATA: cint <comptime> = 0
global SSL_F_TLS_PARSE_CTOS_EC_PT_FORMATS: cint <comptime> = 0
global SSL_F_TLS_PARSE_CTOS_EMS: cint <comptime> = 0
global SSL_F_TLS_PARSE_CTOS_KEY_SHARE: cint <comptime> = 0
global SSL_F_TLS_PARSE_CTOS_MAXFRAGMENTLEN: cint <comptime> = 0
global SSL_F_TLS_PARSE_CTOS_POST_HANDSHAKE_AUTH: cint <comptime> = 0
global SSL_F_TLS_PARSE_CTOS_PSK: cint <comptime> = 0
global SSL_F_TLS_PARSE_CTOS_PSK_KEX_MODES: cint <comptime> = 0
global SSL_F_TLS_PARSE_CTOS_RENEGOTIATE: cint <comptime> = 0
global SSL_F_TLS_PARSE_CTOS_SERVER_NAME: cint <comptime> = 0
global SSL_F_TLS_PARSE_CTOS_SESSION_TICKET: cint <comptime> = 0
global SSL_F_TLS_PARSE_CTOS_SIG_ALGS: cint <comptime> = 0
global SSL_F_TLS_PARSE_CTOS_SIG_ALGS_CERT: cint <comptime> = 0
global SSL_F_TLS_PARSE_CTOS_SRP: cint <comptime> = 0
global SSL_F_TLS_PARSE_CTOS_STATUS_REQUEST: cint <comptime> = 0
global SSL_F_TLS_PARSE_CTOS_SUPPORTED_GROUPS: cint <comptime> = 0
global SSL_F_TLS_PARSE_CTOS_USE_SRTP: cint <comptime> = 0
global SSL_F_TLS_PARSE_STOC_ALPN: cint <comptime> = 0
global SSL_F_TLS_PARSE_STOC_COOKIE: cint <comptime> = 0
global SSL_F_TLS_PARSE_STOC_EARLY_DATA: cint <comptime> = 0
global SSL_F_TLS_PARSE_STOC_EARLY_DATA_INFO: cint <comptime> = 0
global SSL_F_TLS_PARSE_STOC_EC_PT_FORMATS: cint <comptime> = 0
global SSL_F_TLS_PARSE_STOC_KEY_SHARE: cint <comptime> = 0
global SSL_F_TLS_PARSE_STOC_MAXFRAGMENTLEN: cint <comptime> = 0
global SSL_F_TLS_PARSE_STOC_NPN: cint <comptime> = 0
global SSL_F_TLS_PARSE_STOC_PSK: cint <comptime> = 0
global SSL_F_TLS_PARSE_STOC_RENEGOTIATE: cint <comptime> = 0
global SSL_F_TLS_PARSE_STOC_SCT: cint <comptime> = 0
global SSL_F_TLS_PARSE_STOC_SERVER_NAME: cint <comptime> = 0
global SSL_F_TLS_PARSE_STOC_SESSION_TICKET: cint <comptime> = 0
global SSL_F_TLS_PARSE_STOC_STATUS_REQUEST: cint <comptime> = 0
global SSL_F_TLS_PARSE_STOC_SUPPORTED_VERSIONS: cint <comptime> = 0
global SSL_F_TLS_PARSE_STOC_USE_SRTP: cint <comptime> = 0
global SSL_F_TLS_POST_PROCESS_CLIENT_HELLO: cint <comptime> = 0
global SSL_F_TLS_POST_PROCESS_CLIENT_KEY_EXCHANGE: cint <comptime> = 0
global SSL_F_TLS_PREPARE_CLIENT_CERTIFICATE: cint <comptime> = 0
global SSL_F_TLS_PROCESS_AS_HELLO_RETRY_REQUEST: cint <comptime> = 0
global SSL_F_TLS_PROCESS_CERTIFICATE_REQUEST: cint <comptime> = 0
global SSL_F_TLS_PROCESS_CERT_STATUS: cint <comptime> = 0
global SSL_F_TLS_PROCESS_CERT_STATUS_BODY: cint <comptime> = 0
global SSL_F_TLS_PROCESS_CERT_VERIFY: cint <comptime> = 0
global SSL_F_TLS_PROCESS_CHANGE_CIPHER_SPEC: cint <comptime> = 0
global SSL_F_TLS_PROCESS_CKE_DHE: cint <comptime> = 0
global SSL_F_TLS_PROCESS_CKE_ECDHE: cint <comptime> = 0
global SSL_F_TLS_PROCESS_CKE_GOST: cint <comptime> = 0
global SSL_F_TLS_PROCESS_CKE_PSK_PREAMBLE: cint <comptime> = 0
global SSL_F_TLS_PROCESS_CKE_RSA: cint <comptime> = 0
global SSL_F_TLS_PROCESS_CKE_SRP: cint <comptime> = 0
global SSL_F_TLS_PROCESS_CLIENT_CERTIFICATE: cint <comptime> = 0
global SSL_F_TLS_PROCESS_CLIENT_HELLO: cint <comptime> = 0
global SSL_F_TLS_PROCESS_CLIENT_KEY_EXCHANGE: cint <comptime> = 0
global SSL_F_TLS_PROCESS_ENCRYPTED_EXTENSIONS: cint <comptime> = 0
global SSL_F_TLS_PROCESS_END_OF_EARLY_DATA: cint <comptime> = 0
global SSL_F_TLS_PROCESS_FINISHED: cint <comptime> = 0
global SSL_F_TLS_PROCESS_HELLO_REQ: cint <comptime> = 0
global SSL_F_TLS_PROCESS_HELLO_RETRY_REQUEST: cint <comptime> = 0
global SSL_F_TLS_PROCESS_INITIAL_SERVER_FLIGHT: cint <comptime> = 0
global SSL_F_TLS_PROCESS_KEY_EXCHANGE: cint <comptime> = 0
global SSL_F_TLS_PROCESS_KEY_UPDATE: cint <comptime> = 0
global SSL_F_TLS_PROCESS_NEW_SESSION_TICKET: cint <comptime> = 0
global SSL_F_TLS_PROCESS_NEXT_PROTO: cint <comptime> = 0
global SSL_F_TLS_PROCESS_SERVER_CERTIFICATE: cint <comptime> = 0
global SSL_F_TLS_PROCESS_SERVER_DONE: cint <comptime> = 0
global SSL_F_TLS_PROCESS_SERVER_HELLO: cint <comptime> = 0
global SSL_F_TLS_PROCESS_SKE_DHE: cint <comptime> = 0
global SSL_F_TLS_PROCESS_SKE_ECDHE: cint <comptime> = 0
global SSL_F_TLS_PROCESS_SKE_PSK_PREAMBLE: cint <comptime> = 0
global SSL_F_TLS_PROCESS_SKE_SRP: cint <comptime> = 0
global SSL_F_TLS_PSK_DO_BINDER: cint <comptime> = 0
global SSL_F_TLS_SCAN_CLIENTHELLO_TLSEXT: cint <comptime> = 0
global SSL_F_TLS_SETUP_HANDSHAKE: cint <comptime> = 0
global SSL_F_USE_CERTIFICATE_CHAIN_FILE: cint <comptime> = 0
global SSL_F_WPACKET_INTERN_INIT_LEN: cint <comptime> = 0
global SSL_F_WPACKET_START_SUB_PACKET_LEN__: cint <comptime> = 0
global SSL_F_WRITE_STATE_MACHINE: cint <comptime> = 0
global SSL_R_APPLICATION_DATA_AFTER_CLOSE_NOTIFY: cint <comptime> = 291
global SSL_R_APP_DATA_IN_HANDSHAKE: cint <comptime> = 100
global SSL_R_ATTEMPT_TO_REUSE_SESSION_IN_DIFFERENT_CONTEXT: cint <comptime> = 272
global SSL_R_AT_LEAST_TLS_1_2_NEEDED_IN_SUITEB_MODE: cint <comptime> = 158
global SSL_R_BAD_CERTIFICATE: cint <comptime> = 348
global SSL_R_BAD_CHANGE_CIPHER_SPEC: cint <comptime> = 103
global SSL_R_BAD_CIPHER: cint <comptime> = 186
global SSL_R_BAD_COMPRESSION_ALGORITHM: cint <comptime> = 326
global SSL_R_BAD_DATA: cint <comptime> = 390
global SSL_R_BAD_DATA_RETURNED_BY_CALLBACK: cint <comptime> = 106
global SSL_R_BAD_DECOMPRESSION: cint <comptime> = 107
global SSL_R_BAD_DH_VALUE: cint <comptime> = 102
global SSL_R_BAD_DIGEST_LENGTH: cint <comptime> = 111
global SSL_R_BAD_EARLY_DATA: cint <comptime> = 233
global SSL_R_BAD_ECC_CERT: cint <comptime> = 304
global SSL_R_BAD_ECPOINT: cint <comptime> = 306
global SSL_R_BAD_EXTENSION: cint <comptime> = 110
global SSL_R_BAD_HANDSHAKE_LENGTH: cint <comptime> = 332
global SSL_R_BAD_HANDSHAKE_STATE: cint <comptime> = 236
global SSL_R_BAD_HELLO_REQUEST: cint <comptime> = 105
global SSL_R_BAD_HRR_VERSION: cint <comptime> = 263
global SSL_R_BAD_KEY_SHARE: cint <comptime> = 108
global SSL_R_BAD_KEY_UPDATE: cint <comptime> = 122
global SSL_R_BAD_LEGACY_VERSION: cint <comptime> = 292
global SSL_R_BAD_LENGTH: cint <comptime> = 271
global SSL_R_BAD_PACKET: cint <comptime> = 240
global SSL_R_BAD_PACKET_LENGTH: cint <comptime> = 115
global SSL_R_BAD_PROTOCOL_VERSION_NUMBER: cint <comptime> = 116
global SSL_R_BAD_PSK: cint <comptime> = 219
global SSL_R_BAD_PSK_IDENTITY: cint <comptime> = 114
global SSL_R_BAD_RECORD_TYPE: cint <comptime> = 443
global SSL_R_BAD_RSA_ENCRYPT: cint <comptime> = 119
global SSL_R_BAD_SIGNATURE: cint <comptime> = 123
global SSL_R_BAD_SRP_A_LENGTH: cint <comptime> = 347
global SSL_R_BAD_SRP_PARAMETERS: cint <comptime> = 371
global SSL_R_BAD_SRTP_MKI_VALUE: cint <comptime> = 352
global SSL_R_BAD_SRTP_PROTECTION_PROFILE_LIST: cint <comptime> = 353
global SSL_R_BAD_SSL_FILETYPE: cint <comptime> = 124
global SSL_R_BAD_VALUE: cint <comptime> = 384
global SSL_R_BAD_WRITE_RETRY: cint <comptime> = 127
global SSL_R_BINDER_DOES_NOT_VERIFY: cint <comptime> = 253
global SSL_R_BIO_NOT_SET: cint <comptime> = 128
global SSL_R_BLOCK_CIPHER_PAD_IS_WRONG: cint <comptime> = 129
global SSL_R_BN_LIB: cint <comptime> = 130
global SSL_R_CALLBACK_FAILED: cint <comptime> = 234
global SSL_R_CANNOT_CHANGE_CIPHER: cint <comptime> = 109
global SSL_R_CANNOT_GET_GROUP_NAME: cint <comptime> = 299
global SSL_R_CA_DN_LENGTH_MISMATCH: cint <comptime> = 131
global SSL_R_CA_KEY_TOO_SMALL: cint <comptime> = 397
global SSL_R_CA_MD_TOO_WEAK: cint <comptime> = 398
global SSL_R_CCS_RECEIVED_EARLY: cint <comptime> = 133
global SSL_R_CERTIFICATE_VERIFY_FAILED: cint <comptime> = 134
global SSL_R_CERT_CB_ERROR: cint <comptime> = 377
global SSL_R_CERT_LENGTH_MISMATCH: cint <comptime> = 135
global SSL_R_CIPHERSUITE_DIGEST_HAS_CHANGED: cint <comptime> = 218
global SSL_R_CIPHER_CODE_WRONG_LENGTH: cint <comptime> = 137
global SSL_R_CLIENTHELLO_TLSEXT: cint <comptime> = 226
global SSL_R_COMPRESSED_LENGTH_TOO_LONG: cint <comptime> = 140
global SSL_R_COMPRESSION_DISABLED: cint <comptime> = 343
global SSL_R_COMPRESSION_FAILURE: cint <comptime> = 141
global SSL_R_COMPRESSION_ID_NOT_WITHIN_PRIVATE_RANGE: cint <comptime> = 307
global SSL_R_COMPRESSION_LIBRARY_ERROR: cint <comptime> = 142
global SSL_R_CONNECTION_TYPE_NOT_SET: cint <comptime> = 144
global SSL_R_CONN_USE_ONLY: cint <comptime> = 356
global SSL_R_CONTEXT_NOT_DANE_ENABLED: cint <comptime> = 167
global SSL_R_COOKIE_GEN_CALLBACK_FAILURE: cint <comptime> = 400
global SSL_R_COOKIE_MISMATCH: cint <comptime> = 308
global SSL_R_COPY_PARAMETERS_FAILED: cint <comptime> = 296
global SSL_R_CUSTOM_EXT_HANDLER_ALREADY_INSTALLED: cint <comptime> = 206
global SSL_R_DANE_ALREADY_ENABLED: cint <comptime> = 172
global SSL_R_DANE_CANNOT_OVERRIDE_MTYPE_FULL: cint <comptime> = 173
global SSL_R_DANE_NOT_ENABLED: cint <comptime> = 175
global SSL_R_DANE_TLSA_BAD_CERTIFICATE: cint <comptime> = 180
global SSL_R_DANE_TLSA_BAD_CERTIFICATE_USAGE: cint <comptime> = 184
global SSL_R_DANE_TLSA_BAD_DATA_LENGTH: cint <comptime> = 189
global SSL_R_DANE_TLSA_BAD_DIGEST_LENGTH: cint <comptime> = 192
global SSL_R_DANE_TLSA_BAD_MATCHING_TYPE: cint <comptime> = 200
global SSL_R_DANE_TLSA_BAD_PUBLIC_KEY: cint <comptime> = 201
global SSL_R_DANE_TLSA_BAD_SELECTOR: cint <comptime> = 202
global SSL_R_DANE_TLSA_NULL_DATA: cint <comptime> = 203
global SSL_R_DATA_BETWEEN_CCS_AND_FINISHED: cint <comptime> = 145
global SSL_R_DATA_LENGTH_TOO_LONG: cint <comptime> = 146
global SSL_R_DECRYPTION_FAILED: cint <comptime> = 147
global SSL_R_DECRYPTION_FAILED_OR_BAD_RECORD_MAC: cint <comptime> = 281
global SSL_R_DH_KEY_TOO_SMALL: cint <comptime> = 394
global SSL_R_DH_PUBLIC_VALUE_LENGTH_IS_WRONG: cint <comptime> = 148
global SSL_R_DIGEST_CHECK_FAILED: cint <comptime> = 149
global SSL_R_DOMAIN_USE_ONLY: cint <comptime> = 422
global SSL_R_DTLS_MESSAGE_TOO_BIG: cint <comptime> = 334
global SSL_R_DUPLICATE_COMPRESSION_ID: cint <comptime> = 309
global SSL_R_ECC_CERT_NOT_FOR_SIGNING: cint <comptime> = 318
global SSL_R_ECDH_REQUIRED_FOR_SUITEB_MODE: cint <comptime> = 374
global SSL_R_EE_KEY_TOO_SMALL: cint <comptime> = 399
global SSL_R_EMPTY_RAW_PUBLIC_KEY: cint <comptime> = 349
global SSL_R_EMPTY_SRTP_PROTECTION_PROFILE_LIST: cint <comptime> = 354
global SSL_R_ENCRYPTED_LENGTH_TOO_LONG: cint <comptime> = 150
global SSL_R_ERROR_IN_RECEIVED_CIPHER_LIST: cint <comptime> = 151
global SSL_R_ERROR_IN_SYSTEM_DEFAULT_CONFIG: cint <comptime> = 419
global SSL_R_ERROR_SETTING_TLSA_BASE_DOMAIN: cint <comptime> = 204
global SSL_R_EXCEEDS_MAX_FRAGMENT_SIZE: cint <comptime> = 194
global SSL_R_EXCESSIVE_MESSAGE_SIZE: cint <comptime> = 152
global SSL_R_EXTENSION_NOT_RECEIVED: cint <comptime> = 279
global SSL_R_EXTRA_DATA_IN_MESSAGE: cint <comptime> = 153
global SSL_R_EXT_LENGTH_MISMATCH: cint <comptime> = 163
global SSL_R_FAILED_TO_GET_PARAMETER: cint <comptime> = 316
global SSL_R_FAILED_TO_INIT_ASYNC: cint <comptime> = 405
global SSL_R_FEATURE_NEGOTIATION_NOT_COMPLETE: cint <comptime> = 417
global SSL_R_FEATURE_NOT_RENEGOTIABLE: cint <comptime> = 413
global SSL_R_FRAGMENTED_CLIENT_HELLO: cint <comptime> = 401
global SSL_R_GOT_A_FIN_BEFORE_A_CCS: cint <comptime> = 154
global SSL_R_HTTPS_PROXY_REQUEST: cint <comptime> = 155
global SSL_R_HTTP_REQUEST: cint <comptime> = 156
global SSL_R_ILLEGAL_POINT_COMPRESSION: cint <comptime> = 162
global SSL_R_ILLEGAL_SUITEB_DIGEST: cint <comptime> = 380
global SSL_R_INAPPROPRIATE_FALLBACK: cint <comptime> = 373
global SSL_R_INCONSISTENT_COMPRESSION: cint <comptime> = 340
global SSL_R_INCONSISTENT_EARLY_DATA_ALPN: cint <comptime> = 222
global SSL_R_INCONSISTENT_EARLY_DATA_SNI: cint <comptime> = 231
global SSL_R_INCONSISTENT_EXTMS: cint <comptime> = 104
global SSL_R_INSUFFICIENT_SECURITY: cint <comptime> = 241
global SSL_R_INVALID_ALERT: cint <comptime> = 205
global SSL_R_INVALID_CCS_MESSAGE: cint <comptime> = 260
global SSL_R_INVALID_CERTIFICATE_OR_ALG: cint <comptime> = 238
global SSL_R_INVALID_COMMAND: cint <comptime> = 280
global SSL_R_INVALID_COMPRESSION_ALGORITHM: cint <comptime> = 341
global SSL_R_INVALID_CONFIG: cint <comptime> = 283
global SSL_R_INVALID_CONFIGURATION_NAME: cint <comptime> = 113
global SSL_R_INVALID_CONTEXT: cint <comptime> = 282
global SSL_R_INVALID_CT_VALIDATION_TYPE: cint <comptime> = 212
global SSL_R_INVALID_KEY_UPDATE_TYPE: cint <comptime> = 120
global SSL_R_INVALID_MAX_EARLY_DATA: cint <comptime> = 174
global SSL_R_INVALID_NULL_CMD_NAME: cint <comptime> = 385
global SSL_R_INVALID_RAW_PUBLIC_KEY: cint <comptime> = 350
global SSL_R_INVALID_RECORD: cint <comptime> = 317
global SSL_R_INVALID_SEQUENCE_NUMBER: cint <comptime> = 402
global SSL_R_INVALID_SERVERINFO_DATA: cint <comptime> = 388
global SSL_R_INVALID_SESSION_ID: cint <comptime> = 999
global SSL_R_INVALID_SRP_USERNAME: cint <comptime> = 357
global SSL_R_INVALID_STATUS_RESPONSE: cint <comptime> = 328
global SSL_R_INVALID_TICKET_KEYS_LENGTH: cint <comptime> = 325
global SSL_R_LEGACY_SIGALG_DISALLOWED_OR_UNSUPPORTED: cint <comptime> = 333
global SSL_R_LENGTH_MISMATCH: cint <comptime> = 159
global SSL_R_LENGTH_TOO_LONG: cint <comptime> = 404
global SSL_R_LENGTH_TOO_SHORT: cint <comptime> = 160
global SSL_R_LIBRARY_BUG: cint <comptime> = 274
global SSL_R_LIBRARY_HAS_NO_CIPHERS: cint <comptime> = 161
global SSL_R_LISTENER_USE_ONLY: cint <comptime> = 421
global SSL_R_MAXIMUM_ENCRYPTED_PKTS_REACHED: cint <comptime> = 395
global SSL_R_MISSING_DSA_SIGNING_CERT: cint <comptime> = 165
global SSL_R_MISSING_ECDSA_SIGNING_CERT: cint <comptime> = 381
global SSL_R_MISSING_FATAL: cint <comptime> = 256
global SSL_R_MISSING_PARAMETERS: cint <comptime> = 290
global SSL_R_MISSING_PSK_KEX_MODES_EXTENSION: cint <comptime> = 310
global SSL_R_MISSING_QUIC_TLS_FUNCTIONS: cint <comptime> = 423
global SSL_R_MISSING_RSA_CERTIFICATE: cint <comptime> = 168
global SSL_R_MISSING_RSA_ENCRYPTING_CERT: cint <comptime> = 169
global SSL_R_MISSING_RSA_SIGNING_CERT: cint <comptime> = 170
global SSL_R_MISSING_SIGALGS_EXTENSION: cint <comptime> = 112
global SSL_R_MISSING_SIGNING_CERT: cint <comptime> = 221
global SSL_R_MISSING_SRP_PARAM: cint <comptime> = 358
global SSL_R_MISSING_SUPPORTED_GROUPS_EXTENSION: cint <comptime> = 209
global SSL_R_MISSING_SUPPORTED_VERSIONS_EXTENSION: cint <comptime> = 420
global SSL_R_MISSING_TMP_DH_KEY: cint <comptime> = 171
global SSL_R_MISSING_TMP_ECDH_KEY: cint <comptime> = 311
global SSL_R_MIXED_HANDSHAKE_AND_NON_HANDSHAKE_DATA: cint <comptime> = 293
global SSL_R_NOT_ON_RECORD_BOUNDARY: cint <comptime> = 182
global SSL_R_NOT_REPLACING_CERTIFICATE: cint <comptime> = 289
global SSL_R_NOT_SERVER: cint <comptime> = 284
global SSL_R_NO_APPLICATION_PROTOCOL: cint <comptime> = 235
global SSL_R_NO_CERTIFICATES_RETURNED: cint <comptime> = 176
global SSL_R_NO_CERTIFICATE_ASSIGNED: cint <comptime> = 177
global SSL_R_NO_CERTIFICATE_SET: cint <comptime> = 179
global SSL_R_NO_CHANGE_FOLLOWING_HRR: cint <comptime> = 214
global SSL_R_NO_CIPHERS_AVAILABLE: cint <comptime> = 181
global SSL_R_NO_CIPHERS_SPECIFIED: cint <comptime> = 183
global SSL_R_NO_CIPHER_MATCH: cint <comptime> = 185
global SSL_R_NO_CLIENT_CERT_METHOD: cint <comptime> = 331
global SSL_R_NO_COMPRESSION_SPECIFIED: cint <comptime> = 187
global SSL_R_NO_COOKIE_CALLBACK_SET: cint <comptime> = 287
global SSL_R_NO_GOST_CERTIFICATE_SENT_BY_PEER: cint <comptime> = 330
global SSL_R_NO_METHOD_SPECIFIED: cint <comptime> = 188
global SSL_R_NO_PEM_EXTENSIONS: cint <comptime> = 389
global SSL_R_NO_PRIVATE_KEY_ASSIGNED: cint <comptime> = 190
global SSL_R_NO_PROTOCOLS_AVAILABLE: cint <comptime> = 191
global SSL_R_NO_RENEGOTIATION: cint <comptime> = 339
global SSL_R_NO_REQUIRED_DIGEST: cint <comptime> = 324
global SSL_R_NO_SHARED_CIPHER: cint <comptime> = 193
global SSL_R_NO_SHARED_GROUPS: cint <comptime> = 410
global SSL_R_NO_SHARED_SIGNATURE_ALGORITHMS: cint <comptime> = 376
global SSL_R_NO_SRTP_PROFILES: cint <comptime> = 359
global SSL_R_NO_STREAM: cint <comptime> = 355
global SSL_R_NO_SUITABLE_DIGEST_ALGORITHM: cint <comptime> = 297
global SSL_R_NO_SUITABLE_GROUPS: cint <comptime> = 295
global SSL_R_NO_SUITABLE_KEY_SHARE: cint <comptime> = 101
global SSL_R_NO_SUITABLE_RECORD_LAYER: cint <comptime> = 322
global SSL_R_NO_SUITABLE_SIGNATURE_ALGORITHM: cint <comptime> = 118
global SSL_R_NO_VALID_SCTS: cint <comptime> = 216
global SSL_R_NO_VERIFY_COOKIE_CALLBACK: cint <comptime> = 403
global SSL_R_NULL_SSL_CTX: cint <comptime> = 195
global SSL_R_NULL_SSL_METHOD_PASSED: cint <comptime> = 196
global SSL_R_OCSP_CALLBACK_FAILURE: cint <comptime> = 305
global SSL_R_OLD_SESSION_CIPHER_NOT_RETURNED: cint <comptime> = 197
global SSL_R_OLD_SESSION_COMPRESSION_ALGORITHM_NOT_RETURNED: cint <comptime> = 344
global SSL_R_OVERFLOW_ERROR: cint <comptime> = 237
global SSL_R_PACKET_LENGTH_TOO_LONG: cint <comptime> = 198
global SSL_R_PARSE_TLSEXT: cint <comptime> = 227
global SSL_R_PATH_TOO_LONG: cint <comptime> = 270
global SSL_R_PEER_DID_NOT_RETURN_A_CERTIFICATE: cint <comptime> = 199
global SSL_R_PEM_NAME_BAD_PREFIX: cint <comptime> = 391
global SSL_R_PEM_NAME_TOO_SHORT: cint <comptime> = 392
global SSL_R_PIPELINE_FAILURE: cint <comptime> = 406
global SSL_R_POLL_REQUEST_NOT_SUPPORTED: cint <comptime> = 418
global SSL_R_POST_HANDSHAKE_AUTH_ENCODING_ERR: cint <comptime> = 278
global SSL_R_PRIVATE_KEY_MISMATCH: cint <comptime> = 288
global SSL_R_PROTOCOL_IS_SHUTDOWN: cint <comptime> = 207
global SSL_R_PSK_IDENTITY_NOT_FOUND: cint <comptime> = 223
global SSL_R_PSK_NO_CLIENT_CB: cint <comptime> = 224
global SSL_R_PSK_NO_SERVER_CB: cint <comptime> = 225
global SSL_R_QUIC_HANDSHAKE_LAYER_ERROR: cint <comptime> = 393
global SSL_R_QUIC_NETWORK_ERROR: cint <comptime> = 387
global SSL_R_QUIC_PROTOCOL_ERROR: cint <comptime> = 382
global SSL_R_READ_BIO_NOT_SET: cint <comptime> = 211
global SSL_R_READ_TIMEOUT_EXPIRED: cint <comptime> = 312
global SSL_R_RECORDS_NOT_RELEASED: cint <comptime> = 321
global SSL_R_RECORD_LAYER_FAILURE: cint <comptime> = 313
global SSL_R_RECORD_LENGTH_MISMATCH: cint <comptime> = 213
global SSL_R_RECORD_TOO_SMALL: cint <comptime> = 298
global SSL_R_REMOTE_PEER_ADDRESS_NOT_SET: cint <comptime> = 346
global SSL_R_RENEGOTIATE_EXT_TOO_LONG: cint <comptime> = 335
global SSL_R_RENEGOTIATION_ENCODING_ERR: cint <comptime> = 336
global SSL_R_RENEGOTIATION_MISMATCH: cint <comptime> = 337
global SSL_R_REQUEST_PENDING: cint <comptime> = 285
global SSL_R_REQUEST_SENT: cint <comptime> = 286
global SSL_R_REQUIRED_CIPHER_MISSING: cint <comptime> = 215
global SSL_R_REQUIRED_COMPRESSION_ALGORITHM_MISSING: cint <comptime> = 342
global SSL_R_SCSV_RECEIVED_WHEN_RENEGOTIATING: cint <comptime> = 345
global SSL_R_SCT_VERIFICATION_FAILED: cint <comptime> = 208
global SSL_R_SEQUENCE_CTR_WRAPPED: cint <comptime> = 327
global SSL_R_SERVERHELLO_TLSEXT: cint <comptime> = 275
global SSL_R_SESSION_ID_CONTEXT_UNINITIALIZED: cint <comptime> = 277
global SSL_R_SHUTDOWN_WHILE_IN_INIT: cint <comptime> = 407
global SSL_R_SIGNATURE_ALGORITHMS_ERROR: cint <comptime> = 360
global SSL_R_SIGNATURE_FOR_NON_SIGNING_CERTIFICATE: cint <comptime> = 220
global SSL_R_SRP_A_CALC: cint <comptime> = 361
global SSL_R_SRTP_COULD_NOT_ALLOCATE_PROFILES: cint <comptime> = 362
global SSL_R_SRTP_PROTECTION_PROFILE_LIST_TOO_LONG: cint <comptime> = 363
global SSL_R_SRTP_UNKNOWN_PROTECTION_PROFILE: cint <comptime> = 364
global SSL_R_SSL3_EXT_INVALID_MAX_FRAGMENT_LENGTH: cint <comptime> = 232
global SSL_R_SSL3_EXT_INVALID_SERVERNAME: cint <comptime> = 319
global SSL_R_SSL3_EXT_INVALID_SERVERNAME_TYPE: cint <comptime> = 320
global SSL_R_SSL3_SESSION_ID_TOO_LONG: cint <comptime> = 300
global SSL_R_SSLV3_ALERT_BAD_CERTIFICATE: cint <comptime> = 1042
global SSL_R_SSLV3_ALERT_BAD_RECORD_MAC: cint <comptime> = 1020
global SSL_R_SSLV3_ALERT_CERTIFICATE_EXPIRED: cint <comptime> = 1045
global SSL_R_SSLV3_ALERT_CERTIFICATE_REVOKED: cint <comptime> = 1044
global SSL_R_SSLV3_ALERT_CERTIFICATE_UNKNOWN: cint <comptime> = 1046
global SSL_R_SSLV3_ALERT_DECOMPRESSION_FAILURE: cint <comptime> = 1030
global SSL_R_SSLV3_ALERT_HANDSHAKE_FAILURE: cint <comptime> = 1040
global SSL_R_SSLV3_ALERT_ILLEGAL_PARAMETER: cint <comptime> = 1047
global SSL_R_SSLV3_ALERT_NO_CERTIFICATE: cint <comptime> = 1041
global SSL_R_SSLV3_ALERT_UNEXPECTED_MESSAGE: cint <comptime> = 1010
global SSL_R_SSLV3_ALERT_UNSUPPORTED_CERTIFICATE: cint <comptime> = 1043
global SSL_R_SSL_COMMAND_SECTION_EMPTY: cint <comptime> = 117
global SSL_R_SSL_COMMAND_SECTION_NOT_FOUND: cint <comptime> = 125
global SSL_R_SSL_CTX_HAS_NO_DEFAULT_SSL_VERSION: cint <comptime> = 228
global SSL_R_SSL_HANDSHAKE_FAILURE: cint <comptime> = 229
global SSL_R_SSL_LIBRARY_HAS_NO_CIPHERS: cint <comptime> = 230
global SSL_R_SSL_NEGATIVE_LENGTH: cint <comptime> = 372
global SSL_R_SSL_SECTION_EMPTY: cint <comptime> = 126
global SSL_R_SSL_SECTION_NOT_FOUND: cint <comptime> = 136
global SSL_R_SSL_SESSION_ID_CALLBACK_FAILED: cint <comptime> = 301
global SSL_R_SSL_SESSION_ID_CONFLICT: cint <comptime> = 302
global SSL_R_SSL_SESSION_ID_CONTEXT_TOO_LONG: cint <comptime> = 273
global SSL_R_SSL_SESSION_ID_HAS_BAD_LENGTH: cint <comptime> = 303
global SSL_R_SSL_SESSION_ID_TOO_LONG: cint <comptime> = 408
global SSL_R_SSL_SESSION_VERSION_MISMATCH: cint <comptime> = 210
global SSL_R_STILL_IN_INIT: cint <comptime> = 121
global SSL_R_STREAM_COUNT_LIMITED: cint <comptime> = 411
global SSL_R_STREAM_FINISHED: cint <comptime> = 365
global SSL_R_STREAM_RECV_ONLY: cint <comptime> = 366
global SSL_R_STREAM_RESET: cint <comptime> = 375
global SSL_R_STREAM_SEND_ONLY: cint <comptime> = 379
global SSL_R_TLSV13_ALERT_CERTIFICATE_REQUIRED: cint <comptime> = 1116
global SSL_R_TLSV13_ALERT_MISSING_EXTENSION: cint <comptime> = 1109
global SSL_R_TLSV1_ALERT_ACCESS_DENIED: cint <comptime> = 1049
global SSL_R_TLSV1_ALERT_DECODE_ERROR: cint <comptime> = 1050
global SSL_R_TLSV1_ALERT_DECRYPTION_FAILED: cint <comptime> = 1021
global SSL_R_TLSV1_ALERT_DECRYPT_ERROR: cint <comptime> = 1051
global SSL_R_TLSV1_ALERT_EXPORT_RESTRICTION: cint <comptime> = 1060
global SSL_R_TLSV1_ALERT_INAPPROPRIATE_FALLBACK: cint <comptime> = 1086
global SSL_R_TLSV1_ALERT_INSUFFICIENT_SECURITY: cint <comptime> = 1071
global SSL_R_TLSV1_ALERT_INTERNAL_ERROR: cint <comptime> = 1080
global SSL_R_TLSV1_ALERT_NO_APPLICATION_PROTOCOL: cint <comptime> = 1120
global SSL_R_TLSV1_ALERT_NO_RENEGOTIATION: cint <comptime> = 1100
global SSL_R_TLSV1_ALERT_PROTOCOL_VERSION: cint <comptime> = 1070
global SSL_R_TLSV1_ALERT_RECORD_OVERFLOW: cint <comptime> = 1022
global SSL_R_TLSV1_ALERT_UNKNOWN_CA: cint <comptime> = 1048
global SSL_R_TLSV1_ALERT_UNKNOWN_PSK_IDENTITY: cint <comptime> = 1115
global SSL_R_TLSV1_ALERT_USER_CANCELLED: cint <comptime> = 1090
global SSL_R_TLSV1_BAD_CERTIFICATE_HASH_VALUE: cint <comptime> = 1114
global SSL_R_TLSV1_BAD_CERTIFICATE_STATUS_RESPONSE: cint <comptime> = 1113
global SSL_R_TLSV1_CERTIFICATE_UNOBTAINABLE: cint <comptime> = 1111
global SSL_R_TLSV1_UNRECOGNIZED_NAME: cint <comptime> = 1112
global SSL_R_TLSV1_UNSUPPORTED_EXTENSION: cint <comptime> = 1110
global SSL_R_TLS_ILLEGAL_EXPORTER_LABEL: cint <comptime> = 367
global SSL_R_TLS_INVALID_ECPOINTFORMAT_LIST: cint <comptime> = 157
global SSL_R_TOO_MANY_KEY_UPDATES: cint <comptime> = 132
global SSL_R_TOO_MANY_WARN_ALERTS: cint <comptime> = 409
global SSL_R_TOO_MUCH_EARLY_DATA: cint <comptime> = 164
global SSL_R_UNABLE_TO_FIND_ECDH_PARAMETERS: cint <comptime> = 314
global SSL_R_UNABLE_TO_FIND_PUBLIC_KEY_PARAMETERS: cint <comptime> = 239
global SSL_R_UNABLE_TO_LOAD_SSL3_MD5_ROUTINES: cint <comptime> = 242
global SSL_R_UNABLE_TO_LOAD_SSL3_SHA1_ROUTINES: cint <comptime> = 243
global SSL_R_UNEXPECTED_CCS_MESSAGE: cint <comptime> = 262
global SSL_R_UNEXPECTED_END_OF_EARLY_DATA: cint <comptime> = 178
global SSL_R_UNEXPECTED_EOF_WHILE_READING: cint <comptime> = 294
global SSL_R_UNEXPECTED_MESSAGE: cint <comptime> = 244
global SSL_R_UNEXPECTED_RECORD: cint <comptime> = 245
global SSL_R_UNINITIALIZED: cint <comptime> = 276
global SSL_R_UNKNOWN_ALERT_TYPE: cint <comptime> = 246
global SSL_R_UNKNOWN_CERTIFICATE_TYPE: cint <comptime> = 247
global SSL_R_UNKNOWN_CIPHER_RETURNED: cint <comptime> = 248
global SSL_R_UNKNOWN_CIPHER_TYPE: cint <comptime> = 249
global SSL_R_UNKNOWN_CMD_NAME: cint <comptime> = 386
global SSL_R_UNKNOWN_COMMAND: cint <comptime> = 139
global SSL_R_UNKNOWN_DIGEST: cint <comptime> = 368
global SSL_R_UNKNOWN_KEY_EXCHANGE_TYPE: cint <comptime> = 250
global SSL_R_UNKNOWN_MANDATORY_PARAMETER: cint <comptime> = 323
global SSL_R_UNKNOWN_PKEY_TYPE: cint <comptime> = 251
global SSL_R_UNKNOWN_PROTOCOL: cint <comptime> = 252
global SSL_R_UNKNOWN_SSL_VERSION: cint <comptime> = 254
global SSL_R_UNKNOWN_STATE: cint <comptime> = 255
global SSL_R_UNSAFE_LEGACY_RENEGOTIATION_DISABLED: cint <comptime> = 338
global SSL_R_UNSOLICITED_EXTENSION: cint <comptime> = 217
global SSL_R_UNSUPPORTED_COMPRESSION_ALGORITHM: cint <comptime> = 257
global SSL_R_UNSUPPORTED_CONFIG_VALUE: cint <comptime> = 414
global SSL_R_UNSUPPORTED_CONFIG_VALUE_CLASS: cint <comptime> = 415
global SSL_R_UNSUPPORTED_CONFIG_VALUE_OP: cint <comptime> = 416
global SSL_R_UNSUPPORTED_ELLIPTIC_CURVE: cint <comptime> = 315
global SSL_R_UNSUPPORTED_PROTOCOL: cint <comptime> = 258
global SSL_R_UNSUPPORTED_SSL_VERSION: cint <comptime> = 259
global SSL_R_UNSUPPORTED_STATUS_TYPE: cint <comptime> = 329
global SSL_R_UNSUPPORTED_WRITE_FLAG: cint <comptime> = 412
global SSL_R_USE_SRTP_NOT_NEGOTIATED: cint <comptime> = 369
global SSL_R_VERSION_TOO_HIGH: cint <comptime> = 166
global SSL_R_VERSION_TOO_LOW: cint <comptime> = 396
global SSL_R_WRONG_CERTIFICATE_TYPE: cint <comptime> = 383
global SSL_R_WRONG_CIPHER_RETURNED: cint <comptime> = 261
global SSL_R_WRONG_CURVE: cint <comptime> = 378
global SSL_R_WRONG_RPK_TYPE: cint <comptime> = 351
global SSL_R_WRONG_SIGNATURE_LENGTH: cint <comptime> = 264
global SSL_R_WRONG_SIGNATURE_SIZE: cint <comptime> = 265
global SSL_R_WRONG_SIGNATURE_TYPE: cint <comptime> = 370
global SSL_R_WRONG_SSL_VERSION: cint <comptime> = 266
global SSL_R_WRONG_VERSION_NUMBER: cint <comptime> = 267
global SSL_R_X509_LIB: cint <comptime> = 268
global SSL_R_X509_VERIFICATION_SETUP_PROBLEMS: cint <comptime> = 269
global SSL_MAX_MASTER_KEY_LENGTH: cint <comptime> = 48
global SSL3_VERSION: cint <comptime> = 768
global TLS1_VERSION: cint <comptime> = 769
global TLS1_1_VERSION: cint <comptime> = 770
global TLS1_2_VERSION: cint <comptime> = 771
global TLS1_3_VERSION: cint <comptime> = 772
global SSL_SESSION_ASN1_VERSION: cint <comptime> = 1
global SSL_MAX_SSL_SESSION_ID_LENGTH: cint <comptime> = 32
global SSL_MAX_SID_CTX_LENGTH: cint <comptime> = 32
global SSL_MIN_RSA_MODULUS_LENGTH_IN_BYTES: cint <comptime> = 64
global SSL_MAX_KEY_ARG_LENGTH: cint <comptime> = 8
global SSL_MAX_PIPELINES: cint <comptime> = 32
global SSL_TXT_LOW: cstring <comptime> = "LOW"
global SSL_TXT_MEDIUM: cstring <comptime> = "MEDIUM"
global SSL_TXT_HIGH: cstring <comptime> = "HIGH"
global SSL_TXT_FIPS: cstring <comptime> = "FIPS"
global SSL_TXT_aNULL: cstring <comptime> = "aNULL"
global SSL_TXT_eNULL: cstring <comptime> = "eNULL"
global SSL_TXT_NULL: cstring <comptime> = "NULL"
global SSL_TXT_kRSA: cstring <comptime> = "kRSA"
global SSL_TXT_kDHr: cstring <comptime> = "kDHr"
global SSL_TXT_kDHd: cstring <comptime> = "kDHd"
global SSL_TXT_kDH: cstring <comptime> = "kDH"
global SSL_TXT_kEDH: cstring <comptime> = "kEDH"
global SSL_TXT_kDHE: cstring <comptime> = "kDHE"
global SSL_TXT_kECDHr: cstring <comptime> = "kECDHr"
global SSL_TXT_kECDHe: cstring <comptime> = "kECDHe"
global SSL_TXT_kECDH: cstring <comptime> = "kECDH"
global SSL_TXT_kEECDH: cstring <comptime> = "kEECDH"
global SSL_TXT_kECDHE: cstring <comptime> = "kECDHE"
global SSL_TXT_kPSK: cstring <comptime> = "kPSK"
global SSL_TXT_kRSAPSK: cstring <comptime> = "kRSAPSK"
global SSL_TXT_kECDHEPSK: cstring <comptime> = "kECDHEPSK"
global SSL_TXT_kDHEPSK: cstring <comptime> = "kDHEPSK"
global SSL_TXT_kGOST: cstring <comptime> = "kGOST"
global SSL_TXT_kGOST18: cstring <comptime> = "kGOST18"
global SSL_TXT_kSRP: cstring <comptime> = "kSRP"
global SSL_TXT_aRSA: cstring <comptime> = "aRSA"
global SSL_TXT_aDSS: cstring <comptime> = "aDSS"
global SSL_TXT_aDH: cstring <comptime> = "aDH"
global SSL_TXT_aECDH: cstring <comptime> = "aECDH"
global SSL_TXT_aECDSA: cstring <comptime> = "aECDSA"
global SSL_TXT_aPSK: cstring <comptime> = "aPSK"
global SSL_TXT_aGOST94: cstring <comptime> = "aGOST94"
global SSL_TXT_aGOST01: cstring <comptime> = "aGOST01"
global SSL_TXT_aGOST12: cstring <comptime> = "aGOST12"
global SSL_TXT_aGOST: cstring <comptime> = "aGOST"
global SSL_TXT_aSRP: cstring <comptime> = "aSRP"
global SSL_TXT_DSS: cstring <comptime> = "DSS"
global SSL_TXT_DH: cstring <comptime> = "DH"
global SSL_TXT_DHE: cstring <comptime> = "DHE"
global SSL_TXT_EDH: cstring <comptime> = "EDH"
global SSL_TXT_ADH: cstring <comptime> = "ADH"
global SSL_TXT_RSA: cstring <comptime> = "RSA"
global SSL_TXT_ECDH: cstring <comptime> = "ECDH"
global SSL_TXT_EECDH: cstring <comptime> = "EECDH"
global SSL_TXT_ECDHE: cstring <comptime> = "ECDHE"
global SSL_TXT_AECDH: cstring <comptime> = "AECDH"
global SSL_TXT_ECDSA: cstring <comptime> = "ECDSA"
global SSL_TXT_PSK: cstring <comptime> = "PSK"
global SSL_TXT_SRP: cstring <comptime> = "SRP"
global SSL_TXT_DES: cstring <comptime> = "DES"
global SSL_TXT_3DES: cstring <comptime> = "3DES"
global SSL_TXT_RC4: cstring <comptime> = "RC4"
global SSL_TXT_RC2: cstring <comptime> = "RC2"
global SSL_TXT_IDEA: cstring <comptime> = "IDEA"
global SSL_TXT_SEED: cstring <comptime> = "SEED"
global SSL_TXT_AES128: cstring <comptime> = "AES128"
global SSL_TXT_AES256: cstring <comptime> = "AES256"
global SSL_TXT_AES: cstring <comptime> = "AES"
global SSL_TXT_AES_GCM: cstring <comptime> = "AESGCM"
global SSL_TXT_AES_CCM: cstring <comptime> = "AESCCM"
global SSL_TXT_AES_CCM_8: cstring <comptime> = "AESCCM8"
global SSL_TXT_CAMELLIA128: cstring <comptime> = "CAMELLIA128"
global SSL_TXT_CAMELLIA256: cstring <comptime> = "CAMELLIA256"
global SSL_TXT_CAMELLIA: cstring <comptime> = "CAMELLIA"
global SSL_TXT_CHACHA20: cstring <comptime> = "CHACHA20"
global SSL_TXT_GOST: cstring <comptime> = "GOST89"
global SSL_TXT_ARIA: cstring <comptime> = "ARIA"
global SSL_TXT_ARIA_GCM: cstring <comptime> = "ARIAGCM"
global SSL_TXT_ARIA128: cstring <comptime> = "ARIA128"
global SSL_TXT_ARIA256: cstring <comptime> = "ARIA256"
global SSL_TXT_GOST2012_GOST8912_GOST8912: cstring <comptime> = "GOST2012-GOST8912-GOST8912"
global SSL_TXT_CBC: cstring <comptime> = "CBC"
global SSL_TXT_MD5: cstring <comptime> = "MD5"
global SSL_TXT_SHA1: cstring <comptime> = "SHA1"
global SSL_TXT_SHA: cstring <comptime> = "SHA"
global SSL_TXT_GOST94: cstring <comptime> = "GOST94"
global SSL_TXT_GOST89MAC: cstring <comptime> = "GOST89MAC"
global SSL_TXT_GOST12: cstring <comptime> = "GOST12"
global SSL_TXT_GOST89MAC12: cstring <comptime> = "GOST89MAC12"
global SSL_TXT_SHA256: cstring <comptime> = "SHA256"
global SSL_TXT_SHA384: cstring <comptime> = "SHA384"
global SSL_TXT_SSLV3: cstring <comptime> = "SSLv3"
global SSL_TXT_TLSV1: cstring <comptime> = "TLSv1"
global SSL_TXT_TLSV1_1: cstring <comptime> = "TLSv1.1"
global SSL_TXT_TLSV1_2: cstring <comptime> = "TLSv1.2"
global SSL_TXT_ALL: cstring <comptime> = "ALL"
global SSL_TXT_CMPALL: cstring <comptime> = "COMPLEMENTOFALL"
global SSL_TXT_CMPDEF: cstring <comptime> = "COMPLEMENTOFDEFAULT"
global SSL_DEFAULT_CIPHER_LIST: cstring <comptime> = "ALL:!COMPLEMENTOFDEFAULT:!eNULL"
global TLS_DEFAULT_CIPHERSUITES: cstring <comptime> = "TLS_AES_256_GCM_SHA384:"
global SSL_SENT_SHUTDOWN: cint <comptime> = 1
global SSL_RECEIVED_SHUTDOWN: cint <comptime> = 2
global SSL_FILETYPE_ASN1: cint <comptime> = 2
global SSL_FILETYPE_PEM: cint <comptime> = 1
global SSL_EXT_TLS_ONLY: cint <comptime> = 1
global SSL_EXT_DTLS_ONLY: cint <comptime> = 2
global SSL_EXT_TLS_IMPLEMENTATION_ONLY: cint <comptime> = 4
global SSL_EXT_SSL3_ALLOWED: cint <comptime> = 8
global SSL_EXT_TLS1_2_AND_BELOW_ONLY: cint <comptime> = 16
global SSL_EXT_TLS1_3_ONLY: cint <comptime> = 32
global SSL_EXT_IGNORE_ON_RESUMPTION: cint <comptime> = 64
global SSL_EXT_CLIENT_HELLO: cint <comptime> = 128
global SSL_EXT_TLS1_2_SERVER_HELLO: cint <comptime> = 256
global SSL_EXT_TLS1_3_SERVER_HELLO: cint <comptime> = 512
global SSL_EXT_TLS1_3_ENCRYPTED_EXTENSIONS: cint <comptime> = 1024
global SSL_EXT_TLS1_3_HELLO_RETRY_REQUEST: cint <comptime> = 2048
global SSL_EXT_TLS1_3_CERTIFICATE: cint <comptime> = 4096
global SSL_EXT_TLS1_3_NEW_SESSION_TICKET: cint <comptime> = 8192
global SSL_EXT_TLS1_3_CERTIFICATE_REQUEST: cint <comptime> = 16384
global SSL_EXT_TLS1_3_CERTIFICATE_COMPRESSION: cint <comptime> = 32768
global SSL_EXT_TLS1_3_RAW_PUBLIC_KEY: cint <comptime> = 65536
global SSL_OP_MICROSOFT_SESS_ID_BUG: cint <comptime> = 0
global SSL_OP_NETSCAPE_CHALLENGE_BUG: cint <comptime> = 0
global SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG: cint <comptime> = 0
global SSL_OP_SSLREF2_REUSE_CERT_TYPE_BUG: cint <comptime> = 0
global SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER: cint <comptime> = 0
global SSL_OP_MSIE_SSLV2_RSA_PADDING: cint <comptime> = 0
global SSL_OP_SSLEAY_080_CLIENT_DH_BUG: cint <comptime> = 0
global SSL_OP_TLS_D5_BUG: cint <comptime> = 0
global SSL_OP_TLS_BLOCK_PADDING_BUG: cint <comptime> = 0
global SSL_OP_SINGLE_ECDH_USE: cint <comptime> = 0
global SSL_OP_SINGLE_DH_USE: cint <comptime> = 0
global SSL_OP_EPHEMERAL_RSA: cint <comptime> = 0
global SSL_OP_NO_SSLv2: cint <comptime> = 0
global SSL_OP_PKCS1_CHECK_1: cint <comptime> = 0
global SSL_OP_PKCS1_CHECK_2: cint <comptime> = 0
global SSL_OP_NETSCAPE_CA_DN_BUG: cint <comptime> = 0
global SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG: cint <comptime> = 0
global SSL_MODE_ENABLE_PARTIAL_WRITE: cuint <comptime> = 1
global SSL_MODE_ACCEPT_MOVING_WRITE_BUFFER: cuint <comptime> = 2
global SSL_MODE_AUTO_RETRY: cuint <comptime> = 4
global SSL_MODE_NO_AUTO_CHAIN: cuint <comptime> = 8
global SSL_MODE_RELEASE_BUFFERS: cuint <comptime> = 16
global SSL_MODE_SEND_CLIENTHELLO_TIME: cuint <comptime> = 32
global SSL_MODE_SEND_SERVERHELLO_TIME: cuint <comptime> = 64
global SSL_MODE_SEND_FALLBACK_SCSV: cuint <comptime> = 128
global SSL_MODE_ASYNC: cuint <comptime> = 256
global SSL_MODE_DTLS_SCTP_LABEL_LENGTH_BUG: cuint <comptime> = 1024
global SSL_CERT_FLAG_TLS_STRICT: cuint <comptime> = 1
global SSL_CERT_FLAG_SUITEB_128_LOS_ONLY: cint <comptime> = 65536
global SSL_CERT_FLAG_SUITEB_192_LOS: cint <comptime> = 131072
global SSL_CERT_FLAG_SUITEB_128_LOS: cint <comptime> = 196608
global SSL_CERT_FLAG_BROKEN_PROTOCOL: cint <comptime> = 268435456
global SSL_BUILD_CHAIN_FLAG_UNTRUSTED: cint <comptime> = 1
global SSL_BUILD_CHAIN_FLAG_NO_ROOT: cint <comptime> = 2
global SSL_BUILD_CHAIN_FLAG_CHECK: cint <comptime> = 4
global SSL_BUILD_CHAIN_FLAG_IGNORE_ERROR: cint <comptime> = 8
global SSL_BUILD_CHAIN_FLAG_CLEAR_ERROR: cint <comptime> = 16
global SSL_CONF_FLAG_CMDLINE: cint <comptime> = 1
global SSL_CONF_FLAG_FILE: cint <comptime> = 2
global SSL_CONF_FLAG_CLIENT: cint <comptime> = 4
global SSL_CONF_FLAG_SERVER: cint <comptime> = 8
global SSL_CONF_FLAG_SHOW_ERRORS: cint <comptime> = 16
global SSL_CONF_FLAG_CERTIFICATE: cint <comptime> = 32
global SSL_CONF_FLAG_REQUIRE_PRIVATE: cint <comptime> = 64
global SSL_CONF_TYPE_UNKNOWN: cint <comptime> = 0
global SSL_CONF_TYPE_STRING: cint <comptime> = 1
global SSL_CONF_TYPE_FILE: cint <comptime> = 2
global SSL_CONF_TYPE_DIR: cint <comptime> = 3
global SSL_CONF_TYPE_NONE: cint <comptime> = 4
global SSL_CONF_TYPE_STORE: cint <comptime> = 5
global SSL_COOKIE_LENGTH: cint <comptime> = 4096
global SSL_MAX_CERT_LIST_DEFAULT: cint <comptime> = 102400
global SSL_SESSION_CACHE_MAX_SIZE_DEFAULT: cint <comptime> = 20480
global SSL_SESS_CACHE_OFF: cint <comptime> = 0
global SSL_SESS_CACHE_CLIENT: cint <comptime> = 1
global SSL_SESS_CACHE_SERVER: cint <comptime> = 2
global SSL_SESS_CACHE_BOTH: cint <comptime> = 3
global SSL_SESS_CACHE_NO_AUTO_CLEAR: cint <comptime> = 128
global SSL_SESS_CACHE_NO_INTERNAL_LOOKUP: cint <comptime> = 256
global SSL_SESS_CACHE_NO_INTERNAL_STORE: cint <comptime> = 512
global SSL_SESS_CACHE_NO_INTERNAL: cint <comptime> = 768
global SSL_SESS_CACHE_UPDATE_TIME: cint <comptime> = 1024
global function SSL_CTX_set_npn_advertised_cb(s: *SSL_CTX, cb: SSL_CTX_npn_advertised_cb_func, arg: pointer): void <cimport,nodecl> end
global function SSL_CTX_set_npn_select_cb(s: *SSL_CTX, cb: SSL_CTX_npn_select_cb_func, arg: pointer): void <cimport,nodecl> end
global function SSL_get0_npn_negotiated(s: *SSL, data: **cuchar, len: *cuint): void <cimport,nodecl> end
global OPENSSL_NPN_UNSUPPORTED: cint <comptime> = 0
global OPENSSL_NPN_NEGOTIATED: cint <comptime> = 1
global OPENSSL_NPN_NO_OVERLAP: cint <comptime> = 2
global SSL_NOTHING: cint <comptime> = 1
global SSL_WRITING: cint <comptime> = 2
global SSL_READING: cint <comptime> = 3
global SSL_X509_LOOKUP: cint <comptime> = 4
global SSL_ASYNC_PAUSED: cint <comptime> = 5
global SSL_ASYNC_NO_JOBS: cint <comptime> = 6
global SSL_CLIENT_HELLO_CB: cint <comptime> = 7
global SSL_RETRY_VERIFY: cint <comptime> = 8
global SSL_MAC_FLAG_READ_MAC_STREAM: cint <comptime> = 1
global SSL_MAC_FLAG_WRITE_MAC_STREAM: cint <comptime> = 2
global SSL_MAC_FLAG_READ_MAC_TLSTREE: cint <comptime> = 4
global SSL_MAC_FLAG_WRITE_MAC_TLSTREE: cint <comptime> = 8
global SSL2_VERSION: cint <comptime> = 2
global SSL2_MT_CLIENT_HELLO: cint <comptime> = 1
global SSL3_CK_SCSV: cint <comptime> = 50331903
global SSL3_CK_FALLBACK_SCSV: cint <comptime> = 50353664
global SSL3_CK_RSA_NULL_MD5: cint <comptime> = 50331649
global SSL3_CK_RSA_NULL_SHA: cint <comptime> = 50331650
global SSL3_CK_RSA_RC4_40_MD5: cint <comptime> = 50331651
global SSL3_CK_RSA_RC4_128_MD5: cint <comptime> = 50331652
global SSL3_CK_RSA_RC4_128_SHA: cint <comptime> = 50331653
global SSL3_CK_RSA_RC2_40_MD5: cint <comptime> = 50331654
global SSL3_CK_RSA_IDEA_128_SHA: cint <comptime> = 50331655
global SSL3_CK_RSA_DES_40_CBC_SHA: cint <comptime> = 50331656
global SSL3_CK_RSA_DES_64_CBC_SHA: cint <comptime> = 50331657
global SSL3_CK_RSA_DES_192_CBC3_SHA: cint <comptime> = 50331658
global SSL3_CK_DH_DSS_DES_40_CBC_SHA: cint <comptime> = 50331659
global SSL3_CK_DH_DSS_DES_64_CBC_SHA: cint <comptime> = 50331660
global SSL3_CK_DH_DSS_DES_192_CBC3_SHA: cint <comptime> = 50331661
global SSL3_CK_DH_RSA_DES_40_CBC_SHA: cint <comptime> = 50331662
global SSL3_CK_DH_RSA_DES_64_CBC_SHA: cint <comptime> = 50331663
global SSL3_CK_DH_RSA_DES_192_CBC3_SHA: cint <comptime> = 50331664
global SSL3_CK_DHE_DSS_DES_40_CBC_SHA: cint <comptime> = 50331665
global SSL3_CK_EDH_DSS_DES_40_CBC_SHA: cint <comptime> = 50331665
global SSL3_CK_DHE_DSS_DES_64_CBC_SHA: cint <comptime> = 50331666
global SSL3_CK_EDH_DSS_DES_64_CBC_SHA: cint <comptime> = 50331666
global SSL3_CK_DHE_DSS_DES_192_CBC3_SHA: cint <comptime> = 50331667
global SSL3_CK_EDH_DSS_DES_192_CBC3_SHA: cint <comptime> = 50331667
global SSL3_CK_DHE_RSA_DES_40_CBC_SHA: cint <comptime> = 50331668
global SSL3_CK_EDH_RSA_DES_40_CBC_SHA: cint <comptime> = 50331668
global SSL3_CK_DHE_RSA_DES_64_CBC_SHA: cint <comptime> = 50331669
global SSL3_CK_EDH_RSA_DES_64_CBC_SHA: cint <comptime> = 50331669
global SSL3_CK_DHE_RSA_DES_192_CBC3_SHA: cint <comptime> = 50331670
global SSL3_CK_EDH_RSA_DES_192_CBC3_SHA: cint <comptime> = 50331670
global SSL3_CK_ADH_RC4_40_MD5: cint <comptime> = 50331671
global SSL3_CK_ADH_RC4_128_MD5: cint <comptime> = 50331672
global SSL3_CK_ADH_DES_40_CBC_SHA: cint <comptime> = 50331673
global SSL3_CK_ADH_DES_64_CBC_SHA: cint <comptime> = 50331674
global SSL3_CK_ADH_DES_192_CBC_SHA: cint <comptime> = 50331675
global SSL3_RFC_RSA_NULL_MD5: cstring <comptime> = "TLS_RSA_WITH_NULL_MD5"
global SSL3_RFC_RSA_NULL_SHA: cstring <comptime> = "TLS_RSA_WITH_NULL_SHA"
global SSL3_RFC_RSA_DES_192_CBC3_SHA: cstring <comptime> = "TLS_RSA_WITH_3DES_EDE_CBC_SHA"
global SSL3_RFC_DHE_DSS_DES_192_CBC3_SHA: cstring <comptime> = "TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA"
global SSL3_RFC_DHE_RSA_DES_192_CBC3_SHA: cstring <comptime> = "TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA"
global SSL3_RFC_ADH_DES_192_CBC_SHA: cstring <comptime> = "TLS_DH_anon_WITH_3DES_EDE_CBC_SHA"
global SSL3_RFC_RSA_IDEA_128_SHA: cstring <comptime> = "TLS_RSA_WITH_IDEA_CBC_SHA"
global SSL3_RFC_RSA_RC4_128_MD5: cstring <comptime> = "TLS_RSA_WITH_RC4_128_MD5"
global SSL3_RFC_RSA_RC4_128_SHA: cstring <comptime> = "TLS_RSA_WITH_RC4_128_SHA"
global SSL3_RFC_ADH_RC4_128_MD5: cstring <comptime> = "TLS_DH_anon_WITH_RC4_128_MD5"
global SSL3_TXT_RSA_NULL_MD5: cstring <comptime> = "NULL-MD5"
global SSL3_TXT_RSA_NULL_SHA: cstring <comptime> = "NULL-SHA"
global SSL3_TXT_RSA_RC4_40_MD5: cstring <comptime> = "EXP-RC4-MD5"
global SSL3_TXT_RSA_RC4_128_MD5: cstring <comptime> = "RC4-MD5"
global SSL3_TXT_RSA_RC4_128_SHA: cstring <comptime> = "RC4-SHA"
global SSL3_TXT_RSA_RC2_40_MD5: cstring <comptime> = "EXP-RC2-CBC-MD5"
global SSL3_TXT_RSA_IDEA_128_SHA: cstring <comptime> = "IDEA-CBC-SHA"
global SSL3_TXT_RSA_DES_40_CBC_SHA: cstring <comptime> = "EXP-DES-CBC-SHA"
global SSL3_TXT_RSA_DES_64_CBC_SHA: cstring <comptime> = "DES-CBC-SHA"
global SSL3_TXT_RSA_DES_192_CBC3_SHA: cstring <comptime> = "DES-CBC3-SHA"
global SSL3_TXT_DH_DSS_DES_40_CBC_SHA: cstring <comptime> = "EXP-DH-DSS-DES-CBC-SHA"
global SSL3_TXT_DH_DSS_DES_64_CBC_SHA: cstring <comptime> = "DH-DSS-DES-CBC-SHA"
global SSL3_TXT_DH_DSS_DES_192_CBC3_SHA: cstring <comptime> = "DH-DSS-DES-CBC3-SHA"
global SSL3_TXT_DH_RSA_DES_40_CBC_SHA: cstring <comptime> = "EXP-DH-RSA-DES-CBC-SHA"
global SSL3_TXT_DH_RSA_DES_64_CBC_SHA: cstring <comptime> = "DH-RSA-DES-CBC-SHA"
global SSL3_TXT_DH_RSA_DES_192_CBC3_SHA: cstring <comptime> = "DH-RSA-DES-CBC3-SHA"
global SSL3_TXT_DHE_DSS_DES_40_CBC_SHA: cstring <comptime> = "EXP-DHE-DSS-DES-CBC-SHA"
global SSL3_TXT_DHE_DSS_DES_64_CBC_SHA: cstring <comptime> = "DHE-DSS-DES-CBC-SHA"
global SSL3_TXT_DHE_DSS_DES_192_CBC3_SHA: cstring <comptime> = "DHE-DSS-DES-CBC3-SHA"
global SSL3_TXT_DHE_RSA_DES_40_CBC_SHA: cstring <comptime> = "EXP-DHE-RSA-DES-CBC-SHA"
global SSL3_TXT_DHE_RSA_DES_64_CBC_SHA: cstring <comptime> = "DHE-RSA-DES-CBC-SHA"
global SSL3_TXT_DHE_RSA_DES_192_CBC3_SHA: cstring <comptime> = "DHE-RSA-DES-CBC3-SHA"
global SSL3_TXT_EDH_DSS_DES_40_CBC_SHA: cstring <comptime> = "EXP-EDH-DSS-DES-CBC-SHA"
global SSL3_TXT_EDH_DSS_DES_64_CBC_SHA: cstring <comptime> = "EDH-DSS-DES-CBC-SHA"
global SSL3_TXT_EDH_DSS_DES_192_CBC3_SHA: cstring <comptime> = "EDH-DSS-DES-CBC3-SHA"
global SSL3_TXT_EDH_RSA_DES_40_CBC_SHA: cstring <comptime> = "EXP-EDH-RSA-DES-CBC-SHA"
global SSL3_TXT_EDH_RSA_DES_64_CBC_SHA: cstring <comptime> = "EDH-RSA-DES-CBC-SHA"
global SSL3_TXT_EDH_RSA_DES_192_CBC3_SHA: cstring <comptime> = "EDH-RSA-DES-CBC3-SHA"
global SSL3_TXT_ADH_RC4_40_MD5: cstring <comptime> = "EXP-ADH-RC4-MD5"
global SSL3_TXT_ADH_RC4_128_MD5: cstring <comptime> = "ADH-RC4-MD5"
global SSL3_TXT_ADH_DES_40_CBC_SHA: cstring <comptime> = "EXP-ADH-DES-CBC-SHA"
global SSL3_TXT_ADH_DES_64_CBC_SHA: cstring <comptime> = "ADH-DES-CBC-SHA"
global SSL3_TXT_ADH_DES_192_CBC_SHA: cstring <comptime> = "ADH-DES-CBC3-SHA"
global SSL3_SSL_SESSION_ID_LENGTH: cint <comptime> = 32
global SSL3_MAX_SSL_SESSION_ID_LENGTH: cint <comptime> = 32
global SSL3_MASTER_SECRET_SIZE: cint <comptime> = 48
global SSL3_RANDOM_SIZE: cint <comptime> = 32
global SSL3_SESSION_ID_SIZE: cint <comptime> = 32
global SSL3_RT_HEADER_LENGTH: cint <comptime> = 5
global SSL3_HM_HEADER_LENGTH: cint <comptime> = 4
global SSL3_ALIGN_PAYLOAD: cint <comptime> = 8
global SSL3_RT_MAX_MD_SIZE: cint <comptime> = 64
global SSL_RT_MAX_CIPHER_BLOCK_SIZE: cint <comptime> = 16
global SSL3_RT_MAX_EXTRA: cint <comptime> = 16384
global SSL3_RT_MAX_PLAIN_LENGTH: cint <comptime> = 16384
global SSL3_RT_MAX_COMPRESSED_OVERHEAD: cint <comptime> = 1024
global SSL3_RT_MAX_ENCRYPTED_OVERHEAD: cint <comptime> = 320
global SSL3_RT_MAX_TLS13_ENCRYPTED_OVERHEAD: cint <comptime> = 256
global SSL3_RT_SEND_MAX_ENCRYPTED_OVERHEAD: cint <comptime> = 80
global SSL3_RT_MAX_COMPRESSED_LENGTH: cint <comptime> = 17408
global SSL3_RT_MAX_ENCRYPTED_LENGTH: cint <comptime> = 17728
global SSL3_RT_MAX_TLS13_ENCRYPTED_LENGTH: cint <comptime> = 16640
global SSL3_RT_MAX_PACKET_SIZE: cint <comptime> = 17733
global SSL3_MD_CLIENT_FINISHED_CONST: cstring <comptime> = "CLNT"
global SSL3_MD_SERVER_FINISHED_CONST: cstring <comptime> = "SRVR"
global SSL3_VERSION_MAJOR: cint <comptime> = 3
global SSL3_VERSION_MINOR: cint <comptime> = 0
global SSL3_RT_CHANGE_CIPHER_SPEC: cint <comptime> = 20
global SSL3_RT_ALERT: cint <comptime> = 21
global SSL3_RT_HANDSHAKE: cint <comptime> = 22
global SSL3_RT_APPLICATION_DATA: cint <comptime> = 23
global TLS1_RT_CRYPTO: cint <comptime> = 4096
global TLS1_RT_CRYPTO_PREMASTER: cint <comptime> = 4097
global TLS1_RT_CRYPTO_CLIENT_RANDOM: cint <comptime> = 4098
global TLS1_RT_CRYPTO_SERVER_RANDOM: cint <comptime> = 4099
global TLS1_RT_CRYPTO_MASTER: cint <comptime> = 4100
global TLS1_RT_CRYPTO_READ: cint <comptime> = 0
global TLS1_RT_CRYPTO_WRITE: cint <comptime> = 256
global TLS1_RT_CRYPTO_MAC: cint <comptime> = 4101
global TLS1_RT_CRYPTO_KEY: cint <comptime> = 4102
global TLS1_RT_CRYPTO_IV: cint <comptime> = 4103
global TLS1_RT_CRYPTO_FIXED_IV: cint <comptime> = 4104
global SSL3_RT_HEADER: cint <comptime> = 256
global SSL3_RT_INNER_CONTENT_TYPE: cint <comptime> = 257
global SSL3_RT_QUIC_DATAGRAM: cint <comptime> = 512
global SSL3_RT_QUIC_PACKET: cint <comptime> = 513
global SSL3_RT_QUIC_FRAME_FULL: cint <comptime> = 514
global SSL3_RT_QUIC_FRAME_HEADER: cint <comptime> = 515
global SSL3_RT_QUIC_FRAME_PADDING: cint <comptime> = 516
global SSL3_AL_WARNING: cint <comptime> = 1
global SSL3_AL_FATAL: cint <comptime> = 2
global SSL3_AD_CLOSE_NOTIFY: cint <comptime> = 0
global SSL3_AD_UNEXPECTED_MESSAGE: cint <comptime> = 10
global SSL3_AD_BAD_RECORD_MAC: cint <comptime> = 20
global SSL3_AD_DECOMPRESSION_FAILURE: cint <comptime> = 30
global SSL3_AD_HANDSHAKE_FAILURE: cint <comptime> = 40
global SSL3_AD_NO_CERTIFICATE: cint <comptime> = 41
global SSL3_AD_BAD_CERTIFICATE: cint <comptime> = 42
global SSL3_AD_UNSUPPORTED_CERTIFICATE: cint <comptime> = 43
global SSL3_AD_CERTIFICATE_REVOKED: cint <comptime> = 44
global SSL3_AD_CERTIFICATE_EXPIRED: cint <comptime> = 45
global SSL3_AD_CERTIFICATE_UNKNOWN: cint <comptime> = 46
global SSL3_AD_ILLEGAL_PARAMETER: cint <comptime> = 47
global TLS1_HB_REQUEST: cint <comptime> = 1
global TLS1_HB_RESPONSE: cint <comptime> = 2
global SSL3_CT_RSA_SIGN: cint <comptime> = 1
global SSL3_CT_DSS_SIGN: cint <comptime> = 2
global SSL3_CT_RSA_FIXED_DH: cint <comptime> = 3
global SSL3_CT_DSS_FIXED_DH: cint <comptime> = 4
global SSL3_CT_RSA_EPHEMERAL_DH: cint <comptime> = 5
global SSL3_CT_DSS_EPHEMERAL_DH: cint <comptime> = 6
global SSL3_CT_FORTEZZA_DMS: cint <comptime> = 20
global SSL3_CT_NUMBER: cint <comptime> = 12
global SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS: cint <comptime> = 1
global TLS1_FLAGS_TLS_PADDING_BUG: cint <comptime> = 0
global TLS1_FLAGS_SKIP_CERT_VERIFY: cint <comptime> = 16
global TLS1_FLAGS_ENCRYPT_THEN_MAC_READ: cint <comptime> = 256
global TLS1_FLAGS_ENCRYPT_THEN_MAC: cint <comptime> = 256
global TLS1_FLAGS_RECEIVED_EXTMS: cint <comptime> = 512
global TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE: cint <comptime> = 1024
global TLS1_FLAGS_STATELESS: cint <comptime> = 2048
global TLS1_FLAGS_REQUIRED_EXTMS: cint <comptime> = 4096
global SSL3_MT_HELLO_REQUEST: cint <comptime> = 0
global SSL3_MT_CLIENT_HELLO: cint <comptime> = 1
global SSL3_MT_SERVER_HELLO: cint <comptime> = 2
global SSL3_MT_NEWSESSION_TICKET: cint <comptime> = 4
global SSL3_MT_END_OF_EARLY_DATA: cint <comptime> = 5
global SSL3_MT_ENCRYPTED_EXTENSIONS: cint <comptime> = 8
global SSL3_MT_CERTIFICATE: cint <comptime> = 11
global SSL3_MT_SERVER_KEY_EXCHANGE: cint <comptime> = 12
global SSL3_MT_CERTIFICATE_REQUEST: cint <comptime> = 13
global SSL3_MT_SERVER_DONE: cint <comptime> = 14
global SSL3_MT_CERTIFICATE_VERIFY: cint <comptime> = 15
global SSL3_MT_CLIENT_KEY_EXCHANGE: cint <comptime> = 16
global SSL3_MT_FINISHED: cint <comptime> = 20
global SSL3_MT_CERTIFICATE_URL: cint <comptime> = 21
global SSL3_MT_CERTIFICATE_STATUS: cint <comptime> = 22
global SSL3_MT_SUPPLEMENTAL_DATA: cint <comptime> = 23
global SSL3_MT_KEY_UPDATE: cint <comptime> = 24
global SSL3_MT_COMPRESSED_CERTIFICATE: cint <comptime> = 25
global SSL3_MT_NEXT_PROTO: cint <comptime> = 67
global SSL3_MT_MESSAGE_HASH: cint <comptime> = 254
global SSL3_MT_CHANGE_CIPHER_SPEC: cint <comptime> = 257
global SSL3_MT_CCS: cint <comptime> = 1
global SSL3_CC_READ: cint <comptime> = 1
global SSL3_CC_WRITE: cint <comptime> = 2
global SSL3_CC_CLIENT: cint <comptime> = 16
global SSL3_CC_SERVER: cint <comptime> = 32
global SSL3_CC_EARLY: cint <comptime> = 64
global SSL3_CC_HANDSHAKE: cint <comptime> = 128
global SSL3_CC_APPLICATION: cint <comptime> = 256
global SSL3_CHANGE_CIPHER_CLIENT_WRITE: cint <comptime> = 18
global SSL3_CHANGE_CIPHER_SERVER_READ: cint <comptime> = 33
global SSL3_CHANGE_CIPHER_CLIENT_READ: cint <comptime> = 17
global SSL3_CHANGE_CIPHER_SERVER_WRITE: cint <comptime> = 34
global OPENSSL_TLS_SECURITY_LEVEL: cint <comptime> = 2
global TLS_MAX_VERSION: cint <comptime> = 772
global TLS_ANY_VERSION: cint <comptime> = 65536
global TLS1_VERSION_MAJOR: cint <comptime> = 3
global TLS1_VERSION_MINOR: cint <comptime> = 1
global TLS1_1_VERSION_MAJOR: cint <comptime> = 3
global TLS1_1_VERSION_MINOR: cint <comptime> = 2
global TLS1_2_VERSION_MAJOR: cint <comptime> = 3
global TLS1_2_VERSION_MINOR: cint <comptime> = 3
global TLS1_AD_DECRYPTION_FAILED: cint <comptime> = 21
global TLS1_AD_RECORD_OVERFLOW: cint <comptime> = 22
global TLS1_AD_UNKNOWN_CA: cint <comptime> = 48
global TLS1_AD_ACCESS_DENIED: cint <comptime> = 49
global TLS1_AD_DECODE_ERROR: cint <comptime> = 50
global TLS1_AD_DECRYPT_ERROR: cint <comptime> = 51
global TLS1_AD_EXPORT_RESTRICTION: cint <comptime> = 60
global TLS1_AD_PROTOCOL_VERSION: cint <comptime> = 70
global TLS1_AD_INSUFFICIENT_SECURITY: cint <comptime> = 71
global TLS1_AD_INTERNAL_ERROR: cint <comptime> = 80
global TLS1_AD_INAPPROPRIATE_FALLBACK: cint <comptime> = 86
global TLS1_AD_USER_CANCELLED: cint <comptime> = 90
global TLS1_AD_NO_RENEGOTIATION: cint <comptime> = 100
global TLS13_AD_MISSING_EXTENSION: cint <comptime> = 109
global TLS13_AD_CERTIFICATE_REQUIRED: cint <comptime> = 116
global TLS1_AD_UNSUPPORTED_EXTENSION: cint <comptime> = 110
global TLS1_AD_CERTIFICATE_UNOBTAINABLE: cint <comptime> = 111
global TLS1_AD_UNRECOGNIZED_NAME: cint <comptime> = 112
global TLS1_AD_BAD_CERTIFICATE_STATUS_RESPONSE: cint <comptime> = 113
global TLS1_AD_BAD_CERTIFICATE_HASH_VALUE: cint <comptime> = 114
global TLS1_AD_UNKNOWN_PSK_IDENTITY: cint <comptime> = 115
global TLS1_AD_NO_APPLICATION_PROTOCOL: cint <comptime> = 120
global TLSEXT_TYPE_server_name: cint <comptime> = 0
global TLSEXT_TYPE_max_fragment_length: cint <comptime> = 1
global TLSEXT_TYPE_client_certificate_url: cint <comptime> = 2
global TLSEXT_TYPE_trusted_ca_keys: cint <comptime> = 3
global TLSEXT_TYPE_truncated_hmac: cint <comptime> = 4
global TLSEXT_TYPE_status_request: cint <comptime> = 5
global TLSEXT_TYPE_user_mapping: cint <comptime> = 6
global TLSEXT_TYPE_client_authz: cint <comptime> = 7
global TLSEXT_TYPE_server_authz: cint <comptime> = 8
global TLSEXT_TYPE_cert_type: cint <comptime> = 9
global TLSEXT_TYPE_supported_groups: cint <comptime> = 10
global TLSEXT_TYPE_elliptic_curves: cint <comptime> = 10
global TLSEXT_TYPE_ec_point_formats: cint <comptime> = 11
global TLSEXT_TYPE_srp: cint <comptime> = 12
global TLSEXT_TYPE_signature_algorithms: cint <comptime> = 13
global TLSEXT_TYPE_use_srtp: cint <comptime> = 14
global TLSEXT_TYPE_application_layer_protocol_negotiation: cint <comptime> = 16
global TLSEXT_TYPE_signed_certificate_timestamp: cint <comptime> = 18
global TLSEXT_TYPE_client_cert_type: cint <comptime> = 19
global TLSEXT_TYPE_server_cert_type: cint <comptime> = 20
global TLSEXT_TYPE_padding: cint <comptime> = 21
global TLSEXT_TYPE_encrypt_then_mac: cint <comptime> = 22
global TLSEXT_TYPE_extended_master_secret: cint <comptime> = 23
global TLSEXT_TYPE_compress_certificate: cint <comptime> = 27
global TLSEXT_TYPE_session_ticket: cint <comptime> = 35
global TLSEXT_TYPE_psk: cint <comptime> = 41
global TLSEXT_TYPE_early_data: cint <comptime> = 42
global TLSEXT_TYPE_supported_versions: cint <comptime> = 43
global TLSEXT_TYPE_cookie: cint <comptime> = 44
global TLSEXT_TYPE_psk_kex_modes: cint <comptime> = 45
global TLSEXT_TYPE_certificate_authorities: cint <comptime> = 47
global TLSEXT_TYPE_post_handshake_auth: cint <comptime> = 49
global TLSEXT_TYPE_signature_algorithms_cert: cint <comptime> = 50
global TLSEXT_TYPE_key_share: cint <comptime> = 51
global TLSEXT_TYPE_quic_transport_parameters: cint <comptime> = 57
global TLSEXT_TYPE_renegotiate: cint <comptime> = 65281
global TLSEXT_TYPE_next_proto_neg: cint <comptime> = 13172
global TLSEXT_NAMETYPE_host_name: cint <comptime> = 0
global TLSEXT_STATUSTYPE_ocsp: cint <comptime> = 1
global TLSEXT_ECPOINTFORMAT_first: cint <comptime> = 0
global TLSEXT_ECPOINTFORMAT_uncompressed: cint <comptime> = 0
global TLSEXT_ECPOINTFORMAT_ansiX962_compressed_prime: cint <comptime> = 1
global TLSEXT_ECPOINTFORMAT_ansiX962_compressed_char2: cint <comptime> = 2
global TLSEXT_ECPOINTFORMAT_last: cint <comptime> = 2
global TLSEXT_signature_anonymous: cint <comptime> = 0
global TLSEXT_signature_rsa: cint <comptime> = 1
global TLSEXT_signature_dsa: cint <comptime> = 2
global TLSEXT_signature_ecdsa: cint <comptime> = 3
global TLSEXT_signature_gostr34102001: cint <comptime> = 237
global TLSEXT_signature_gostr34102012_256: cint <comptime> = 238
global TLSEXT_signature_gostr34102012_512: cint <comptime> = 239
global TLSEXT_signature_num: cint <comptime> = 7
global TLSEXT_hash_none: cint <comptime> = 0
global TLSEXT_hash_md5: cint <comptime> = 1
global TLSEXT_hash_sha1: cint <comptime> = 2
global TLSEXT_hash_sha224: cint <comptime> = 3
global TLSEXT_hash_sha256: cint <comptime> = 4
global TLSEXT_hash_sha384: cint <comptime> = 5
global TLSEXT_hash_sha512: cint <comptime> = 6
global TLSEXT_hash_gostr3411: cint <comptime> = 237
global TLSEXT_hash_gostr34112012_256: cint <comptime> = 238
global TLSEXT_hash_gostr34112012_512: cint <comptime> = 239
global TLSEXT_hash_num: cint <comptime> = 10
global TLSEXT_comp_cert_none: cint <comptime> = 0
global TLSEXT_comp_cert_zlib: cint <comptime> = 1
global TLSEXT_comp_cert_brotli: cint <comptime> = 2
global TLSEXT_comp_cert_zstd: cint <comptime> = 3
global TLSEXT_comp_cert_limit: cint <comptime> = 4
global TLSEXT_nid_unknown: cint <comptime> = 16777216
global TLSEXT_curve_P_256: cint <comptime> = 23
global TLSEXT_curve_P_384: cint <comptime> = 24
global TLSEXT_max_fragment_length_DISABLED: cint <comptime> = 0
global TLSEXT_max_fragment_length_512: cint <comptime> = 1
global TLSEXT_max_fragment_length_1024: cint <comptime> = 2
global TLSEXT_max_fragment_length_2048: cint <comptime> = 3
global TLSEXT_max_fragment_length_4096: cint <comptime> = 4
global TLSEXT_max_fragment_length_UNSPECIFIED: cint <comptime> = 255
global TLSEXT_cert_type_x509: cint <comptime> = 0
global TLSEXT_cert_type_pgp: cint <comptime> = 1
global TLSEXT_cert_type_rpk: cint <comptime> = 2
global TLSEXT_cert_type_1609dot2: cint <comptime> = 3
global TLSEXT_MAXLEN_host_name: cint <comptime> = 255
global SSL_TLSEXT_ERR_OK: cint <comptime> = 0
global SSL_TLSEXT_ERR_ALERT_WARNING: cint <comptime> = 1
global SSL_TLSEXT_ERR_ALERT_FATAL: cint <comptime> = 2
global SSL_TLSEXT_ERR_NOACK: cint <comptime> = 3
global TLS1_CK_PSK_WITH_RC4_128_SHA: cint <comptime> = 50331786
global TLS1_CK_PSK_WITH_3DES_EDE_CBC_SHA: cint <comptime> = 50331787
global TLS1_CK_PSK_WITH_AES_128_CBC_SHA: cint <comptime> = 50331788
global TLS1_CK_PSK_WITH_AES_256_CBC_SHA: cint <comptime> = 50331789
global TLS1_CK_DHE_PSK_WITH_RC4_128_SHA: cint <comptime> = 50331790
global TLS1_CK_DHE_PSK_WITH_3DES_EDE_CBC_SHA: cint <comptime> = 50331791
global TLS1_CK_DHE_PSK_WITH_AES_128_CBC_SHA: cint <comptime> = 50331792
global TLS1_CK_DHE_PSK_WITH_AES_256_CBC_SHA: cint <comptime> = 50331793
global TLS1_CK_RSA_PSK_WITH_RC4_128_SHA: cint <comptime> = 50331794
global TLS1_CK_RSA_PSK_WITH_3DES_EDE_CBC_SHA: cint <comptime> = 50331795
global TLS1_CK_RSA_PSK_WITH_AES_128_CBC_SHA: cint <comptime> = 50331796
global TLS1_CK_RSA_PSK_WITH_AES_256_CBC_SHA: cint <comptime> = 50331797
global TLS1_CK_PSK_WITH_AES_128_GCM_SHA256: cint <comptime> = 50331816
global TLS1_CK_PSK_WITH_AES_256_GCM_SHA384: cint <comptime> = 50331817
global TLS1_CK_DHE_PSK_WITH_AES_128_GCM_SHA256: cint <comptime> = 50331818
global TLS1_CK_DHE_PSK_WITH_AES_256_GCM_SHA384: cint <comptime> = 50331819
global TLS1_CK_RSA_PSK_WITH_AES_128_GCM_SHA256: cint <comptime> = 50331820
global TLS1_CK_RSA_PSK_WITH_AES_256_GCM_SHA384: cint <comptime> = 50331821
global TLS1_CK_PSK_WITH_AES_128_CBC_SHA256: cint <comptime> = 50331822
global TLS1_CK_PSK_WITH_AES_256_CBC_SHA384: cint <comptime> = 50331823
global TLS1_CK_PSK_WITH_NULL_SHA256: cint <comptime> = 50331824
global TLS1_CK_PSK_WITH_NULL_SHA384: cint <comptime> = 50331825
global TLS1_CK_DHE_PSK_WITH_AES_128_CBC_SHA256: cint <comptime> = 50331826
global TLS1_CK_DHE_PSK_WITH_AES_256_CBC_SHA384: cint <comptime> = 50331827
global TLS1_CK_DHE_PSK_WITH_NULL_SHA256: cint <comptime> = 50331828
global TLS1_CK_DHE_PSK_WITH_NULL_SHA384: cint <comptime> = 50331829
global TLS1_CK_RSA_PSK_WITH_AES_128_CBC_SHA256: cint <comptime> = 50331830
global TLS1_CK_RSA_PSK_WITH_AES_256_CBC_SHA384: cint <comptime> = 50331831
global TLS1_CK_RSA_PSK_WITH_NULL_SHA256: cint <comptime> = 50331832
global TLS1_CK_RSA_PSK_WITH_NULL_SHA384: cint <comptime> = 50331833
global TLS1_CK_PSK_WITH_NULL_SHA: cint <comptime> = 50331692
global TLS1_CK_DHE_PSK_WITH_NULL_SHA: cint <comptime> = 50331693
global TLS1_CK_RSA_PSK_WITH_NULL_SHA: cint <comptime> = 50331694
global TLS1_CK_RSA_WITH_AES_128_SHA: cint <comptime> = 50331695
global TLS1_CK_DH_DSS_WITH_AES_128_SHA: cint <comptime> = 50331696
global TLS1_CK_DH_RSA_WITH_AES_128_SHA: cint <comptime> = 50331697
global TLS1_CK_DHE_DSS_WITH_AES_128_SHA: cint <comptime> = 50331698
global TLS1_CK_DHE_RSA_WITH_AES_128_SHA: cint <comptime> = 50331699
global TLS1_CK_ADH_WITH_AES_128_SHA: cint <comptime> = 50331700
global TLS1_CK_RSA_WITH_AES_256_SHA: cint <comptime> = 50331701
global TLS1_CK_DH_DSS_WITH_AES_256_SHA: cint <comptime> = 50331702
global TLS1_CK_DH_RSA_WITH_AES_256_SHA: cint <comptime> = 50331703
global TLS1_CK_DHE_DSS_WITH_AES_256_SHA: cint <comptime> = 50331704
global TLS1_CK_DHE_RSA_WITH_AES_256_SHA: cint <comptime> = 50331705
global TLS1_CK_ADH_WITH_AES_256_SHA: cint <comptime> = 50331706
global TLS1_CK_RSA_WITH_NULL_SHA256: cint <comptime> = 50331707
global TLS1_CK_RSA_WITH_AES_128_SHA256: cint <comptime> = 50331708
global TLS1_CK_RSA_WITH_AES_256_SHA256: cint <comptime> = 50331709
global TLS1_CK_DH_DSS_WITH_AES_128_SHA256: cint <comptime> = 50331710
global TLS1_CK_DH_RSA_WITH_AES_128_SHA256: cint <comptime> = 50331711
global TLS1_CK_DHE_DSS_WITH_AES_128_SHA256: cint <comptime> = 50331712
global TLS1_CK_RSA_WITH_CAMELLIA_128_CBC_SHA: cint <comptime> = 50331713
global TLS1_CK_DH_DSS_WITH_CAMELLIA_128_CBC_SHA: cint <comptime> = 50331714
global TLS1_CK_DH_RSA_WITH_CAMELLIA_128_CBC_SHA: cint <comptime> = 50331715
global TLS1_CK_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA: cint <comptime> = 50331716
global TLS1_CK_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA: cint <comptime> = 50331717
global TLS1_CK_ADH_WITH_CAMELLIA_128_CBC_SHA: cint <comptime> = 50331718
global TLS1_CK_DHE_RSA_WITH_AES_128_SHA256: cint <comptime> = 50331751
global TLS1_CK_DH_DSS_WITH_AES_256_SHA256: cint <comptime> = 50331752
global TLS1_CK_DH_RSA_WITH_AES_256_SHA256: cint <comptime> = 50331753
global TLS1_CK_DHE_DSS_WITH_AES_256_SHA256: cint <comptime> = 50331754
global TLS1_CK_DHE_RSA_WITH_AES_256_SHA256: cint <comptime> = 50331755
global TLS1_CK_ADH_WITH_AES_128_SHA256: cint <comptime> = 50331756
global TLS1_CK_ADH_WITH_AES_256_SHA256: cint <comptime> = 50331757
global TLS1_CK_RSA_WITH_CAMELLIA_256_CBC_SHA: cint <comptime> = 50331780
global TLS1_CK_DH_DSS_WITH_CAMELLIA_256_CBC_SHA: cint <comptime> = 50331781
global TLS1_CK_DH_RSA_WITH_CAMELLIA_256_CBC_SHA: cint <comptime> = 50331782
global TLS1_CK_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA: cint <comptime> = 50331783
global TLS1_CK_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA: cint <comptime> = 50331784
global TLS1_CK_ADH_WITH_CAMELLIA_256_CBC_SHA: cint <comptime> = 50331785
global TLS1_CK_RSA_WITH_SEED_SHA: cint <comptime> = 50331798
global TLS1_CK_DH_DSS_WITH_SEED_SHA: cint <comptime> = 50331799
global TLS1_CK_DH_RSA_WITH_SEED_SHA: cint <comptime> = 50331800
global TLS1_CK_DHE_DSS_WITH_SEED_SHA: cint <comptime> = 50331801
global TLS1_CK_DHE_RSA_WITH_SEED_SHA: cint <comptime> = 50331802
global TLS1_CK_ADH_WITH_SEED_SHA: cint <comptime> = 50331803
global TLS1_CK_RSA_WITH_AES_128_GCM_SHA256: cint <comptime> = 50331804
global TLS1_CK_RSA_WITH_AES_256_GCM_SHA384: cint <comptime> = 50331805
global TLS1_CK_DHE_RSA_WITH_AES_128_GCM_SHA256: cint <comptime> = 50331806
global TLS1_CK_DHE_RSA_WITH_AES_256_GCM_SHA384: cint <comptime> = 50331807
global TLS1_CK_DH_RSA_WITH_AES_128_GCM_SHA256: cint <comptime> = 50331808
global TLS1_CK_DH_RSA_WITH_AES_256_GCM_SHA384: cint <comptime> = 50331809
global TLS1_CK_DHE_DSS_WITH_AES_128_GCM_SHA256: cint <comptime> = 50331810
global TLS1_CK_DHE_DSS_WITH_AES_256_GCM_SHA384: cint <comptime> = 50331811
global TLS1_CK_DH_DSS_WITH_AES_128_GCM_SHA256: cint <comptime> = 50331812
global TLS1_CK_DH_DSS_WITH_AES_256_GCM_SHA384: cint <comptime> = 50331813
global TLS1_CK_ADH_WITH_AES_128_GCM_SHA256: cint <comptime> = 50331814
global TLS1_CK_ADH_WITH_AES_256_GCM_SHA384: cint <comptime> = 50331815
global TLS1_CK_RSA_WITH_AES_128_CCM: cint <comptime> = 50380956
global TLS1_CK_RSA_WITH_AES_256_CCM: cint <comptime> = 50380957
global TLS1_CK_DHE_RSA_WITH_AES_128_CCM: cint <comptime> = 50380958
global TLS1_CK_DHE_RSA_WITH_AES_256_CCM: cint <comptime> = 50380959
global TLS1_CK_RSA_WITH_AES_128_CCM_8: cint <comptime> = 50380960
global TLS1_CK_RSA_WITH_AES_256_CCM_8: cint <comptime> = 50380961
global TLS1_CK_DHE_RSA_WITH_AES_128_CCM_8: cint <comptime> = 50380962
global TLS1_CK_DHE_RSA_WITH_AES_256_CCM_8: cint <comptime> = 50380963
global TLS1_CK_PSK_WITH_AES_128_CCM: cint <comptime> = 50380964
global TLS1_CK_PSK_WITH_AES_256_CCM: cint <comptime> = 50380965
global TLS1_CK_DHE_PSK_WITH_AES_128_CCM: cint <comptime> = 50380966
global TLS1_CK_DHE_PSK_WITH_AES_256_CCM: cint <comptime> = 50380967
global TLS1_CK_PSK_WITH_AES_128_CCM_8: cint <comptime> = 50380968
global TLS1_CK_PSK_WITH_AES_256_CCM_8: cint <comptime> = 50380969
global TLS1_CK_DHE_PSK_WITH_AES_128_CCM_8: cint <comptime> = 50380970
global TLS1_CK_DHE_PSK_WITH_AES_256_CCM_8: cint <comptime> = 50380971
global TLS1_CK_ECDHE_ECDSA_WITH_AES_128_CCM: cint <comptime> = 50380972
global TLS1_CK_ECDHE_ECDSA_WITH_AES_256_CCM: cint <comptime> = 50380973
global TLS1_CK_ECDHE_ECDSA_WITH_AES_128_CCM_8: cint <comptime> = 50380974
global TLS1_CK_ECDHE_ECDSA_WITH_AES_256_CCM_8: cint <comptime> = 50380975
global TLS1_CK_RSA_WITH_CAMELLIA_128_CBC_SHA256: cint <comptime> = 50331834
global TLS1_CK_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256: cint <comptime> = 50331835
global TLS1_CK_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256: cint <comptime> = 50331836
global TLS1_CK_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256: cint <comptime> = 50331837
global TLS1_CK_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256: cint <comptime> = 50331838
global TLS1_CK_ADH_WITH_CAMELLIA_128_CBC_SHA256: cint <comptime> = 50331839
global TLS1_CK_RSA_WITH_CAMELLIA_256_CBC_SHA256: cint <comptime> = 50331840
global TLS1_CK_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256: cint <comptime> = 50331841
global TLS1_CK_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256: cint <comptime> = 50331842
global TLS1_CK_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256: cint <comptime> = 50331843
global TLS1_CK_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256: cint <comptime> = 50331844
global TLS1_CK_ADH_WITH_CAMELLIA_256_CBC_SHA256: cint <comptime> = 50331845
global TLS1_CK_ECDH_ECDSA_WITH_NULL_SHA: cint <comptime> = 50380801
global TLS1_CK_ECDH_ECDSA_WITH_RC4_128_SHA: cint <comptime> = 50380802
global TLS1_CK_ECDH_ECDSA_WITH_DES_192_CBC3_SHA: cint <comptime> = 50380803
global TLS1_CK_ECDH_ECDSA_WITH_AES_128_CBC_SHA: cint <comptime> = 50380804
global TLS1_CK_ECDH_ECDSA_WITH_AES_256_CBC_SHA: cint <comptime> = 50380805
global TLS1_CK_ECDHE_ECDSA_WITH_NULL_SHA: cint <comptime> = 50380806
global TLS1_CK_ECDHE_ECDSA_WITH_RC4_128_SHA: cint <comptime> = 50380807
global TLS1_CK_ECDHE_ECDSA_WITH_DES_192_CBC3_SHA: cint <comptime> = 50380808
global TLS1_CK_ECDHE_ECDSA_WITH_AES_128_CBC_SHA: cint <comptime> = 50380809
global TLS1_CK_ECDHE_ECDSA_WITH_AES_256_CBC_SHA: cint <comptime> = 50380810
global TLS1_CK_ECDH_RSA_WITH_NULL_SHA: cint <comptime> = 50380811
global TLS1_CK_ECDH_RSA_WITH_RC4_128_SHA: cint <comptime> = 50380812
global TLS1_CK_ECDH_RSA_WITH_DES_192_CBC3_SHA: cint <comptime> = 50380813
global TLS1_CK_ECDH_RSA_WITH_AES_128_CBC_SHA: cint <comptime> = 50380814
global TLS1_CK_ECDH_RSA_WITH_AES_256_CBC_SHA: cint <comptime> = 50380815
global TLS1_CK_ECDHE_RSA_WITH_NULL_SHA: cint <comptime> = 50380816
global TLS1_CK_ECDHE_RSA_WITH_RC4_128_SHA: cint <comptime> = 50380817
global TLS1_CK_ECDHE_RSA_WITH_DES_192_CBC3_SHA: cint <comptime> = 50380818
global TLS1_CK_ECDHE_RSA_WITH_AES_128_CBC_SHA: cint <comptime> = 50380819
global TLS1_CK_ECDHE_RSA_WITH_AES_256_CBC_SHA: cint <comptime> = 50380820
global TLS1_CK_ECDH_anon_WITH_NULL_SHA: cint <comptime> = 50380821
global TLS1_CK_ECDH_anon_WITH_RC4_128_SHA: cint <comptime> = 50380822
global TLS1_CK_ECDH_anon_WITH_DES_192_CBC3_SHA: cint <comptime> = 50380823
global TLS1_CK_ECDH_anon_WITH_AES_128_CBC_SHA: cint <comptime> = 50380824
global TLS1_CK_ECDH_anon_WITH_AES_256_CBC_SHA: cint <comptime> = 50380825
global TLS1_CK_SRP_SHA_WITH_3DES_EDE_CBC_SHA: cint <comptime> = 50380826
global TLS1_CK_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA: cint <comptime> = 50380827
global TLS1_CK_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA: cint <comptime> = 50380828
global TLS1_CK_SRP_SHA_WITH_AES_128_CBC_SHA: cint <comptime> = 50380829
global TLS1_CK_SRP_SHA_RSA_WITH_AES_128_CBC_SHA: cint <comptime> = 50380830
global TLS1_CK_SRP_SHA_DSS_WITH_AES_128_CBC_SHA: cint <comptime> = 50380831
global TLS1_CK_SRP_SHA_WITH_AES_256_CBC_SHA: cint <comptime> = 50380832
global TLS1_CK_SRP_SHA_RSA_WITH_AES_256_CBC_SHA: cint <comptime> = 50380833
global TLS1_CK_SRP_SHA_DSS_WITH_AES_256_CBC_SHA: cint <comptime> = 50380834
global TLS1_CK_ECDHE_ECDSA_WITH_AES_128_SHA256: cint <comptime> = 50380835
global TLS1_CK_ECDHE_ECDSA_WITH_AES_256_SHA384: cint <comptime> = 50380836
global TLS1_CK_ECDH_ECDSA_WITH_AES_128_SHA256: cint <comptime> = 50380837
global TLS1_CK_ECDH_ECDSA_WITH_AES_256_SHA384: cint <comptime> = 50380838
global TLS1_CK_ECDHE_RSA_WITH_AES_128_SHA256: cint <comptime> = 50380839
global TLS1_CK_ECDHE_RSA_WITH_AES_256_SHA384: cint <comptime> = 50380840
global TLS1_CK_ECDH_RSA_WITH_AES_128_SHA256: cint <comptime> = 50380841
global TLS1_CK_ECDH_RSA_WITH_AES_256_SHA384: cint <comptime> = 50380842
global TLS1_CK_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256: cint <comptime> = 50380843
global TLS1_CK_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384: cint <comptime> = 50380844
global TLS1_CK_ECDH_ECDSA_WITH_AES_128_GCM_SHA256: cint <comptime> = 50380845
global TLS1_CK_ECDH_ECDSA_WITH_AES_256_GCM_SHA384: cint <comptime> = 50380846
global TLS1_CK_ECDHE_RSA_WITH_AES_128_GCM_SHA256: cint <comptime> = 50380847
global TLS1_CK_ECDHE_RSA_WITH_AES_256_GCM_SHA384: cint <comptime> = 50380848
global TLS1_CK_ECDH_RSA_WITH_AES_128_GCM_SHA256: cint <comptime> = 50380849
global TLS1_CK_ECDH_RSA_WITH_AES_256_GCM_SHA384: cint <comptime> = 50380850
global TLS1_CK_ECDHE_PSK_WITH_RC4_128_SHA: cint <comptime> = 50380851
global TLS1_CK_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA: cint <comptime> = 50380852
global TLS1_CK_ECDHE_PSK_WITH_AES_128_CBC_SHA: cint <comptime> = 50380853
global TLS1_CK_ECDHE_PSK_WITH_AES_256_CBC_SHA: cint <comptime> = 50380854
global TLS1_CK_ECDHE_PSK_WITH_AES_128_CBC_SHA256: cint <comptime> = 50380855
global TLS1_CK_ECDHE_PSK_WITH_AES_256_CBC_SHA384: cint <comptime> = 50380856
global TLS1_CK_ECDHE_PSK_WITH_NULL_SHA: cint <comptime> = 50380857
global TLS1_CK_ECDHE_PSK_WITH_NULL_SHA256: cint <comptime> = 50380858
global TLS1_CK_ECDHE_PSK_WITH_NULL_SHA384: cint <comptime> = 50380859
global TLS1_CK_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256: cint <comptime> = 50380914
global TLS1_CK_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384: cint <comptime> = 50380915
global TLS1_CK_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256: cint <comptime> = 50380916
global TLS1_CK_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384: cint <comptime> = 50380917
global TLS1_CK_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256: cint <comptime> = 50380918
global TLS1_CK_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384: cint <comptime> = 50380919
global TLS1_CK_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256: cint <comptime> = 50380920
global TLS1_CK_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384: cint <comptime> = 50380921
global TLS1_CK_PSK_WITH_CAMELLIA_128_CBC_SHA256: cint <comptime> = 50380948
global TLS1_CK_PSK_WITH_CAMELLIA_256_CBC_SHA384: cint <comptime> = 50380949
global TLS1_CK_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256: cint <comptime> = 50380950
global TLS1_CK_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384: cint <comptime> = 50380951
global TLS1_CK_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256: cint <comptime> = 50380952
global TLS1_CK_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384: cint <comptime> = 50380953
global TLS1_CK_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256: cint <comptime> = 50380954
global TLS1_CK_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384: cint <comptime> = 50380955
global TLS1_CK_ECDHE_RSA_WITH_CHACHA20_POLY1305: cint <comptime> = 50384040
global TLS1_CK_ECDHE_ECDSA_WITH_CHACHA20_POLY1305: cint <comptime> = 50384041
global TLS1_CK_DHE_RSA_WITH_CHACHA20_POLY1305: cint <comptime> = 50384042
global TLS1_CK_PSK_WITH_CHACHA20_POLY1305: cint <comptime> = 50384043
global TLS1_CK_ECDHE_PSK_WITH_CHACHA20_POLY1305: cint <comptime> = 50384044
global TLS1_CK_DHE_PSK_WITH_CHACHA20_POLY1305: cint <comptime> = 50384045
global TLS1_CK_RSA_PSK_WITH_CHACHA20_POLY1305: cint <comptime> = 50384046
global TLS1_3_CK_AES_128_GCM_SHA256: cint <comptime> = 50336513
global TLS1_3_CK_AES_256_GCM_SHA384: cint <comptime> = 50336514
global TLS1_3_CK_CHACHA20_POLY1305_SHA256: cint <comptime> = 50336515
global TLS1_3_CK_AES_128_CCM_SHA256: cint <comptime> = 50336516
global TLS1_3_CK_AES_128_CCM_8_SHA256: cint <comptime> = 50336517
global TLS1_3_CK_SHA256_SHA256: cint <comptime> = 50380980
global TLS1_3_CK_SHA384_SHA384: cint <comptime> = 50380981
global TLS1_CK_RSA_WITH_ARIA_128_GCM_SHA256: cint <comptime> = 50380880
global TLS1_CK_RSA_WITH_ARIA_256_GCM_SHA384: cint <comptime> = 50380881
global TLS1_CK_DHE_RSA_WITH_ARIA_128_GCM_SHA256: cint <comptime> = 50380882
global TLS1_CK_DHE_RSA_WITH_ARIA_256_GCM_SHA384: cint <comptime> = 50380883
global TLS1_CK_DH_RSA_WITH_ARIA_128_GCM_SHA256: cint <comptime> = 50380884
global TLS1_CK_DH_RSA_WITH_ARIA_256_GCM_SHA384: cint <comptime> = 50380885
global TLS1_CK_DHE_DSS_WITH_ARIA_128_GCM_SHA256: cint <comptime> = 50380886
global TLS1_CK_DHE_DSS_WITH_ARIA_256_GCM_SHA384: cint <comptime> = 50380887
global TLS1_CK_DH_DSS_WITH_ARIA_128_GCM_SHA256: cint <comptime> = 50380888
global TLS1_CK_DH_DSS_WITH_ARIA_256_GCM_SHA384: cint <comptime> = 50380889
global TLS1_CK_DH_anon_WITH_ARIA_128_GCM_SHA256: cint <comptime> = 50380890
global TLS1_CK_DH_anon_WITH_ARIA_256_GCM_SHA384: cint <comptime> = 50380891
global TLS1_CK_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256: cint <comptime> = 50380892
global TLS1_CK_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384: cint <comptime> = 50380893
global TLS1_CK_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256: cint <comptime> = 50380894
global TLS1_CK_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384: cint <comptime> = 50380895
global TLS1_CK_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256: cint <comptime> = 50380896
global TLS1_CK_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384: cint <comptime> = 50380897
global TLS1_CK_ECDH_RSA_WITH_ARIA_128_GCM_SHA256: cint <comptime> = 50380898
global TLS1_CK_ECDH_RSA_WITH_ARIA_256_GCM_SHA384: cint <comptime> = 50380899
global TLS1_CK_PSK_WITH_ARIA_128_GCM_SHA256: cint <comptime> = 50380906
global TLS1_CK_PSK_WITH_ARIA_256_GCM_SHA384: cint <comptime> = 50380907
global TLS1_CK_DHE_PSK_WITH_ARIA_128_GCM_SHA256: cint <comptime> = 50380908
global TLS1_CK_DHE_PSK_WITH_ARIA_256_GCM_SHA384: cint <comptime> = 50380909
global TLS1_CK_RSA_PSK_WITH_ARIA_128_GCM_SHA256: cint <comptime> = 50380910
global TLS1_CK_RSA_PSK_WITH_ARIA_256_GCM_SHA384: cint <comptime> = 50380911
global TLS1_RFC_RSA_WITH_AES_128_SHA: cstring <comptime> = "TLS_RSA_WITH_AES_128_CBC_SHA"
global TLS1_RFC_DHE_DSS_WITH_AES_128_SHA: cstring <comptime> = "TLS_DHE_DSS_WITH_AES_128_CBC_SHA"
global TLS1_RFC_DHE_RSA_WITH_AES_128_SHA: cstring <comptime> = "TLS_DHE_RSA_WITH_AES_128_CBC_SHA"
global TLS1_RFC_ADH_WITH_AES_128_SHA: cstring <comptime> = "TLS_DH_anon_WITH_AES_128_CBC_SHA"
global TLS1_RFC_RSA_WITH_AES_256_SHA: cstring <comptime> = "TLS_RSA_WITH_AES_256_CBC_SHA"
global TLS1_RFC_DHE_DSS_WITH_AES_256_SHA: cstring <comptime> = "TLS_DHE_DSS_WITH_AES_256_CBC_SHA"
global TLS1_RFC_DHE_RSA_WITH_AES_256_SHA: cstring <comptime> = "TLS_DHE_RSA_WITH_AES_256_CBC_SHA"
global TLS1_RFC_ADH_WITH_AES_256_SHA: cstring <comptime> = "TLS_DH_anon_WITH_AES_256_CBC_SHA"
global TLS1_RFC_RSA_WITH_NULL_SHA256: cstring <comptime> = "TLS_RSA_WITH_NULL_SHA256"
global TLS1_RFC_RSA_WITH_AES_128_SHA256: cstring <comptime> = "TLS_RSA_WITH_AES_128_CBC_SHA256"
global TLS1_RFC_RSA_WITH_AES_256_SHA256: cstring <comptime> = "TLS_RSA_WITH_AES_256_CBC_SHA256"
global TLS1_RFC_DHE_DSS_WITH_AES_128_SHA256: cstring <comptime> = "TLS_DHE_DSS_WITH_AES_128_CBC_SHA256"
global TLS1_RFC_DHE_RSA_WITH_AES_128_SHA256: cstring <comptime> = "TLS_DHE_RSA_WITH_AES_128_CBC_SHA256"
global TLS1_RFC_DHE_DSS_WITH_AES_256_SHA256: cstring <comptime> = "TLS_DHE_DSS_WITH_AES_256_CBC_SHA256"
global TLS1_RFC_DHE_RSA_WITH_AES_256_SHA256: cstring <comptime> = "TLS_DHE_RSA_WITH_AES_256_CBC_SHA256"
global TLS1_RFC_ADH_WITH_AES_128_SHA256: cstring <comptime> = "TLS_DH_anon_WITH_AES_128_CBC_SHA256"
global TLS1_RFC_ADH_WITH_AES_256_SHA256: cstring <comptime> = "TLS_DH_anon_WITH_AES_256_CBC_SHA256"
global TLS1_RFC_RSA_WITH_AES_128_GCM_SHA256: cstring <comptime> = "TLS_RSA_WITH_AES_128_GCM_SHA256"
global TLS1_RFC_RSA_WITH_AES_256_GCM_SHA384: cstring <comptime> = "TLS_RSA_WITH_AES_256_GCM_SHA384"
global TLS1_RFC_DHE_RSA_WITH_AES_128_GCM_SHA256: cstring <comptime> = "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256"
global TLS1_RFC_DHE_RSA_WITH_AES_256_GCM_SHA384: cstring <comptime> = "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384"
global TLS1_RFC_DHE_DSS_WITH_AES_128_GCM_SHA256: cstring <comptime> = "TLS_DHE_DSS_WITH_AES_128_GCM_SHA256"
global TLS1_RFC_DHE_DSS_WITH_AES_256_GCM_SHA384: cstring <comptime> = "TLS_DHE_DSS_WITH_AES_256_GCM_SHA384"
global TLS1_RFC_ADH_WITH_AES_128_GCM_SHA256: cstring <comptime> = "TLS_DH_anon_WITH_AES_128_GCM_SHA256"
global TLS1_RFC_ADH_WITH_AES_256_GCM_SHA384: cstring <comptime> = "TLS_DH_anon_WITH_AES_256_GCM_SHA384"
global TLS1_RFC_RSA_WITH_AES_128_CCM: cstring <comptime> = "TLS_RSA_WITH_AES_128_CCM"
global TLS1_RFC_RSA_WITH_AES_256_CCM: cstring <comptime> = "TLS_RSA_WITH_AES_256_CCM"
global TLS1_RFC_DHE_RSA_WITH_AES_128_CCM: cstring <comptime> = "TLS_DHE_RSA_WITH_AES_128_CCM"
global TLS1_RFC_DHE_RSA_WITH_AES_256_CCM: cstring <comptime> = "TLS_DHE_RSA_WITH_AES_256_CCM"
global TLS1_RFC_RSA_WITH_AES_128_CCM_8: cstring <comptime> = "TLS_RSA_WITH_AES_128_CCM_8"
global TLS1_RFC_RSA_WITH_AES_256_CCM_8: cstring <comptime> = "TLS_RSA_WITH_AES_256_CCM_8"
global TLS1_RFC_DHE_RSA_WITH_AES_128_CCM_8: cstring <comptime> = "TLS_DHE_RSA_WITH_AES_128_CCM_8"
global TLS1_RFC_DHE_RSA_WITH_AES_256_CCM_8: cstring <comptime> = "TLS_DHE_RSA_WITH_AES_256_CCM_8"
global TLS1_RFC_PSK_WITH_AES_128_CCM: cstring <comptime> = "TLS_PSK_WITH_AES_128_CCM"
global TLS1_RFC_PSK_WITH_AES_256_CCM: cstring <comptime> = "TLS_PSK_WITH_AES_256_CCM"
global TLS1_RFC_DHE_PSK_WITH_AES_128_CCM: cstring <comptime> = "TLS_DHE_PSK_WITH_AES_128_CCM"
global TLS1_RFC_DHE_PSK_WITH_AES_256_CCM: cstring <comptime> = "TLS_DHE_PSK_WITH_AES_256_CCM"
global TLS1_RFC_PSK_WITH_AES_128_CCM_8: cstring <comptime> = "TLS_PSK_WITH_AES_128_CCM_8"
global TLS1_RFC_PSK_WITH_AES_256_CCM_8: cstring <comptime> = "TLS_PSK_WITH_AES_256_CCM_8"
global TLS1_RFC_DHE_PSK_WITH_AES_128_CCM_8: cstring <comptime> = "TLS_PSK_DHE_WITH_AES_128_CCM_8"
global TLS1_RFC_DHE_PSK_WITH_AES_256_CCM_8: cstring <comptime> = "TLS_PSK_DHE_WITH_AES_256_CCM_8"
global TLS1_RFC_ECDHE_ECDSA_WITH_AES_128_CCM: cstring <comptime> = "TLS_ECDHE_ECDSA_WITH_AES_128_CCM"
global TLS1_RFC_ECDHE_ECDSA_WITH_AES_256_CCM: cstring <comptime> = "TLS_ECDHE_ECDSA_WITH_AES_256_CCM"
global TLS1_RFC_ECDHE_ECDSA_WITH_AES_128_CCM_8: cstring <comptime> = "TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8"
global TLS1_RFC_ECDHE_ECDSA_WITH_AES_256_CCM_8: cstring <comptime> = "TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8"
global TLS1_3_RFC_AES_128_GCM_SHA256: cstring <comptime> = "TLS_AES_128_GCM_SHA256"
global TLS1_3_RFC_AES_256_GCM_SHA384: cstring <comptime> = "TLS_AES_256_GCM_SHA384"
global TLS1_3_RFC_CHACHA20_POLY1305_SHA256: cstring <comptime> = "TLS_CHACHA20_POLY1305_SHA256"
global TLS1_3_RFC_SHA256_SHA256: cstring <comptime> = "TLS_SHA256_SHA256"
global TLS1_3_RFC_SHA384_SHA384: cstring <comptime> = "TLS_SHA384_SHA384"
global TLS1_3_RFC_AES_128_CCM_SHA256: cstring <comptime> = "TLS_AES_128_CCM_SHA256"
global TLS1_3_RFC_AES_128_CCM_8_SHA256: cstring <comptime> = "TLS_AES_128_CCM_8_SHA256"
global TLS1_RFC_ECDHE_ECDSA_WITH_NULL_SHA: cstring <comptime> = "TLS_ECDHE_ECDSA_WITH_NULL_SHA"
global TLS1_RFC_ECDHE_ECDSA_WITH_DES_192_CBC3_SHA: cstring <comptime> = "TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA"
global TLS1_RFC_ECDHE_ECDSA_WITH_AES_128_CBC_SHA: cstring <comptime> = "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA"
global TLS1_RFC_ECDHE_ECDSA_WITH_AES_256_CBC_SHA: cstring <comptime> = "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA"
global TLS1_RFC_ECDHE_RSA_WITH_NULL_SHA: cstring <comptime> = "TLS_ECDHE_RSA_WITH_NULL_SHA"
global TLS1_RFC_ECDHE_RSA_WITH_DES_192_CBC3_SHA: cstring <comptime> = "TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA"
global TLS1_RFC_ECDHE_RSA_WITH_AES_128_CBC_SHA: cstring <comptime> = "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA"
global TLS1_RFC_ECDHE_RSA_WITH_AES_256_CBC_SHA: cstring <comptime> = "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA"
global TLS1_RFC_ECDH_anon_WITH_NULL_SHA: cstring <comptime> = "TLS_ECDH_anon_WITH_NULL_SHA"
global TLS1_RFC_ECDH_anon_WITH_DES_192_CBC3_SHA: cstring <comptime> = "TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA"
global TLS1_RFC_ECDH_anon_WITH_AES_128_CBC_SHA: cstring <comptime> = "TLS_ECDH_anon_WITH_AES_128_CBC_SHA"
global TLS1_RFC_ECDH_anon_WITH_AES_256_CBC_SHA: cstring <comptime> = "TLS_ECDH_anon_WITH_AES_256_CBC_SHA"
global TLS1_RFC_ECDHE_ECDSA_WITH_AES_128_SHA256: cstring <comptime> = "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256"
global TLS1_RFC_ECDHE_ECDSA_WITH_AES_256_SHA384: cstring <comptime> = "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384"
global TLS1_RFC_ECDHE_RSA_WITH_AES_128_SHA256: cstring <comptime> = "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"
global TLS1_RFC_ECDHE_RSA_WITH_AES_256_SHA384: cstring <comptime> = "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384"
global TLS1_RFC_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256: cstring <comptime> = "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256"
global TLS1_RFC_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384: cstring <comptime> = "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384"
global TLS1_RFC_ECDHE_RSA_WITH_AES_128_GCM_SHA256: cstring <comptime> = "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"
global TLS1_RFC_ECDHE_RSA_WITH_AES_256_GCM_SHA384: cstring <comptime> = "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
global TLS1_RFC_PSK_WITH_NULL_SHA: cstring <comptime> = "TLS_PSK_WITH_NULL_SHA"
global TLS1_RFC_DHE_PSK_WITH_NULL_SHA: cstring <comptime> = "TLS_DHE_PSK_WITH_NULL_SHA"
global TLS1_RFC_RSA_PSK_WITH_NULL_SHA: cstring <comptime> = "TLS_RSA_PSK_WITH_NULL_SHA"
global TLS1_RFC_PSK_WITH_3DES_EDE_CBC_SHA: cstring <comptime> = "TLS_PSK_WITH_3DES_EDE_CBC_SHA"
global TLS1_RFC_PSK_WITH_AES_128_CBC_SHA: cstring <comptime> = "TLS_PSK_WITH_AES_128_CBC_SHA"
global TLS1_RFC_PSK_WITH_AES_256_CBC_SHA: cstring <comptime> = "TLS_PSK_WITH_AES_256_CBC_SHA"
global TLS1_RFC_DHE_PSK_WITH_3DES_EDE_CBC_SHA: cstring <comptime> = "TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA"
global TLS1_RFC_DHE_PSK_WITH_AES_128_CBC_SHA: cstring <comptime> = "TLS_DHE_PSK_WITH_AES_128_CBC_SHA"
global TLS1_RFC_DHE_PSK_WITH_AES_256_CBC_SHA: cstring <comptime> = "TLS_DHE_PSK_WITH_AES_256_CBC_SHA"
global TLS1_RFC_RSA_PSK_WITH_3DES_EDE_CBC_SHA: cstring <comptime> = "TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA"
global TLS1_RFC_RSA_PSK_WITH_AES_128_CBC_SHA: cstring <comptime> = "TLS_RSA_PSK_WITH_AES_128_CBC_SHA"
global TLS1_RFC_RSA_PSK_WITH_AES_256_CBC_SHA: cstring <comptime> = "TLS_RSA_PSK_WITH_AES_256_CBC_SHA"
global TLS1_RFC_PSK_WITH_AES_128_GCM_SHA256: cstring <comptime> = "TLS_PSK_WITH_AES_128_GCM_SHA256"
global TLS1_RFC_PSK_WITH_AES_256_GCM_SHA384: cstring <comptime> = "TLS_PSK_WITH_AES_256_GCM_SHA384"
global TLS1_RFC_DHE_PSK_WITH_AES_128_GCM_SHA256: cstring <comptime> = "TLS_DHE_PSK_WITH_AES_128_GCM_SHA256"
global TLS1_RFC_DHE_PSK_WITH_AES_256_GCM_SHA384: cstring <comptime> = "TLS_DHE_PSK_WITH_AES_256_GCM_SHA384"
global TLS1_RFC_RSA_PSK_WITH_AES_128_GCM_SHA256: cstring <comptime> = "TLS_RSA_PSK_WITH_AES_128_GCM_SHA256"
global TLS1_RFC_RSA_PSK_WITH_AES_256_GCM_SHA384: cstring <comptime> = "TLS_RSA_PSK_WITH_AES_256_GCM_SHA384"
global TLS1_RFC_PSK_WITH_AES_128_CBC_SHA256: cstring <comptime> = "TLS_PSK_WITH_AES_128_CBC_SHA256"
global TLS1_RFC_PSK_WITH_AES_256_CBC_SHA384: cstring <comptime> = "TLS_PSK_WITH_AES_256_CBC_SHA384"
global TLS1_RFC_PSK_WITH_NULL_SHA256: cstring <comptime> = "TLS_PSK_WITH_NULL_SHA256"
global TLS1_RFC_PSK_WITH_NULL_SHA384: cstring <comptime> = "TLS_PSK_WITH_NULL_SHA384"
global TLS1_RFC_DHE_PSK_WITH_AES_128_CBC_SHA256: cstring <comptime> = "TLS_DHE_PSK_WITH_AES_128_CBC_SHA256"
global TLS1_RFC_DHE_PSK_WITH_AES_256_CBC_SHA384: cstring <comptime> = "TLS_DHE_PSK_WITH_AES_256_CBC_SHA384"
global TLS1_RFC_DHE_PSK_WITH_NULL_SHA256: cstring <comptime> = "TLS_DHE_PSK_WITH_NULL_SHA256"
global TLS1_RFC_DHE_PSK_WITH_NULL_SHA384: cstring <comptime> = "TLS_DHE_PSK_WITH_NULL_SHA384"
global TLS1_RFC_RSA_PSK_WITH_AES_128_CBC_SHA256: cstring <comptime> = "TLS_RSA_PSK_WITH_AES_128_CBC_SHA256"
global TLS1_RFC_RSA_PSK_WITH_AES_256_CBC_SHA384: cstring <comptime> = "TLS_RSA_PSK_WITH_AES_256_CBC_SHA384"
global TLS1_RFC_RSA_PSK_WITH_NULL_SHA256: cstring <comptime> = "TLS_RSA_PSK_WITH_NULL_SHA256"
global TLS1_RFC_RSA_PSK_WITH_NULL_SHA384: cstring <comptime> = "TLS_RSA_PSK_WITH_NULL_SHA384"
global TLS1_RFC_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA: cstring <comptime> = "TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA"
global TLS1_RFC_ECDHE_PSK_WITH_AES_128_CBC_SHA: cstring <comptime> = "TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA"
global TLS1_RFC_ECDHE_PSK_WITH_AES_256_CBC_SHA: cstring <comptime> = "TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA"
global TLS1_RFC_ECDHE_PSK_WITH_AES_128_CBC_SHA256: cstring <comptime> = "TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256"
global TLS1_RFC_ECDHE_PSK_WITH_AES_256_CBC_SHA384: cstring <comptime> = "TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384"
global TLS1_RFC_ECDHE_PSK_WITH_NULL_SHA: cstring <comptime> = "TLS_ECDHE_PSK_WITH_NULL_SHA"
global TLS1_RFC_ECDHE_PSK_WITH_NULL_SHA256: cstring <comptime> = "TLS_ECDHE_PSK_WITH_NULL_SHA256"
global TLS1_RFC_ECDHE_PSK_WITH_NULL_SHA384: cstring <comptime> = "TLS_ECDHE_PSK_WITH_NULL_SHA384"
global TLS1_RFC_SRP_SHA_WITH_3DES_EDE_CBC_SHA: cstring <comptime> = "TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA"
global TLS1_RFC_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA: cstring <comptime> = "TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA"
global TLS1_RFC_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA: cstring <comptime> = "TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA"
global TLS1_RFC_SRP_SHA_WITH_AES_128_CBC_SHA: cstring <comptime> = "TLS_SRP_SHA_WITH_AES_128_CBC_SHA"
global TLS1_RFC_SRP_SHA_RSA_WITH_AES_128_CBC_SHA: cstring <comptime> = "TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA"
global TLS1_RFC_SRP_SHA_DSS_WITH_AES_128_CBC_SHA: cstring <comptime> = "TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA"
global TLS1_RFC_SRP_SHA_WITH_AES_256_CBC_SHA: cstring <comptime> = "TLS_SRP_SHA_WITH_AES_256_CBC_SHA"
global TLS1_RFC_SRP_SHA_RSA_WITH_AES_256_CBC_SHA: cstring <comptime> = "TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA"
global TLS1_RFC_SRP_SHA_DSS_WITH_AES_256_CBC_SHA: cstring <comptime> = "TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA"
global TLS1_RFC_DHE_RSA_WITH_CHACHA20_POLY1305: cstring <comptime> = "TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256"
global TLS1_RFC_ECDHE_RSA_WITH_CHACHA20_POLY1305: cstring <comptime> = "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256"
global TLS1_RFC_ECDHE_ECDSA_WITH_CHACHA20_POLY1305: cstring <comptime> = "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256"
global TLS1_RFC_PSK_WITH_CHACHA20_POLY1305: cstring <comptime> = "TLS_PSK_WITH_CHACHA20_POLY1305_SHA256"
global TLS1_RFC_ECDHE_PSK_WITH_CHACHA20_POLY1305: cstring <comptime> = "TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256"
global TLS1_RFC_DHE_PSK_WITH_CHACHA20_POLY1305: cstring <comptime> = "TLS_DHE_PSK_WITH_CHACHA20_POLY1305_SHA256"
global TLS1_RFC_RSA_PSK_WITH_CHACHA20_POLY1305: cstring <comptime> = "TLS_RSA_PSK_WITH_CHACHA20_POLY1305_SHA256"
global TLS1_RFC_RSA_WITH_CAMELLIA_128_CBC_SHA256: cstring <comptime> = "TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256"
global TLS1_RFC_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256: cstring <comptime> = "TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256"
global TLS1_RFC_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256: cstring <comptime> = "TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256"
global TLS1_RFC_ADH_WITH_CAMELLIA_128_CBC_SHA256: cstring <comptime> = "TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256"
global TLS1_RFC_RSA_WITH_CAMELLIA_256_CBC_SHA256: cstring <comptime> = "TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256"
global TLS1_RFC_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256: cstring <comptime> = "TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256"
global TLS1_RFC_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256: cstring <comptime> = "TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256"
global TLS1_RFC_ADH_WITH_CAMELLIA_256_CBC_SHA256: cstring <comptime> = "TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256"
global TLS1_RFC_RSA_WITH_CAMELLIA_256_CBC_SHA: cstring <comptime> = "TLS_RSA_WITH_CAMELLIA_256_CBC_SHA"
global TLS1_RFC_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA: cstring <comptime> = "TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA"
global TLS1_RFC_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA: cstring <comptime> = "TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA"
global TLS1_RFC_ADH_WITH_CAMELLIA_256_CBC_SHA: cstring <comptime> = "TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA"
global TLS1_RFC_RSA_WITH_CAMELLIA_128_CBC_SHA: cstring <comptime> = "TLS_RSA_WITH_CAMELLIA_128_CBC_SHA"
global TLS1_RFC_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA: cstring <comptime> = "TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA"
global TLS1_RFC_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA: cstring <comptime> = "TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA"
global TLS1_RFC_ADH_WITH_CAMELLIA_128_CBC_SHA: cstring <comptime> = "TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA"
global TLS1_RFC_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256: cstring <comptime> = "TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256"
global TLS1_RFC_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384: cstring <comptime> = "TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384"
global TLS1_RFC_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256: cstring <comptime> = "TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256"
global TLS1_RFC_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384: cstring <comptime> = "TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384"
global TLS1_RFC_PSK_WITH_CAMELLIA_128_CBC_SHA256: cstring <comptime> = "TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256"
global TLS1_RFC_PSK_WITH_CAMELLIA_256_CBC_SHA384: cstring <comptime> = "TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384"
global TLS1_RFC_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256: cstring <comptime> = "TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256"
global TLS1_RFC_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384: cstring <comptime> = "TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384"
global TLS1_RFC_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256: cstring <comptime> = "TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256"
global TLS1_RFC_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384: cstring <comptime> = "TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384"
global TLS1_RFC_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256: cstring <comptime> = "TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256"
global TLS1_RFC_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384: cstring <comptime> = "TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384"
global TLS1_RFC_RSA_WITH_SEED_SHA: cstring <comptime> = "TLS_RSA_WITH_SEED_CBC_SHA"
global TLS1_RFC_DHE_DSS_WITH_SEED_SHA: cstring <comptime> = "TLS_DHE_DSS_WITH_SEED_CBC_SHA"
global TLS1_RFC_DHE_RSA_WITH_SEED_SHA: cstring <comptime> = "TLS_DHE_RSA_WITH_SEED_CBC_SHA"
global TLS1_RFC_ADH_WITH_SEED_SHA: cstring <comptime> = "TLS_DH_anon_WITH_SEED_CBC_SHA"
global TLS1_RFC_ECDHE_PSK_WITH_RC4_128_SHA: cstring <comptime> = "TLS_ECDHE_PSK_WITH_RC4_128_SHA"
global TLS1_RFC_ECDH_anon_WITH_RC4_128_SHA: cstring <comptime> = "TLS_ECDH_anon_WITH_RC4_128_SHA"
global TLS1_RFC_ECDHE_ECDSA_WITH_RC4_128_SHA: cstring <comptime> = "TLS_ECDHE_ECDSA_WITH_RC4_128_SHA"
global TLS1_RFC_ECDHE_RSA_WITH_RC4_128_SHA: cstring <comptime> = "TLS_ECDHE_RSA_WITH_RC4_128_SHA"
global TLS1_RFC_PSK_WITH_RC4_128_SHA: cstring <comptime> = "TLS_PSK_WITH_RC4_128_SHA"
global TLS1_RFC_RSA_PSK_WITH_RC4_128_SHA: cstring <comptime> = "TLS_RSA_PSK_WITH_RC4_128_SHA"
global TLS1_RFC_DHE_PSK_WITH_RC4_128_SHA: cstring <comptime> = "TLS_DHE_PSK_WITH_RC4_128_SHA"
global TLS1_RFC_RSA_WITH_ARIA_128_GCM_SHA256: cstring <comptime> = "TLS_RSA_WITH_ARIA_128_GCM_SHA256"
global TLS1_RFC_RSA_WITH_ARIA_256_GCM_SHA384: cstring <comptime> = "TLS_RSA_WITH_ARIA_256_GCM_SHA384"
global TLS1_RFC_DHE_RSA_WITH_ARIA_128_GCM_SHA256: cstring <comptime> = "TLS_DHE_RSA_WITH_ARIA_128_GCM_SHA256"
global TLS1_RFC_DHE_RSA_WITH_ARIA_256_GCM_SHA384: cstring <comptime> = "TLS_DHE_RSA_WITH_ARIA_256_GCM_SHA384"
global TLS1_RFC_DH_RSA_WITH_ARIA_128_GCM_SHA256: cstring <comptime> = "TLS_DH_RSA_WITH_ARIA_128_GCM_SHA256"
global TLS1_RFC_DH_RSA_WITH_ARIA_256_GCM_SHA384: cstring <comptime> = "TLS_DH_RSA_WITH_ARIA_256_GCM_SHA384"
global TLS1_RFC_DHE_DSS_WITH_ARIA_128_GCM_SHA256: cstring <comptime> = "TLS_DHE_DSS_WITH_ARIA_128_GCM_SHA256"
global TLS1_RFC_DHE_DSS_WITH_ARIA_256_GCM_SHA384: cstring <comptime> = "TLS_DHE_DSS_WITH_ARIA_256_GCM_SHA384"
global TLS1_RFC_DH_DSS_WITH_ARIA_128_GCM_SHA256: cstring <comptime> = "TLS_DH_DSS_WITH_ARIA_128_GCM_SHA256"
global TLS1_RFC_DH_DSS_WITH_ARIA_256_GCM_SHA384: cstring <comptime> = "TLS_DH_DSS_WITH_ARIA_256_GCM_SHA384"
global TLS1_RFC_DH_anon_WITH_ARIA_128_GCM_SHA256: cstring <comptime> = "TLS_DH_anon_WITH_ARIA_128_GCM_SHA256"
global TLS1_RFC_DH_anon_WITH_ARIA_256_GCM_SHA384: cstring <comptime> = "TLS_DH_anon_WITH_ARIA_256_GCM_SHA384"
global TLS1_RFC_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256: cstring <comptime> = "TLS_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256"
global TLS1_RFC_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384: cstring <comptime> = "TLS_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384"
global TLS1_RFC_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256: cstring <comptime> = "TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256"
global TLS1_RFC_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384: cstring <comptime> = "TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384"
global TLS1_RFC_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256: cstring <comptime> = "TLS_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256"
global TLS1_RFC_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384: cstring <comptime> = "TLS_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384"
global TLS1_RFC_ECDH_RSA_WITH_ARIA_128_GCM_SHA256: cstring <comptime> = "TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256"
global TLS1_RFC_ECDH_RSA_WITH_ARIA_256_GCM_SHA384: cstring <comptime> = "TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384"
global TLS1_RFC_PSK_WITH_ARIA_128_GCM_SHA256: cstring <comptime> = "TLS_PSK_WITH_ARIA_128_GCM_SHA256"
global TLS1_RFC_PSK_WITH_ARIA_256_GCM_SHA384: cstring <comptime> = "TLS_PSK_WITH_ARIA_256_GCM_SHA384"
global TLS1_RFC_DHE_PSK_WITH_ARIA_128_GCM_SHA256: cstring <comptime> = "TLS_DHE_PSK_WITH_ARIA_128_GCM_SHA256"
global TLS1_RFC_DHE_PSK_WITH_ARIA_256_GCM_SHA384: cstring <comptime> = "TLS_DHE_PSK_WITH_ARIA_256_GCM_SHA384"
global TLS1_RFC_RSA_PSK_WITH_ARIA_128_GCM_SHA256: cstring <comptime> = "TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256"
global TLS1_RFC_RSA_PSK_WITH_ARIA_256_GCM_SHA384: cstring <comptime> = "TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384"
global TLS1_TXT_DHE_DSS_WITH_RC4_128_SHA: cstring <comptime> = "DHE-DSS-RC4-SHA"
global TLS1_TXT_PSK_WITH_NULL_SHA: cstring <comptime> = "PSK-NULL-SHA"
global TLS1_TXT_DHE_PSK_WITH_NULL_SHA: cstring <comptime> = "DHE-PSK-NULL-SHA"
global TLS1_TXT_RSA_PSK_WITH_NULL_SHA: cstring <comptime> = "RSA-PSK-NULL-SHA"
global TLS1_TXT_RSA_WITH_AES_128_SHA: cstring <comptime> = "AES128-SHA"
global TLS1_TXT_DH_DSS_WITH_AES_128_SHA: cstring <comptime> = "DH-DSS-AES128-SHA"
global TLS1_TXT_DH_RSA_WITH_AES_128_SHA: cstring <comptime> = "DH-RSA-AES128-SHA"
global TLS1_TXT_DHE_DSS_WITH_AES_128_SHA: cstring <comptime> = "DHE-DSS-AES128-SHA"
global TLS1_TXT_DHE_RSA_WITH_AES_128_SHA: cstring <comptime> = "DHE-RSA-AES128-SHA"
global TLS1_TXT_ADH_WITH_AES_128_SHA: cstring <comptime> = "ADH-AES128-SHA"
global TLS1_TXT_RSA_WITH_AES_256_SHA: cstring <comptime> = "AES256-SHA"
global TLS1_TXT_DH_DSS_WITH_AES_256_SHA: cstring <comptime> = "DH-DSS-AES256-SHA"
global TLS1_TXT_DH_RSA_WITH_AES_256_SHA: cstring <comptime> = "DH-RSA-AES256-SHA"
global TLS1_TXT_DHE_DSS_WITH_AES_256_SHA: cstring <comptime> = "DHE-DSS-AES256-SHA"
global TLS1_TXT_DHE_RSA_WITH_AES_256_SHA: cstring <comptime> = "DHE-RSA-AES256-SHA"
global TLS1_TXT_ADH_WITH_AES_256_SHA: cstring <comptime> = "ADH-AES256-SHA"
global TLS1_TXT_ECDH_ECDSA_WITH_NULL_SHA: cstring <comptime> = "ECDH-ECDSA-NULL-SHA"
global TLS1_TXT_ECDH_ECDSA_WITH_RC4_128_SHA: cstring <comptime> = "ECDH-ECDSA-RC4-SHA"
global TLS1_TXT_ECDH_ECDSA_WITH_DES_192_CBC3_SHA: cstring <comptime> = "ECDH-ECDSA-DES-CBC3-SHA"
global TLS1_TXT_ECDH_ECDSA_WITH_AES_128_CBC_SHA: cstring <comptime> = "ECDH-ECDSA-AES128-SHA"
global TLS1_TXT_ECDH_ECDSA_WITH_AES_256_CBC_SHA: cstring <comptime> = "ECDH-ECDSA-AES256-SHA"
global TLS1_TXT_ECDHE_ECDSA_WITH_NULL_SHA: cstring <comptime> = "ECDHE-ECDSA-NULL-SHA"
global TLS1_TXT_ECDHE_ECDSA_WITH_RC4_128_SHA: cstring <comptime> = "ECDHE-ECDSA-RC4-SHA"
global TLS1_TXT_ECDHE_ECDSA_WITH_DES_192_CBC3_SHA: cstring <comptime> = "ECDHE-ECDSA-DES-CBC3-SHA"
global TLS1_TXT_ECDHE_ECDSA_WITH_AES_128_CBC_SHA: cstring <comptime> = "ECDHE-ECDSA-AES128-SHA"
global TLS1_TXT_ECDHE_ECDSA_WITH_AES_256_CBC_SHA: cstring <comptime> = "ECDHE-ECDSA-AES256-SHA"
global TLS1_TXT_ECDH_RSA_WITH_NULL_SHA: cstring <comptime> = "ECDH-RSA-NULL-SHA"
global TLS1_TXT_ECDH_RSA_WITH_RC4_128_SHA: cstring <comptime> = "ECDH-RSA-RC4-SHA"
global TLS1_TXT_ECDH_RSA_WITH_DES_192_CBC3_SHA: cstring <comptime> = "ECDH-RSA-DES-CBC3-SHA"
global TLS1_TXT_ECDH_RSA_WITH_AES_128_CBC_SHA: cstring <comptime> = "ECDH-RSA-AES128-SHA"
global TLS1_TXT_ECDH_RSA_WITH_AES_256_CBC_SHA: cstring <comptime> = "ECDH-RSA-AES256-SHA"
global TLS1_TXT_ECDHE_RSA_WITH_NULL_SHA: cstring <comptime> = "ECDHE-RSA-NULL-SHA"
global TLS1_TXT_ECDHE_RSA_WITH_RC4_128_SHA: cstring <comptime> = "ECDHE-RSA-RC4-SHA"
global TLS1_TXT_ECDHE_RSA_WITH_DES_192_CBC3_SHA: cstring <comptime> = "ECDHE-RSA-DES-CBC3-SHA"
global TLS1_TXT_ECDHE_RSA_WITH_AES_128_CBC_SHA: cstring <comptime> = "ECDHE-RSA-AES128-SHA"
global TLS1_TXT_ECDHE_RSA_WITH_AES_256_CBC_SHA: cstring <comptime> = "ECDHE-RSA-AES256-SHA"
global TLS1_TXT_ECDH_anon_WITH_NULL_SHA: cstring <comptime> = "AECDH-NULL-SHA"
global TLS1_TXT_ECDH_anon_WITH_RC4_128_SHA: cstring <comptime> = "AECDH-RC4-SHA"
global TLS1_TXT_ECDH_anon_WITH_DES_192_CBC3_SHA: cstring <comptime> = "AECDH-DES-CBC3-SHA"
global TLS1_TXT_ECDH_anon_WITH_AES_128_CBC_SHA: cstring <comptime> = "AECDH-AES128-SHA"
global TLS1_TXT_ECDH_anon_WITH_AES_256_CBC_SHA: cstring <comptime> = "AECDH-AES256-SHA"
global TLS1_TXT_PSK_WITH_RC4_128_SHA: cstring <comptime> = "PSK-RC4-SHA"
global TLS1_TXT_PSK_WITH_3DES_EDE_CBC_SHA: cstring <comptime> = "PSK-3DES-EDE-CBC-SHA"
global TLS1_TXT_PSK_WITH_AES_128_CBC_SHA: cstring <comptime> = "PSK-AES128-CBC-SHA"
global TLS1_TXT_PSK_WITH_AES_256_CBC_SHA: cstring <comptime> = "PSK-AES256-CBC-SHA"
global TLS1_TXT_DHE_PSK_WITH_RC4_128_SHA: cstring <comptime> = "DHE-PSK-RC4-SHA"
global TLS1_TXT_DHE_PSK_WITH_3DES_EDE_CBC_SHA: cstring <comptime> = "DHE-PSK-3DES-EDE-CBC-SHA"
global TLS1_TXT_DHE_PSK_WITH_AES_128_CBC_SHA: cstring <comptime> = "DHE-PSK-AES128-CBC-SHA"
global TLS1_TXT_DHE_PSK_WITH_AES_256_CBC_SHA: cstring <comptime> = "DHE-PSK-AES256-CBC-SHA"
global TLS1_TXT_RSA_PSK_WITH_RC4_128_SHA: cstring <comptime> = "RSA-PSK-RC4-SHA"
global TLS1_TXT_RSA_PSK_WITH_3DES_EDE_CBC_SHA: cstring <comptime> = "RSA-PSK-3DES-EDE-CBC-SHA"
global TLS1_TXT_RSA_PSK_WITH_AES_128_CBC_SHA: cstring <comptime> = "RSA-PSK-AES128-CBC-SHA"
global TLS1_TXT_RSA_PSK_WITH_AES_256_CBC_SHA: cstring <comptime> = "RSA-PSK-AES256-CBC-SHA"
global TLS1_TXT_DHE_PSK_WITH_AES_128_GCM_SHA256: cstring <comptime> = "DHE-PSK-AES128-GCM-SHA256"
global TLS1_TXT_DHE_PSK_WITH_AES_256_GCM_SHA384: cstring <comptime> = "DHE-PSK-AES256-GCM-SHA384"
global TLS1_TXT_RSA_PSK_WITH_AES_128_GCM_SHA256: cstring <comptime> = "RSA-PSK-AES128-GCM-SHA256"
global TLS1_TXT_RSA_PSK_WITH_AES_256_GCM_SHA384: cstring <comptime> = "RSA-PSK-AES256-GCM-SHA384"
global TLS1_TXT_PSK_WITH_AES_128_CBC_SHA256: cstring <comptime> = "PSK-AES128-CBC-SHA256"
global TLS1_TXT_PSK_WITH_AES_256_CBC_SHA384: cstring <comptime> = "PSK-AES256-CBC-SHA384"
global TLS1_TXT_PSK_WITH_NULL_SHA256: cstring <comptime> = "PSK-NULL-SHA256"
global TLS1_TXT_PSK_WITH_NULL_SHA384: cstring <comptime> = "PSK-NULL-SHA384"
global TLS1_TXT_DHE_PSK_WITH_AES_128_CBC_SHA256: cstring <comptime> = "DHE-PSK-AES128-CBC-SHA256"
global TLS1_TXT_DHE_PSK_WITH_AES_256_CBC_SHA384: cstring <comptime> = "DHE-PSK-AES256-CBC-SHA384"
global TLS1_TXT_DHE_PSK_WITH_NULL_SHA256: cstring <comptime> = "DHE-PSK-NULL-SHA256"
global TLS1_TXT_DHE_PSK_WITH_NULL_SHA384: cstring <comptime> = "DHE-PSK-NULL-SHA384"
global TLS1_TXT_RSA_PSK_WITH_AES_128_CBC_SHA256: cstring <comptime> = "RSA-PSK-AES128-CBC-SHA256"
global TLS1_TXT_RSA_PSK_WITH_AES_256_CBC_SHA384: cstring <comptime> = "RSA-PSK-AES256-CBC-SHA384"
global TLS1_TXT_RSA_PSK_WITH_NULL_SHA256: cstring <comptime> = "RSA-PSK-NULL-SHA256"
global TLS1_TXT_RSA_PSK_WITH_NULL_SHA384: cstring <comptime> = "RSA-PSK-NULL-SHA384"
global TLS1_TXT_SRP_SHA_WITH_3DES_EDE_CBC_SHA: cstring <comptime> = "SRP-3DES-EDE-CBC-SHA"
global TLS1_TXT_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA: cstring <comptime> = "SRP-RSA-3DES-EDE-CBC-SHA"
global TLS1_TXT_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA: cstring <comptime> = "SRP-DSS-3DES-EDE-CBC-SHA"
global TLS1_TXT_SRP_SHA_WITH_AES_128_CBC_SHA: cstring <comptime> = "SRP-AES-128-CBC-SHA"
global TLS1_TXT_SRP_SHA_RSA_WITH_AES_128_CBC_SHA: cstring <comptime> = "SRP-RSA-AES-128-CBC-SHA"
global TLS1_TXT_SRP_SHA_DSS_WITH_AES_128_CBC_SHA: cstring <comptime> = "SRP-DSS-AES-128-CBC-SHA"
global TLS1_TXT_SRP_SHA_WITH_AES_256_CBC_SHA: cstring <comptime> = "SRP-AES-256-CBC-SHA"
global TLS1_TXT_SRP_SHA_RSA_WITH_AES_256_CBC_SHA: cstring <comptime> = "SRP-RSA-AES-256-CBC-SHA"
global TLS1_TXT_SRP_SHA_DSS_WITH_AES_256_CBC_SHA: cstring <comptime> = "SRP-DSS-AES-256-CBC-SHA"
global TLS1_TXT_RSA_WITH_CAMELLIA_128_CBC_SHA: cstring <comptime> = "CAMELLIA128-SHA"
global TLS1_TXT_DH_DSS_WITH_CAMELLIA_128_CBC_SHA: cstring <comptime> = "DH-DSS-CAMELLIA128-SHA"
global TLS1_TXT_DH_RSA_WITH_CAMELLIA_128_CBC_SHA: cstring <comptime> = "DH-RSA-CAMELLIA128-SHA"
global TLS1_TXT_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA: cstring <comptime> = "DHE-DSS-CAMELLIA128-SHA"
global TLS1_TXT_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA: cstring <comptime> = "DHE-RSA-CAMELLIA128-SHA"
global TLS1_TXT_ADH_WITH_CAMELLIA_128_CBC_SHA: cstring <comptime> = "ADH-CAMELLIA128-SHA"
global TLS1_TXT_RSA_WITH_CAMELLIA_256_CBC_SHA: cstring <comptime> = "CAMELLIA256-SHA"
global TLS1_TXT_DH_DSS_WITH_CAMELLIA_256_CBC_SHA: cstring <comptime> = "DH-DSS-CAMELLIA256-SHA"
global TLS1_TXT_DH_RSA_WITH_CAMELLIA_256_CBC_SHA: cstring <comptime> = "DH-RSA-CAMELLIA256-SHA"
global TLS1_TXT_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA: cstring <comptime> = "DHE-DSS-CAMELLIA256-SHA"
global TLS1_TXT_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA: cstring <comptime> = "DHE-RSA-CAMELLIA256-SHA"
global TLS1_TXT_ADH_WITH_CAMELLIA_256_CBC_SHA: cstring <comptime> = "ADH-CAMELLIA256-SHA"
global TLS1_TXT_RSA_WITH_CAMELLIA_128_CBC_SHA256: cstring <comptime> = "CAMELLIA128-SHA256"
global TLS1_TXT_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256: cstring <comptime> = "DH-DSS-CAMELLIA128-SHA256"
global TLS1_TXT_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256: cstring <comptime> = "DH-RSA-CAMELLIA128-SHA256"
global TLS1_TXT_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256: cstring <comptime> = "DHE-DSS-CAMELLIA128-SHA256"
global TLS1_TXT_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256: cstring <comptime> = "DHE-RSA-CAMELLIA128-SHA256"
global TLS1_TXT_ADH_WITH_CAMELLIA_128_CBC_SHA256: cstring <comptime> = "ADH-CAMELLIA128-SHA256"
global TLS1_TXT_RSA_WITH_CAMELLIA_256_CBC_SHA256: cstring <comptime> = "CAMELLIA256-SHA256"
global TLS1_TXT_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256: cstring <comptime> = "DH-DSS-CAMELLIA256-SHA256"
global TLS1_TXT_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256: cstring <comptime> = "DH-RSA-CAMELLIA256-SHA256"
global TLS1_TXT_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256: cstring <comptime> = "DHE-DSS-CAMELLIA256-SHA256"
global TLS1_TXT_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256: cstring <comptime> = "DHE-RSA-CAMELLIA256-SHA256"
global TLS1_TXT_ADH_WITH_CAMELLIA_256_CBC_SHA256: cstring <comptime> = "ADH-CAMELLIA256-SHA256"
global TLS1_TXT_PSK_WITH_CAMELLIA_128_CBC_SHA256: cstring <comptime> = "PSK-CAMELLIA128-SHA256"
global TLS1_TXT_PSK_WITH_CAMELLIA_256_CBC_SHA384: cstring <comptime> = "PSK-CAMELLIA256-SHA384"
global TLS1_TXT_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256: cstring <comptime> = "DHE-PSK-CAMELLIA128-SHA256"
global TLS1_TXT_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384: cstring <comptime> = "DHE-PSK-CAMELLIA256-SHA384"
global TLS1_TXT_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256: cstring <comptime> = "RSA-PSK-CAMELLIA128-SHA256"
global TLS1_TXT_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384: cstring <comptime> = "RSA-PSK-CAMELLIA256-SHA384"
global TLS1_TXT_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256: cstring <comptime> = "ECDHE-PSK-CAMELLIA128-SHA256"
global TLS1_TXT_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384: cstring <comptime> = "ECDHE-PSK-CAMELLIA256-SHA384"
global TLS1_TXT_RSA_WITH_SEED_SHA: cstring <comptime> = "SEED-SHA"
global TLS1_TXT_DH_DSS_WITH_SEED_SHA: cstring <comptime> = "DH-DSS-SEED-SHA"
global TLS1_TXT_DH_RSA_WITH_SEED_SHA: cstring <comptime> = "DH-RSA-SEED-SHA"
global TLS1_TXT_DHE_DSS_WITH_SEED_SHA: cstring <comptime> = "DHE-DSS-SEED-SHA"
global TLS1_TXT_DHE_RSA_WITH_SEED_SHA: cstring <comptime> = "DHE-RSA-SEED-SHA"
global TLS1_TXT_ADH_WITH_SEED_SHA: cstring <comptime> = "ADH-SEED-SHA"
global TLS1_TXT_RSA_WITH_NULL_SHA256: cstring <comptime> = "NULL-SHA256"
global TLS1_TXT_RSA_WITH_AES_128_SHA256: cstring <comptime> = "AES128-SHA256"
global TLS1_TXT_RSA_WITH_AES_256_SHA256: cstring <comptime> = "AES256-SHA256"
global TLS1_TXT_DH_DSS_WITH_AES_128_SHA256: cstring <comptime> = "DH-DSS-AES128-SHA256"
global TLS1_TXT_DH_RSA_WITH_AES_128_SHA256: cstring <comptime> = "DH-RSA-AES128-SHA256"
global TLS1_TXT_DHE_DSS_WITH_AES_128_SHA256: cstring <comptime> = "DHE-DSS-AES128-SHA256"
global TLS1_TXT_DHE_RSA_WITH_AES_128_SHA256: cstring <comptime> = "DHE-RSA-AES128-SHA256"
global TLS1_TXT_DH_DSS_WITH_AES_256_SHA256: cstring <comptime> = "DH-DSS-AES256-SHA256"
global TLS1_TXT_DH_RSA_WITH_AES_256_SHA256: cstring <comptime> = "DH-RSA-AES256-SHA256"
global TLS1_TXT_DHE_DSS_WITH_AES_256_SHA256: cstring <comptime> = "DHE-DSS-AES256-SHA256"
global TLS1_TXT_DHE_RSA_WITH_AES_256_SHA256: cstring <comptime> = "DHE-RSA-AES256-SHA256"
global TLS1_TXT_ADH_WITH_AES_128_SHA256: cstring <comptime> = "ADH-AES128-SHA256"
global TLS1_TXT_ADH_WITH_AES_256_SHA256: cstring <comptime> = "ADH-AES256-SHA256"
global TLS1_TXT_RSA_WITH_AES_128_GCM_SHA256: cstring <comptime> = "AES128-GCM-SHA256"
global TLS1_TXT_RSA_WITH_AES_256_GCM_SHA384: cstring <comptime> = "AES256-GCM-SHA384"
global TLS1_TXT_DHE_RSA_WITH_AES_128_GCM_SHA256: cstring <comptime> = "DHE-RSA-AES128-GCM-SHA256"
global TLS1_TXT_DHE_RSA_WITH_AES_256_GCM_SHA384: cstring <comptime> = "DHE-RSA-AES256-GCM-SHA384"
global TLS1_TXT_DH_RSA_WITH_AES_128_GCM_SHA256: cstring <comptime> = "DH-RSA-AES128-GCM-SHA256"
global TLS1_TXT_DH_RSA_WITH_AES_256_GCM_SHA384: cstring <comptime> = "DH-RSA-AES256-GCM-SHA384"
global TLS1_TXT_DHE_DSS_WITH_AES_128_GCM_SHA256: cstring <comptime> = "DHE-DSS-AES128-GCM-SHA256"
global TLS1_TXT_DHE_DSS_WITH_AES_256_GCM_SHA384: cstring <comptime> = "DHE-DSS-AES256-GCM-SHA384"
global TLS1_TXT_DH_DSS_WITH_AES_128_GCM_SHA256: cstring <comptime> = "DH-DSS-AES128-GCM-SHA256"
global TLS1_TXT_DH_DSS_WITH_AES_256_GCM_SHA384: cstring <comptime> = "DH-DSS-AES256-GCM-SHA384"
global TLS1_TXT_ADH_WITH_AES_128_GCM_SHA256: cstring <comptime> = "ADH-AES128-GCM-SHA256"
global TLS1_TXT_ADH_WITH_AES_256_GCM_SHA384: cstring <comptime> = "ADH-AES256-GCM-SHA384"
global TLS1_TXT_RSA_WITH_AES_128_CCM: cstring <comptime> = "AES128-CCM"
global TLS1_TXT_RSA_WITH_AES_256_CCM: cstring <comptime> = "AES256-CCM"
global TLS1_TXT_DHE_RSA_WITH_AES_128_CCM: cstring <comptime> = "DHE-RSA-AES128-CCM"
global TLS1_TXT_DHE_RSA_WITH_AES_256_CCM: cstring <comptime> = "DHE-RSA-AES256-CCM"
global TLS1_TXT_RSA_WITH_AES_128_CCM_8: cstring <comptime> = "AES128-CCM8"
global TLS1_TXT_RSA_WITH_AES_256_CCM_8: cstring <comptime> = "AES256-CCM8"
global TLS1_TXT_DHE_RSA_WITH_AES_128_CCM_8: cstring <comptime> = "DHE-RSA-AES128-CCM8"
global TLS1_TXT_DHE_RSA_WITH_AES_256_CCM_8: cstring <comptime> = "DHE-RSA-AES256-CCM8"
global TLS1_TXT_PSK_WITH_AES_128_CCM: cstring <comptime> = "PSK-AES128-CCM"
global TLS1_TXT_PSK_WITH_AES_256_CCM: cstring <comptime> = "PSK-AES256-CCM"
global TLS1_TXT_DHE_PSK_WITH_AES_128_CCM: cstring <comptime> = "DHE-PSK-AES128-CCM"
global TLS1_TXT_DHE_PSK_WITH_AES_256_CCM: cstring <comptime> = "DHE-PSK-AES256-CCM"
global TLS1_TXT_PSK_WITH_AES_128_CCM_8: cstring <comptime> = "PSK-AES128-CCM8"
global TLS1_TXT_PSK_WITH_AES_256_CCM_8: cstring <comptime> = "PSK-AES256-CCM8"
global TLS1_TXT_DHE_PSK_WITH_AES_128_CCM_8: cstring <comptime> = "DHE-PSK-AES128-CCM8"
global TLS1_TXT_DHE_PSK_WITH_AES_256_CCM_8: cstring <comptime> = "DHE-PSK-AES256-CCM8"
global TLS1_TXT_ECDHE_ECDSA_WITH_AES_128_CCM: cstring <comptime> = "ECDHE-ECDSA-AES128-CCM"
global TLS1_TXT_ECDHE_ECDSA_WITH_AES_256_CCM: cstring <comptime> = "ECDHE-ECDSA-AES256-CCM"
global TLS1_TXT_ECDHE_ECDSA_WITH_AES_128_CCM_8: cstring <comptime> = "ECDHE-ECDSA-AES128-CCM8"
global TLS1_TXT_ECDHE_ECDSA_WITH_AES_256_CCM_8: cstring <comptime> = "ECDHE-ECDSA-AES256-CCM8"
global TLS1_TXT_ECDHE_ECDSA_WITH_AES_128_SHA256: cstring <comptime> = "ECDHE-ECDSA-AES128-SHA256"
global TLS1_TXT_ECDHE_ECDSA_WITH_AES_256_SHA384: cstring <comptime> = "ECDHE-ECDSA-AES256-SHA384"
global TLS1_TXT_ECDH_ECDSA_WITH_AES_128_SHA256: cstring <comptime> = "ECDH-ECDSA-AES128-SHA256"
global TLS1_TXT_ECDH_ECDSA_WITH_AES_256_SHA384: cstring <comptime> = "ECDH-ECDSA-AES256-SHA384"
global TLS1_TXT_ECDHE_RSA_WITH_AES_128_SHA256: cstring <comptime> = "ECDHE-RSA-AES128-SHA256"
global TLS1_TXT_ECDHE_RSA_WITH_AES_256_SHA384: cstring <comptime> = "ECDHE-RSA-AES256-SHA384"
global TLS1_TXT_ECDH_RSA_WITH_AES_128_SHA256: cstring <comptime> = "ECDH-RSA-AES128-SHA256"
global TLS1_TXT_ECDH_RSA_WITH_AES_256_SHA384: cstring <comptime> = "ECDH-RSA-AES256-SHA384"
global TLS1_TXT_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256: cstring <comptime> = "ECDHE-ECDSA-AES128-GCM-SHA256"
global TLS1_TXT_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384: cstring <comptime> = "ECDHE-ECDSA-AES256-GCM-SHA384"
global TLS1_TXT_ECDH_ECDSA_WITH_AES_128_GCM_SHA256: cstring <comptime> = "ECDH-ECDSA-AES128-GCM-SHA256"
global TLS1_TXT_ECDH_ECDSA_WITH_AES_256_GCM_SHA384: cstring <comptime> = "ECDH-ECDSA-AES256-GCM-SHA384"
global TLS1_TXT_ECDHE_RSA_WITH_AES_128_GCM_SHA256: cstring <comptime> = "ECDHE-RSA-AES128-GCM-SHA256"
global TLS1_TXT_ECDHE_RSA_WITH_AES_256_GCM_SHA384: cstring <comptime> = "ECDHE-RSA-AES256-GCM-SHA384"
global TLS1_TXT_ECDH_RSA_WITH_AES_128_GCM_SHA256: cstring <comptime> = "ECDH-RSA-AES128-GCM-SHA256"
global TLS1_TXT_ECDH_RSA_WITH_AES_256_GCM_SHA384: cstring <comptime> = "ECDH-RSA-AES256-GCM-SHA384"
global TLS1_TXT_PSK_WITH_AES_128_GCM_SHA256: cstring <comptime> = "PSK-AES128-GCM-SHA256"
global TLS1_TXT_PSK_WITH_AES_256_GCM_SHA384: cstring <comptime> = "PSK-AES256-GCM-SHA384"
global TLS1_TXT_ECDHE_PSK_WITH_RC4_128_SHA: cstring <comptime> = "ECDHE-PSK-RC4-SHA"
global TLS1_TXT_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA: cstring <comptime> = "ECDHE-PSK-3DES-EDE-CBC-SHA"
global TLS1_TXT_ECDHE_PSK_WITH_AES_128_CBC_SHA: cstring <comptime> = "ECDHE-PSK-AES128-CBC-SHA"
global TLS1_TXT_ECDHE_PSK_WITH_AES_256_CBC_SHA: cstring <comptime> = "ECDHE-PSK-AES256-CBC-SHA"
global TLS1_TXT_ECDHE_PSK_WITH_AES_128_CBC_SHA256: cstring <comptime> = "ECDHE-PSK-AES128-CBC-SHA256"
global TLS1_TXT_ECDHE_PSK_WITH_AES_256_CBC_SHA384: cstring <comptime> = "ECDHE-PSK-AES256-CBC-SHA384"
global TLS1_TXT_ECDHE_PSK_WITH_NULL_SHA: cstring <comptime> = "ECDHE-PSK-NULL-SHA"
global TLS1_TXT_ECDHE_PSK_WITH_NULL_SHA256: cstring <comptime> = "ECDHE-PSK-NULL-SHA256"
global TLS1_TXT_ECDHE_PSK_WITH_NULL_SHA384: cstring <comptime> = "ECDHE-PSK-NULL-SHA384"
global TLS1_TXT_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256: cstring <comptime> = "ECDHE-ECDSA-CAMELLIA128-SHA256"
global TLS1_TXT_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384: cstring <comptime> = "ECDHE-ECDSA-CAMELLIA256-SHA384"
global TLS1_TXT_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256: cstring <comptime> = "ECDH-ECDSA-CAMELLIA128-SHA256"
global TLS1_TXT_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384: cstring <comptime> = "ECDH-ECDSA-CAMELLIA256-SHA384"
global TLS1_TXT_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256: cstring <comptime> = "ECDHE-RSA-CAMELLIA128-SHA256"
global TLS1_TXT_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384: cstring <comptime> = "ECDHE-RSA-CAMELLIA256-SHA384"
global TLS1_TXT_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256: cstring <comptime> = "ECDH-RSA-CAMELLIA128-SHA256"
global TLS1_TXT_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384: cstring <comptime> = "ECDH-RSA-CAMELLIA256-SHA384"
global TLS1_TXT_ECDHE_RSA_WITH_CHACHA20_POLY1305: cstring <comptime> = "ECDHE-RSA-CHACHA20-POLY1305"
global TLS1_TXT_ECDHE_ECDSA_WITH_CHACHA20_POLY1305: cstring <comptime> = "ECDHE-ECDSA-CHACHA20-POLY1305"
global TLS1_TXT_DHE_RSA_WITH_CHACHA20_POLY1305: cstring <comptime> = "DHE-RSA-CHACHA20-POLY1305"
global TLS1_TXT_PSK_WITH_CHACHA20_POLY1305: cstring <comptime> = "PSK-CHACHA20-POLY1305"
global TLS1_TXT_ECDHE_PSK_WITH_CHACHA20_POLY1305: cstring <comptime> = "ECDHE-PSK-CHACHA20-POLY1305"
global TLS1_TXT_DHE_PSK_WITH_CHACHA20_POLY1305: cstring <comptime> = "DHE-PSK-CHACHA20-POLY1305"
global TLS1_TXT_RSA_PSK_WITH_CHACHA20_POLY1305: cstring <comptime> = "RSA-PSK-CHACHA20-POLY1305"
global TLS1_TXT_RSA_WITH_ARIA_128_GCM_SHA256: cstring <comptime> = "ARIA128-GCM-SHA256"
global TLS1_TXT_RSA_WITH_ARIA_256_GCM_SHA384: cstring <comptime> = "ARIA256-GCM-SHA384"
global TLS1_TXT_DHE_RSA_WITH_ARIA_128_GCM_SHA256: cstring <comptime> = "DHE-RSA-ARIA128-GCM-SHA256"
global TLS1_TXT_DHE_RSA_WITH_ARIA_256_GCM_SHA384: cstring <comptime> = "DHE-RSA-ARIA256-GCM-SHA384"
global TLS1_TXT_DH_RSA_WITH_ARIA_128_GCM_SHA256: cstring <comptime> = "DH-RSA-ARIA128-GCM-SHA256"
global TLS1_TXT_DH_RSA_WITH_ARIA_256_GCM_SHA384: cstring <comptime> = "DH-RSA-ARIA256-GCM-SHA384"
global TLS1_TXT_DHE_DSS_WITH_ARIA_128_GCM_SHA256: cstring <comptime> = "DHE-DSS-ARIA128-GCM-SHA256"
global TLS1_TXT_DHE_DSS_WITH_ARIA_256_GCM_SHA384: cstring <comptime> = "DHE-DSS-ARIA256-GCM-SHA384"
global TLS1_TXT_DH_DSS_WITH_ARIA_128_GCM_SHA256: cstring <comptime> = "DH-DSS-ARIA128-GCM-SHA256"
global TLS1_TXT_DH_DSS_WITH_ARIA_256_GCM_SHA384: cstring <comptime> = "DH-DSS-ARIA256-GCM-SHA384"
global TLS1_TXT_DH_anon_WITH_ARIA_128_GCM_SHA256: cstring <comptime> = "ADH-ARIA128-GCM-SHA256"
global TLS1_TXT_DH_anon_WITH_ARIA_256_GCM_SHA384: cstring <comptime> = "ADH-ARIA256-GCM-SHA384"
global TLS1_TXT_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256: cstring <comptime> = "ECDHE-ECDSA-ARIA128-GCM-SHA256"
global TLS1_TXT_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384: cstring <comptime> = "ECDHE-ECDSA-ARIA256-GCM-SHA384"
global TLS1_TXT_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256: cstring <comptime> = "ECDH-ECDSA-ARIA128-GCM-SHA256"
global TLS1_TXT_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384: cstring <comptime> = "ECDH-ECDSA-ARIA256-GCM-SHA384"
global TLS1_TXT_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256: cstring <comptime> = "ECDHE-ARIA128-GCM-SHA256"
global TLS1_TXT_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384: cstring <comptime> = "ECDHE-ARIA256-GCM-SHA384"
global TLS1_TXT_ECDH_RSA_WITH_ARIA_128_GCM_SHA256: cstring <comptime> = "ECDH-ARIA128-GCM-SHA256"
global TLS1_TXT_ECDH_RSA_WITH_ARIA_256_GCM_SHA384: cstring <comptime> = "ECDH-ARIA256-GCM-SHA384"
global TLS1_TXT_PSK_WITH_ARIA_128_GCM_SHA256: cstring <comptime> = "PSK-ARIA128-GCM-SHA256"
global TLS1_TXT_PSK_WITH_ARIA_256_GCM_SHA384: cstring <comptime> = "PSK-ARIA256-GCM-SHA384"
global TLS1_TXT_DHE_PSK_WITH_ARIA_128_GCM_SHA256: cstring <comptime> = "DHE-PSK-ARIA128-GCM-SHA256"
global TLS1_TXT_DHE_PSK_WITH_ARIA_256_GCM_SHA384: cstring <comptime> = "DHE-PSK-ARIA256-GCM-SHA384"
global TLS1_TXT_RSA_PSK_WITH_ARIA_128_GCM_SHA256: cstring <comptime> = "RSA-PSK-ARIA128-GCM-SHA256"
global TLS1_TXT_RSA_PSK_WITH_ARIA_256_GCM_SHA384: cstring <comptime> = "RSA-PSK-ARIA256-GCM-SHA384"
global TLS_CT_RSA_SIGN: cint <comptime> = 1
global TLS_CT_DSS_SIGN: cint <comptime> = 2
global TLS_CT_RSA_FIXED_DH: cint <comptime> = 3
global TLS_CT_DSS_FIXED_DH: cint <comptime> = 4
global TLS_CT_ECDSA_SIGN: cint <comptime> = 64
global TLS_CT_RSA_FIXED_ECDH: cint <comptime> = 65
global TLS_CT_ECDSA_FIXED_ECDH: cint <comptime> = 66
global TLS_CT_GOST01_SIGN: cint <comptime> = 22
global TLS_CT_GOST12_IANA_SIGN: cint <comptime> = 67
global TLS_CT_GOST12_IANA_512_SIGN: cint <comptime> = 68
global TLS_CT_GOST12_LEGACY_SIGN: cint <comptime> = 238
global TLS_CT_GOST12_LEGACY_512_SIGN: cint <comptime> = 239
global TLS_CT_GOST12_SIGN: cint <comptime> = 238
global TLS_CT_GOST12_512_SIGN: cint <comptime> = 239
global TLS_CT_NUMBER: cint <comptime> = 12
global TLS1_FINISH_MAC_LENGTH: cint <comptime> = 12
global TLS_MD_MAX_CONST_SIZE: cint <comptime> = 22
global TLS_MD_CLIENT_FINISH_CONST: cstring <comptime> = "client finished"
global TLS_MD_CLIENT_FINISH_CONST_SIZE: cint <comptime> = 15
global TLS_MD_SERVER_FINISH_CONST: cstring <comptime> = "server finished"
global TLS_MD_SERVER_FINISH_CONST_SIZE: cint <comptime> = 15
global TLS_MD_KEY_EXPANSION_CONST: cstring <comptime> = "key expansion"
global TLS_MD_KEY_EXPANSION_CONST_SIZE: cint <comptime> = 13
global TLS_MD_CLIENT_WRITE_KEY_CONST: cstring <comptime> = "client write key"
global TLS_MD_CLIENT_WRITE_KEY_CONST_SIZE: cint <comptime> = 16
global TLS_MD_SERVER_WRITE_KEY_CONST: cstring <comptime> = "server write key"
global TLS_MD_SERVER_WRITE_KEY_CONST_SIZE: cint <comptime> = 16
global TLS_MD_IV_BLOCK_CONST: cstring <comptime> = "IV block"
global TLS_MD_IV_BLOCK_CONST_SIZE: cint <comptime> = 8
global TLS_MD_MASTER_SECRET_CONST: cstring <comptime> = "master secret"
global TLS_MD_MASTER_SECRET_CONST_SIZE: cint <comptime> = 13
global TLS_MD_EXTENDED_MASTER_SECRET_CONST: cstring <comptime> = "extended master secret"
global TLS_MD_EXTENDED_MASTER_SECRET_CONST_SIZE: cint <comptime> = 22
global OSSL_QUIC_ERR_NO_ERROR: cint <comptime> = 0
global OSSL_QUIC_ERR_INTERNAL_ERROR: cint <comptime> = 1
global OSSL_QUIC_ERR_CONNECTION_REFUSED: cint <comptime> = 2
global OSSL_QUIC_ERR_FLOW_CONTROL_ERROR: cint <comptime> = 3
global OSSL_QUIC_ERR_STREAM_LIMIT_ERROR: cint <comptime> = 4
global OSSL_QUIC_ERR_STREAM_STATE_ERROR: cint <comptime> = 5
global OSSL_QUIC_ERR_FINAL_SIZE_ERROR: cint <comptime> = 6
global OSSL_QUIC_ERR_FRAME_ENCODING_ERROR: cint <comptime> = 7
global OSSL_QUIC_ERR_TRANSPORT_PARAMETER_ERROR: cint <comptime> = 8
global OSSL_QUIC_ERR_CONNECTION_ID_LIMIT_ERROR: cint <comptime> = 9
global OSSL_QUIC_ERR_PROTOCOL_VIOLATION: cint <comptime> = 10
global OSSL_QUIC_ERR_INVALID_TOKEN: cint <comptime> = 11
global OSSL_QUIC_ERR_APPLICATION_ERROR: cint <comptime> = 12
global OSSL_QUIC_ERR_CRYPTO_BUFFER_EXCEEDED: cint <comptime> = 13
global OSSL_QUIC_ERR_KEY_UPDATE_ERROR: cint <comptime> = 14
global OSSL_QUIC_ERR_AEAD_LIMIT_REACHED: cint <comptime> = 15
global OSSL_QUIC_ERR_NO_VIABLE_PATH: cint <comptime> = 16
global OSSL_QUIC_ERR_CRYPTO_ERR_BEGIN: cint <comptime> = 256
global OSSL_QUIC_ERR_CRYPTO_ERR_END: cint <comptime> = 511
global OSSL_QUIC_LOCAL_ERR_IDLE_TIMEOUT: uint64 <cimport,nodecl,const>
global SSL_KEY_UPDATE_NONE: cint <comptime> = -1
global SSL_KEY_UPDATE_NOT_REQUESTED: cint <comptime> = 0
global SSL_KEY_UPDATE_REQUESTED: cint <comptime> = 1
global SSL_ST_CONNECT: cint <comptime> = 4096
global SSL_ST_ACCEPT: cint <comptime> = 8192
global SSL_ST_MASK: cint <comptime> = 4095
global SSL_CB_LOOP: cint <comptime> = 1
global SSL_CB_EXIT: cint <comptime> = 2
global SSL_CB_READ: cint <comptime> = 4
global SSL_CB_WRITE: cint <comptime> = 8
global SSL_CB_ALERT: cint <comptime> = 16384
global SSL_CB_READ_ALERT: cint <comptime> = 16388
global SSL_CB_WRITE_ALERT: cint <comptime> = 16392
global SSL_CB_ACCEPT_LOOP: cint <comptime> = 8193
global SSL_CB_ACCEPT_EXIT: cint <comptime> = 8194
global SSL_CB_CONNECT_LOOP: cint <comptime> = 4097
global SSL_CB_CONNECT_EXIT: cint <comptime> = 4098
global SSL_CB_HANDSHAKE_START: cint <comptime> = 16
global SSL_CB_HANDSHAKE_DONE: cint <comptime> = 32
global SSL_ST_READ_HEADER: cint <comptime> = 240
global SSL_ST_READ_BODY: cint <comptime> = 241
global SSL_ST_READ_DONE: cint <comptime> = 242
global SSL_VERIFY_NONE: cint <comptime> = 0
global SSL_VERIFY_PEER: cint <comptime> = 1
global SSL_VERIFY_FAIL_IF_NO_PEER_CERT: cint <comptime> = 2
global SSL_VERIFY_CLIENT_ONCE: cint <comptime> = 4
global SSL_VERIFY_POST_HANDSHAKE: cint <comptime> = 8
global SSL_AD_REASON_OFFSET: cint <comptime> = 1000
global SSL_AD_CLOSE_NOTIFY: cint <comptime> = 0
global SSL_AD_UNEXPECTED_MESSAGE: cint <comptime> = 10
global SSL_AD_BAD_RECORD_MAC: cint <comptime> = 20
global SSL_AD_DECRYPTION_FAILED: cint <comptime> = 21
global SSL_AD_RECORD_OVERFLOW: cint <comptime> = 22
global SSL_AD_DECOMPRESSION_FAILURE: cint <comptime> = 30
global SSL_AD_HANDSHAKE_FAILURE: cint <comptime> = 40
global SSL_AD_NO_CERTIFICATE: cint <comptime> = 41
global SSL_AD_BAD_CERTIFICATE: cint <comptime> = 42
global SSL_AD_UNSUPPORTED_CERTIFICATE: cint <comptime> = 43
global SSL_AD_CERTIFICATE_REVOKED: cint <comptime> = 44
global SSL_AD_CERTIFICATE_EXPIRED: cint <comptime> = 45
global SSL_AD_CERTIFICATE_UNKNOWN: cint <comptime> = 46
global SSL_AD_ILLEGAL_PARAMETER: cint <comptime> = 47
global SSL_AD_UNKNOWN_CA: cint <comptime> = 48
global SSL_AD_ACCESS_DENIED: cint <comptime> = 49
global SSL_AD_DECODE_ERROR: cint <comptime> = 50
global SSL_AD_DECRYPT_ERROR: cint <comptime> = 51
global SSL_AD_EXPORT_RESTRICTION: cint <comptime> = 60
global SSL_AD_PROTOCOL_VERSION: cint <comptime> = 70
global SSL_AD_INSUFFICIENT_SECURITY: cint <comptime> = 71
global SSL_AD_INTERNAL_ERROR: cint <comptime> = 80
global SSL_AD_USER_CANCELLED: cint <comptime> = 90
global SSL_AD_NO_RENEGOTIATION: cint <comptime> = 100
global SSL_AD_MISSING_EXTENSION: cint <comptime> = 109
global SSL_AD_CERTIFICATE_REQUIRED: cint <comptime> = 116
global SSL_AD_UNSUPPORTED_EXTENSION: cint <comptime> = 110
global SSL_AD_CERTIFICATE_UNOBTAINABLE: cint <comptime> = 111
global SSL_AD_UNRECOGNIZED_NAME: cint <comptime> = 112
global SSL_AD_BAD_CERTIFICATE_STATUS_RESPONSE: cint <comptime> = 113
global SSL_AD_BAD_CERTIFICATE_HASH_VALUE: cint <comptime> = 114
global SSL_AD_UNKNOWN_PSK_IDENTITY: cint <comptime> = 115
global SSL_AD_INAPPROPRIATE_FALLBACK: cint <comptime> = 86
global SSL_AD_NO_APPLICATION_PROTOCOL: cint <comptime> = 120
global SSL_ERROR_NONE: cint <comptime> = 0
global SSL_ERROR_SSL: cint <comptime> = 1
global SSL_ERROR_WANT_READ: cint <comptime> = 2
global SSL_ERROR_WANT_WRITE: cint <comptime> = 3
global SSL_ERROR_WANT_X509_LOOKUP: cint <comptime> = 4
global SSL_ERROR_SYSCALL: cint <comptime> = 5
global SSL_ERROR_ZERO_RETURN: cint <comptime> = 6
global SSL_ERROR_WANT_CONNECT: cint <comptime> = 7
global SSL_ERROR_WANT_ACCEPT: cint <comptime> = 8
global SSL_ERROR_WANT_ASYNC: cint <comptime> = 9
global SSL_ERROR_WANT_ASYNC_JOB: cint <comptime> = 10
global SSL_ERROR_WANT_CLIENT_HELLO_CB: cint <comptime> = 11
global SSL_ERROR_WANT_RETRY_VERIFY: cint <comptime> = 12
global SSL_CTRL_SET_TMP_DH: cint <comptime> = 3
global SSL_CTRL_SET_TMP_ECDH: cint <comptime> = 4
global SSL_CTRL_SET_TMP_DH_CB: cint <comptime> = 6
global SSL_CTRL_GET_CLIENT_CERT_REQUEST: cint <comptime> = 9
global SSL_CTRL_GET_NUM_RENEGOTIATIONS: cint <comptime> = 10
global SSL_CTRL_CLEAR_NUM_RENEGOTIATIONS: cint <comptime> = 11
global SSL_CTRL_GET_TOTAL_RENEGOTIATIONS: cint <comptime> = 12
global SSL_CTRL_GET_FLAGS: cint <comptime> = 13
global SSL_CTRL_EXTRA_CHAIN_CERT: cint <comptime> = 14
global SSL_CTRL_SET_MSG_CALLBACK: cint <comptime> = 15
global SSL_CTRL_SET_MSG_CALLBACK_ARG: cint <comptime> = 16
global SSL_CTRL_SET_MTU: cint <comptime> = 17
global SSL_CTRL_SESS_NUMBER: cint <comptime> = 20
global SSL_CTRL_SESS_CONNECT: cint <comptime> = 21
global SSL_CTRL_SESS_CONNECT_GOOD: cint <comptime> = 22
global SSL_CTRL_SESS_CONNECT_RENEGOTIATE: cint <comptime> = 23
global SSL_CTRL_SESS_ACCEPT: cint <comptime> = 24
global SSL_CTRL_SESS_ACCEPT_GOOD: cint <comptime> = 25
global SSL_CTRL_SESS_ACCEPT_RENEGOTIATE: cint <comptime> = 26
global SSL_CTRL_SESS_HIT: cint <comptime> = 27
global SSL_CTRL_SESS_CB_HIT: cint <comptime> = 28
global SSL_CTRL_SESS_MISSES: cint <comptime> = 29
global SSL_CTRL_SESS_TIMEOUTS: cint <comptime> = 30
global SSL_CTRL_SESS_CACHE_FULL: cint <comptime> = 31
global SSL_CTRL_MODE: cint <comptime> = 33
global SSL_CTRL_GET_READ_AHEAD: cint <comptime> = 40
global SSL_CTRL_SET_READ_AHEAD: cint <comptime> = 41
global SSL_CTRL_SET_SESS_CACHE_SIZE: cint <comptime> = 42
global SSL_CTRL_GET_SESS_CACHE_SIZE: cint <comptime> = 43
global SSL_CTRL_SET_SESS_CACHE_MODE: cint <comptime> = 44
global SSL_CTRL_GET_SESS_CACHE_MODE: cint <comptime> = 45
global SSL_CTRL_GET_MAX_CERT_LIST: cint <comptime> = 50
global SSL_CTRL_SET_MAX_CERT_LIST: cint <comptime> = 51
global SSL_CTRL_SET_MAX_SEND_FRAGMENT: cint <comptime> = 52
global SSL_CTRL_SET_TLSEXT_SERVERNAME_CB: cint <comptime> = 53
global SSL_CTRL_SET_TLSEXT_SERVERNAME_ARG: cint <comptime> = 54
global SSL_CTRL_SET_TLSEXT_HOSTNAME: cint <comptime> = 55
global SSL_CTRL_SET_TLSEXT_DEBUG_CB: cint <comptime> = 56
global SSL_CTRL_SET_TLSEXT_DEBUG_ARG: cint <comptime> = 57
global SSL_CTRL_GET_TLSEXT_TICKET_KEYS: cint <comptime> = 58
global SSL_CTRL_SET_TLSEXT_TICKET_KEYS: cint <comptime> = 59
global SSL_CTRL_SET_TLSEXT_STATUS_REQ_CB: cint <comptime> = 63
global SSL_CTRL_SET_TLSEXT_STATUS_REQ_CB_ARG: cint <comptime> = 64
global SSL_CTRL_SET_TLSEXT_STATUS_REQ_TYPE: cint <comptime> = 65
global SSL_CTRL_GET_TLSEXT_STATUS_REQ_EXTS: cint <comptime> = 66
global SSL_CTRL_SET_TLSEXT_STATUS_REQ_EXTS: cint <comptime> = 67
global SSL_CTRL_GET_TLSEXT_STATUS_REQ_IDS: cint <comptime> = 68
global SSL_CTRL_SET_TLSEXT_STATUS_REQ_IDS: cint <comptime> = 69
global SSL_CTRL_GET_TLSEXT_STATUS_REQ_OCSP_RESP: cint <comptime> = 70
global SSL_CTRL_SET_TLSEXT_STATUS_REQ_OCSP_RESP: cint <comptime> = 71
global SSL_CTRL_SET_TLSEXT_TICKET_KEY_CB: cint <comptime> = 72
global SSL_CTRL_SET_TLS_EXT_SRP_USERNAME_CB: cint <comptime> = 75
global SSL_CTRL_SET_SRP_VERIFY_PARAM_CB: cint <comptime> = 76
global SSL_CTRL_SET_SRP_GIVE_CLIENT_PWD_CB: cint <comptime> = 77
global SSL_CTRL_SET_SRP_ARG: cint <comptime> = 78
global SSL_CTRL_SET_TLS_EXT_SRP_USERNAME: cint <comptime> = 79
global SSL_CTRL_SET_TLS_EXT_SRP_STRENGTH: cint <comptime> = 80
global SSL_CTRL_SET_TLS_EXT_SRP_PASSWORD: cint <comptime> = 81
global SSL_CTRL_GET_RI_SUPPORT: cint <comptime> = 76
global SSL_CTRL_CLEAR_MODE: cint <comptime> = 78
global SSL_CTRL_SET_NOT_RESUMABLE_SESS_CB: cint <comptime> = 79
global SSL_CTRL_GET_EXTRA_CHAIN_CERTS: cint <comptime> = 82
global SSL_CTRL_CLEAR_EXTRA_CHAIN_CERTS: cint <comptime> = 83
global SSL_CTRL_CHAIN: cint <comptime> = 88
global SSL_CTRL_CHAIN_CERT: cint <comptime> = 89
global SSL_CTRL_GET_GROUPS: cint <comptime> = 90
global SSL_CTRL_SET_GROUPS: cint <comptime> = 91
global SSL_CTRL_SET_GROUPS_LIST: cint <comptime> = 92
global SSL_CTRL_GET_SHARED_GROUP: cint <comptime> = 93
global SSL_CTRL_SET_SIGALGS: cint <comptime> = 97
global SSL_CTRL_SET_SIGALGS_LIST: cint <comptime> = 98
global SSL_CTRL_CERT_FLAGS: cint <comptime> = 99
global SSL_CTRL_CLEAR_CERT_FLAGS: cint <comptime> = 100
global SSL_CTRL_SET_CLIENT_SIGALGS: cint <comptime> = 101
global SSL_CTRL_SET_CLIENT_SIGALGS_LIST: cint <comptime> = 102
global SSL_CTRL_GET_CLIENT_CERT_TYPES: cint <comptime> = 103
global SSL_CTRL_SET_CLIENT_CERT_TYPES: cint <comptime> = 104
global SSL_CTRL_BUILD_CERT_CHAIN: cint <comptime> = 105
global SSL_CTRL_SET_VERIFY_CERT_STORE: cint <comptime> = 106
global SSL_CTRL_SET_CHAIN_CERT_STORE: cint <comptime> = 107
global SSL_CTRL_GET_PEER_SIGNATURE_NID: cint <comptime> = 108
global SSL_CTRL_GET_PEER_TMP_KEY: cint <comptime> = 109
global SSL_CTRL_GET_RAW_CIPHERLIST: cint <comptime> = 110
global SSL_CTRL_GET_EC_POINT_FORMATS: cint <comptime> = 111
global SSL_CTRL_GET_CHAIN_CERTS: cint <comptime> = 115
global SSL_CTRL_SELECT_CURRENT_CERT: cint <comptime> = 116
global SSL_CTRL_SET_CURRENT_CERT: cint <comptime> = 117
global SSL_CTRL_SET_DH_AUTO: cint <comptime> = 118
global SSL_CTRL_GET_EXTMS_SUPPORT: cint <comptime> = 122
global SSL_CTRL_SET_MIN_PROTO_VERSION: cint <comptime> = 123
global SSL_CTRL_SET_MAX_PROTO_VERSION: cint <comptime> = 124
global SSL_CTRL_SET_SPLIT_SEND_FRAGMENT: cint <comptime> = 125
global SSL_CTRL_SET_MAX_PIPELINES: cint <comptime> = 126
global SSL_CTRL_GET_TLSEXT_STATUS_REQ_TYPE: cint <comptime> = 127
global SSL_CTRL_GET_TLSEXT_STATUS_REQ_CB: cint <comptime> = 128
global SSL_CTRL_GET_TLSEXT_STATUS_REQ_CB_ARG: cint <comptime> = 129
global SSL_CTRL_GET_MIN_PROTO_VERSION: cint <comptime> = 130
global SSL_CTRL_GET_MAX_PROTO_VERSION: cint <comptime> = 131
global SSL_CTRL_GET_SIGNATURE_NID: cint <comptime> = 132
global SSL_CTRL_GET_TMP_KEY: cint <comptime> = 133
global SSL_CTRL_GET_NEGOTIATED_GROUP: cint <comptime> = 134
global SSL_CTRL_GET_IANA_GROUPS: cint <comptime> = 135
global SSL_CTRL_SET_RETRY_VERIFY: cint <comptime> = 136
global SSL_CTRL_GET_VERIFY_CERT_STORE: cint <comptime> = 137
global SSL_CTRL_GET_CHAIN_CERT_STORE: cint <comptime> = 138
global SSL_CTRL_GET0_IMPLEMENTED_GROUPS: cint <comptime> = 139
global SSL_CTRL_GET_SIGNATURE_NAME: cint <comptime> = 140
global SSL_CTRL_GET_PEER_SIGNATURE_NAME: cint <comptime> = 141
global SSL_CERT_SET_FIRST: cint <comptime> = 1
global SSL_CERT_SET_NEXT: cint <comptime> = 2
global SSL_CERT_SET_SERVER: cint <comptime> = 3
global SSL_CTRL_GET_SERVER_TMP_KEY: cint <comptime> = 109
global SSL_CTRL_GET_CURVES: cint <comptime> = 90
global SSL_CTRL_SET_CURVES: cint <comptime> = 91
global SSL_CTRL_SET_CURVES_LIST: cint <comptime> = 92
global SSL_CTRL_GET_SHARED_CURVE: cint <comptime> = 93
global SSL_SERVERINFOV1: cint <comptime> = 1
global SSL_SERVERINFOV2: cint <comptime> = 2
global function SSL_get_peer_certificate(s: *SSL): *X509 <cimport,nodecl> end
global SSL_CLIENT_HELLO_SUCCESS: cint <comptime> = 1
global SSL_CLIENT_HELLO_ERROR: cint <comptime> = 0
global SSL_CLIENT_HELLO_RETRY: cint <comptime> = -1
global SSL_READ_EARLY_DATA_ERROR: cint <comptime> = 0
global SSL_READ_EARLY_DATA_SUCCESS: cint <comptime> = 1
global SSL_READ_EARLY_DATA_FINISH: cint <comptime> = 2
global SSL_WRITE_FLAG_CONCLUDE: cint <comptime> = 1
global SSL_EARLY_DATA_NOT_SENT: cint <comptime> = 0
global SSL_EARLY_DATA_REJECTED: cint <comptime> = 1
global SSL_EARLY_DATA_ACCEPTED: cint <comptime> = 2
global function SSLv23_method(): *SSL_METHOD <cimport,nodecl> end
global function SSLv23_server_method(): *SSL_METHOD <cimport,nodecl> end
global function SSLv23_client_method(): *SSL_METHOD <cimport,nodecl> end
global function SSL_get0_session(ssl: *SSL): *SSL_SESSION <cimport,nodecl> end
global SSL_LISTENER_FLAG_NO_VALIDATE: cint <comptime> = 2
global SSL_ACCEPT_CONNECTION_NO_BLOCK: cint <comptime> = 1
global SSL_DOMAIN_FLAG_SINGLE_THREAD: cint <comptime> = 1
global SSL_DOMAIN_FLAG_MULTI_THREAD: cint <comptime> = 2
global SSL_DOMAIN_FLAG_THREAD_ASSISTED: cint <comptime> = 4
global SSL_DOMAIN_FLAG_BLOCKING: cint <comptime> = 8
global SSL_DOMAIN_FLAG_LEGACY_BLOCKING: cint <comptime> = 16
global SSL_STREAM_TYPE_NONE: cint <comptime> = 0
global SSL_STREAM_TYPE_READ: cint <comptime> = 1
global SSL_STREAM_TYPE_WRITE: cint <comptime> = 2
global SSL_STREAM_TYPE_BIDI: cint <comptime> = 3
global SSL_DEFAULT_STREAM_MODE_NONE: cint <comptime> = 0
global SSL_DEFAULT_STREAM_MODE_AUTO_BIDI: cint <comptime> = 1
global SSL_DEFAULT_STREAM_MODE_AUTO_UNI: cint <comptime> = 2
global SSL_STREAM_FLAG_UNI: cint <comptime> = 1
global SSL_STREAM_FLAG_NO_BLOCK: cint <comptime> = 2
global SSL_STREAM_FLAG_ADVANCE: cint <comptime> = 4
global SSL_INCOMING_STREAM_POLICY_AUTO: cint <comptime> = 0
global SSL_INCOMING_STREAM_POLICY_ACCEPT: cint <comptime> = 1
global SSL_INCOMING_STREAM_POLICY_REJECT: cint <comptime> = 2
global SSL_ACCEPT_STREAM_NO_BLOCK: cint <comptime> = 1
global SSL_SHUTDOWN_FLAG_RAPID: cint <comptime> = 1
global SSL_SHUTDOWN_FLAG_NO_STREAM_FLUSH: cint <comptime> = 2
global SSL_SHUTDOWN_FLAG_NO_BLOCK: cint <comptime> = 4
global SSL_SHUTDOWN_FLAG_WAIT_PEER: cint <comptime> = 8
global SSL_STREAM_STATE_NONE: cint <comptime> = 0
global SSL_STREAM_STATE_OK: cint <comptime> = 1
global SSL_STREAM_STATE_WRONG_DIR: cint <comptime> = 2
global SSL_STREAM_STATE_FINISHED: cint <comptime> = 3
global SSL_STREAM_STATE_RESET_LOCAL: cint <comptime> = 4
global SSL_STREAM_STATE_RESET_REMOTE: cint <comptime> = 5
global SSL_STREAM_STATE_CONN_CLOSED: cint <comptime> = 6
global SSL_CONN_CLOSE_FLAG_LOCAL: cint <comptime> = 1
global SSL_CONN_CLOSE_FLAG_TRANSPORT: cint <comptime> = 2
global SSL_VALUE_CLASS_GENERIC: cint <comptime> = 0
global SSL_VALUE_CLASS_FEATURE_REQUEST: cint <comptime> = 1
global SSL_VALUE_CLASS_FEATURE_PEER_REQUEST: cint <comptime> = 2
global SSL_VALUE_CLASS_FEATURE_NEGOTIATED: cint <comptime> = 3
global SSL_VALUE_NONE: cint <comptime> = 0
global SSL_VALUE_QUIC_STREAM_BIDI_LOCAL_AVAIL: cint <comptime> = 1
global SSL_VALUE_QUIC_STREAM_BIDI_REMOTE_AVAIL: cint <comptime> = 2
global SSL_VALUE_QUIC_STREAM_UNI_LOCAL_AVAIL: cint <comptime> = 3
global SSL_VALUE_QUIC_STREAM_UNI_REMOTE_AVAIL: cint <comptime> = 4
global SSL_VALUE_QUIC_IDLE_TIMEOUT: cint <comptime> = 5
global SSL_VALUE_EVENT_HANDLING_MODE: cint <comptime> = 6
global SSL_VALUE_STREAM_WRITE_BUF_SIZE: cint <comptime> = 7
global SSL_VALUE_STREAM_WRITE_BUF_USED: cint <comptime> = 8
global SSL_VALUE_STREAM_WRITE_BUF_AVAIL: cint <comptime> = 9
global SSL_VALUE_EVENT_HANDLING_MODE_INHERIT: cint <comptime> = 0
global SSL_VALUE_EVENT_HANDLING_MODE_IMPLICIT: cint <comptime> = 1
global SSL_VALUE_EVENT_HANDLING_MODE_EXPLICIT: cint <comptime> = 2
global SSL_POLL_EVENT_NONE: cint <comptime> = 0
global SSL_POLL_EVENT_F: cint <comptime> = 1
global SSL_POLL_EVENT_EL: cint <comptime> = 2
global SSL_POLL_EVENT_EC: cint <comptime> = 4
global SSL_POLL_EVENT_ECD: cint <comptime> = 8
global SSL_POLL_EVENT_ER: cint <comptime> = 16
global SSL_POLL_EVENT_EW: cint <comptime> = 32
global SSL_POLL_EVENT_R: cint <comptime> = 64
global SSL_POLL_EVENT_W: cint <comptime> = 128
global SSL_POLL_EVENT_IC: cint <comptime> = 256
global SSL_POLL_EVENT_ISB: cint <comptime> = 512
global SSL_POLL_EVENT_ISU: cint <comptime> = 1024
global SSL_POLL_EVENT_OSB: cint <comptime> = 2048
global SSL_POLL_EVENT_OSU: cint <comptime> = 4096
global SSL_POLL_EVENT_RW: cint <comptime> = 192
global SSL_POLL_EVENT_RE: cint <comptime> = 80
global SSL_POLL_EVENT_WE: cint <comptime> = 160
global SSL_POLL_EVENT_RWE: cint <comptime> = 240
global SSL_POLL_EVENT_E: cint <comptime> = 54
global SSL_POLL_EVENT_IS: cint <comptime> = 1536
global SSL_POLL_EVENT_ISE: cint <comptime> = 1540
global SSL_POLL_EVENT_I: cint <comptime> = 1792
global SSL_POLL_EVENT_OS: cint <comptime> = 6144
global SSL_POLL_EVENT_OSE: cint <comptime> = 6148
global SSL_POLL_FLAG_NO_HANDLE_EVENTS: cint <comptime> = 1
global SSL_SECOP_OTHER_TYPE: cuint <comptime> = 4294901760
global SSL_SECOP_OTHER_NONE: cint <comptime> = 0
global SSL_SECOP_OTHER_CIPHER: cint <comptime> = 65536
global SSL_SECOP_OTHER_CURVE: cint <comptime> = 131072
global SSL_SECOP_OTHER_DH: cint <comptime> = 196608
global SSL_SECOP_OTHER_PKEY: cint <comptime> = 262144
global SSL_SECOP_OTHER_SIGALG: cint <comptime> = 327680
global SSL_SECOP_OTHER_CERT: cint <comptime> = 393216
global SSL_SECOP_PEER: cint <comptime> = 4096
global SSL_SECOP_CIPHER_SUPPORTED: cint <comptime> = 65537
global SSL_SECOP_CIPHER_SHARED: cint <comptime> = 65538
global SSL_SECOP_CIPHER_CHECK: cint <comptime> = 65539
global SSL_SECOP_CURVE_SUPPORTED: cint <comptime> = 131076
global SSL_SECOP_CURVE_SHARED: cint <comptime> = 131077
global SSL_SECOP_CURVE_CHECK: cint <comptime> = 131078
global SSL_SECOP_TMP_DH: cint <comptime> = 262151
global SSL_SECOP_VERSION: cint <comptime> = 9
global SSL_SECOP_TICKET: cint <comptime> = 10
global SSL_SECOP_SIGALG_SUPPORTED: cint <comptime> = 327691
global SSL_SECOP_SIGALG_SHARED: cint <comptime> = 327692
global SSL_SECOP_SIGALG_CHECK: cint <comptime> = 327693
global SSL_SECOP_SIGALG_MASK: cint <comptime> = 327694
global SSL_SECOP_COMPRESSION: cint <comptime> = 15
global SSL_SECOP_EE_KEY: cint <comptime> = 393232
global SSL_SECOP_CA_KEY: cint <comptime> = 393233
global SSL_SECOP_CA_MD: cint <comptime> = 393234
global SSL_SECOP_PEER_EE_KEY: cint <comptime> = 397328
global SSL_SECOP_PEER_CA_KEY: cint <comptime> = 397329
global SSL_SECOP_PEER_CA_MD: cint <comptime> = 397330
global OPENSSL_INIT_NO_LOAD_SSL_STRINGS: clong <comptime> = 1048576
global OPENSSL_INIT_LOAD_SSL_STRINGS: clong <comptime> = 2097152
global OPENSSL_INIT_SSL_DEFAULT: clong <comptime> = 2097154
global SSL_TICKET_FATAL_ERR_MALLOC: cint <comptime> = 0
global SSL_TICKET_FATAL_ERR_OTHER: cint <comptime> = 1
global SSL_TICKET_NONE: cint <comptime> = 2
global SSL_TICKET_EMPTY: cint <comptime> = 3
global SSL_TICKET_NO_DECRYPT: cint <comptime> = 4
global SSL_TICKET_SUCCESS: cint <comptime> = 5
global SSL_TICKET_SUCCESS_RENEW: cint <comptime> = 6
global SSL_TICKET_RETURN_ABORT: cint <comptime> = 0
global SSL_TICKET_RETURN_IGNORE: cint <comptime> = 1
global SSL_TICKET_RETURN_IGNORE_RENEW: cint <comptime> = 2
global SSL_TICKET_RETURN_USE: cint <comptime> = 3
global SSL_TICKET_RETURN_USE_RENEW: cint <comptime> = 4
global ERR_TXT_MALLOCED: cint <comptime> = 1
global ERR_TXT_STRING: cint <comptime> = 2
global ERR_FLAG_MARK: cint <comptime> = 1
global ERR_FLAG_CLEAR: cint <comptime> = 2
global ERR_NUM_ERRORS: cint <comptime> = 16
global ERR_LIB_NONE: cint <comptime> = 1
global ERR_LIB_SYS: cint <comptime> = 2
global ERR_LIB_BN: cint <comptime> = 3
global ERR_LIB_RSA: cint <comptime> = 4
global ERR_LIB_DH: cint <comptime> = 5
global ERR_LIB_EVP: cint <comptime> = 6
global ERR_LIB_BUF: cint <comptime> = 7
global ERR_LIB_OBJ: cint <comptime> = 8
global ERR_LIB_PEM: cint <comptime> = 9
global ERR_LIB_DSA: cint <comptime> = 10
global ERR_LIB_X509: cint <comptime> = 11
global ERR_LIB_ASN1: cint <comptime> = 13
global ERR_LIB_CONF: cint <comptime> = 14
global ERR_LIB_CRYPTO: cint <comptime> = 15
global ERR_LIB_EC: cint <comptime> = 16
global ERR_LIB_SSL: cint <comptime> = 20
global ERR_LIB_BIO: cint <comptime> = 32
global ERR_LIB_PKCS7: cint <comptime> = 33
global ERR_LIB_X509V3: cint <comptime> = 34
global ERR_LIB_PKCS12: cint <comptime> = 35
global ERR_LIB_RAND: cint <comptime> = 36
global ERR_LIB_DSO: cint <comptime> = 37
global ERR_LIB_ENGINE: cint <comptime> = 38
global ERR_LIB_OCSP: cint <comptime> = 39
global ERR_LIB_UI: cint <comptime> = 40
global ERR_LIB_COMP: cint <comptime> = 41
global ERR_LIB_ECDSA: cint <comptime> = 42
global ERR_LIB_ECDH: cint <comptime> = 43
global ERR_LIB_OSSL_STORE: cint <comptime> = 44
global ERR_LIB_FIPS: cint <comptime> = 45
global ERR_LIB_CMS: cint <comptime> = 46
global ERR_LIB_TS: cint <comptime> = 47
global ERR_LIB_HMAC: cint <comptime> = 48
global ERR_LIB_CT: cint <comptime> = 50
global ERR_LIB_ASYNC: cint <comptime> = 51
global ERR_LIB_KDF: cint <comptime> = 52
global ERR_LIB_SM2: cint <comptime> = 53
global ERR_LIB_ESS: cint <comptime> = 54
global ERR_LIB_PROP: cint <comptime> = 55
global ERR_LIB_CRMF: cint <comptime> = 56
global ERR_LIB_PROV: cint <comptime> = 57
global ERR_LIB_CMP: cint <comptime> = 58
global ERR_LIB_OSSL_ENCODER: cint <comptime> = 59
global ERR_LIB_OSSL_DECODER: cint <comptime> = 60
global ERR_LIB_HTTP: cint <comptime> = 61
global ERR_LIB_USER: cint <comptime> = 128
global ERR_SYSTEM_MASK: cuint <comptime> = 2147483647
global ERR_LIB_OFFSET: clong <comptime> = 23
global ERR_LIB_MASK: cint <comptime> = 255
global ERR_RFLAGS_OFFSET: clong <comptime> = 18
global ERR_RFLAGS_MASK: cint <comptime> = 31
global ERR_REASON_MASK: cint <comptime> = 8388607
global ERR_RFLAG_FATAL: cint <comptime> = 262144
global ERR_RFLAG_COMMON: cint <comptime> = 524288
global ERR_R_SYS_LIB: cint <comptime> = 524290
global ERR_R_BN_LIB: cint <comptime> = 524291
global ERR_R_RSA_LIB: cint <comptime> = 524292
global ERR_R_DH_LIB: cint <comptime> = 524293
global ERR_R_EVP_LIB: cint <comptime> = 524294
global ERR_R_BUF_LIB: cint <comptime> = 524295
global ERR_R_OBJ_LIB: cint <comptime> = 524296
global ERR_R_PEM_LIB: cint <comptime> = 524297
global ERR_R_DSA_LIB: cint <comptime> = 524298
global ERR_R_X509_LIB: cint <comptime> = 524299
global ERR_R_ASN1_LIB: cint <comptime> = 524301
global ERR_R_CONF_LIB: cint <comptime> = 524302
global ERR_R_CRYPTO_LIB: cint <comptime> = 524303
global ERR_R_EC_LIB: cint <comptime> = 524304
global ERR_R_SSL_LIB: cint <comptime> = 524308
global ERR_R_BIO_LIB: cint <comptime> = 524320
global ERR_R_PKCS7_LIB: cint <comptime> = 524321
global ERR_R_X509V3_LIB: cint <comptime> = 524322
global ERR_R_PKCS12_LIB: cint <comptime> = 524323
global ERR_R_RAND_LIB: cint <comptime> = 524324
global ERR_R_DSO_LIB: cint <comptime> = 524325
global ERR_R_ENGINE_LIB: cint <comptime> = 524326
global ERR_R_UI_LIB: cint <comptime> = 524328
global ERR_R_ECDSA_LIB: cint <comptime> = 524330
global ERR_R_OSSL_STORE_LIB: cint <comptime> = 524332
global ERR_R_CMS_LIB: cint <comptime> = 524334
global ERR_R_TS_LIB: cint <comptime> = 524335
global ERR_R_CT_LIB: cint <comptime> = 524338
global ERR_R_PROV_LIB: cint <comptime> = 524345
global ERR_R_ESS_LIB: cint <comptime> = 524342
global ERR_R_CMP_LIB: cint <comptime> = 524346
global ERR_R_OSSL_ENCODER_LIB: cint <comptime> = 524347
global ERR_R_OSSL_DECODER_LIB: cint <comptime> = 524348
global ERR_R_FATAL: cint <comptime> = 786432
global ERR_R_MALLOC_FAILURE: cint <comptime> = 786688
global ERR_R_SHOULD_NOT_HAVE_BEEN_CALLED: cint <comptime> = 786689
global ERR_R_PASSED_NULL_PARAMETER: cint <comptime> = 786690
global ERR_R_INTERNAL_ERROR: cint <comptime> = 786691
global ERR_R_DISABLED: cint <comptime> = 786692
global ERR_R_INIT_FAIL: cint <comptime> = 786693
global ERR_R_PASSED_INVALID_ARGUMENT: cint <comptime> = 524550
global ERR_R_OPERATION_FAIL: cint <comptime> = 786695
global ERR_R_INVALID_PROVIDER_FUNCTIONS: cint <comptime> = 786696
global ERR_R_INTERRUPTED_OR_CANCELLED: cint <comptime> = 524553
global ERR_R_NESTED_ASN1_ERROR: cint <comptime> = 524554
global ERR_R_MISSING_ASN1_EOS: cint <comptime> = 524555
global ERR_R_UNSUPPORTED: cint <comptime> = 524556
global ERR_R_FETCH_FAILED: cint <comptime> = 524557
global ERR_R_INVALID_PROPERTY_DEFINITION: cint <comptime> = 524558
global ERR_R_UNABLE_TO_GET_READ_LOCK: cint <comptime> = 786703
global ERR_R_UNABLE_TO_GET_WRITE_LOCK: cint <comptime> = 786704
global ERR_MAX_DATA_SIZE: cint <comptime> = 1024
global SSLEAY_VERSION: cint <comptime> = 0
global SSLEAY_CFLAGS: cint <comptime> = 1
global SSLEAY_BUILT_ON: cint <comptime> = 2
global SSLEAY_PLATFORM: cint <comptime> = 3
global SSLEAY_DIR: cint <comptime> = 4
global function SSL_library_init()
  OPENSSL_init_ssl(0, nilptr)
end
global function SSL_load_error_strings()
  OPENSSL_init_ssl(0x00200000 | 0x00000002, nilptr)
end
global function OpenSSL_add_all_algorithms()
  OPENSSL_init_ssl(0x00000004 | 0x00000008, nilptr)
end
global function SSL_set_tlsext_host_name(ssl: *SSL, host: cstring): clong
  return SSL_ctrl(ssl, 55, 0, (@*void)(host))
end
