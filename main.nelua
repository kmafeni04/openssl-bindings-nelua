##[==[
-- import Nelua Decl plugin and filesystem utils.
local nldecl = require 'nelua.plugins.nldecl'
local fs = require 'nelua.utils.fs'

-- generate nelua bindings file
nldecl.generate_bindings_file {
  output_file = 'openssl.nelua',
  parse_includes = {"<openssl/ssl.h>", "<openssl/err.h>"},
  include_names = {"^OPEN", "^open" ,"^ssl", "^SSL", "^TLS", "tls", "ERR"},
  output_head = [=[##[[
  cinclude "<openssl/ssl.h>"
  cinclude "<openssl/err.h>"
  linklib "ssl"
  linklib "crypto"
]]
]=],
output_foot = [[
global function SSL_library_init()
  OPENSSL_init_ssl(0, nilptr)
end
global function SSL_load_error_strings()
  OPENSSL_init_ssl(0x00200000 | 0x00000002, nilptr)
end
global function OpenSSL_add_all_algorithms()
  OPENSSL_init_ssl(0x00000004 | 0x00000008, nilptr)
end
global function SSL_set_tlsext_host_name(ssl: *SSL, host: cstring): clong
  return SSL_ctrl(ssl, 55, 0, (@*void)(host))
end
]]
}
]==]
